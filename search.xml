<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo不能显示mermaid流程图</title>
    <url>/HeronWan.github.io/2020/08/31/hexo%E9%83%A8%E7%BD%B2%E4%B8%8D%E8%83%BD%E6%98%BE%E7%A4%BAmermaid%E6%B5%81%E7%A8%8B%E5%9B%BE/</url>
    <content><![CDATA[<h1 id="hexo修复显示mermaid流程图"><a class="markdownIt-Anchor" href="#hexo修复显示mermaid流程图"></a> hexo修复显示mermaid流程图</h1>
<p>这两天本来想着要好好的做做笔记，谢谢博客，把自己的博客系统好好的运营起来，但是却遇到了一系列棘手的问题，一开始不能运行，慢慢的解决后，然后斜率一篇哈夫曼的笔记，在这篇文章中，我就用了mermaid语法画的二叉树图，然后在typora里面能够轻松且正常的显示和编辑，但是部署到hexo后，图形却无法正常渲染出来。百度搜集相关问题，今天整理出我的解决方法。</p>
<a id="more"></a>
<h3 id="安装依赖有两种方式"><a class="markdownIt-Anchor" href="#安装依赖有两种方式"></a> 安装依赖，有两种方式</h3>
<ol>
<li>使用yarn安装
<ul>
<li>npm install yarn -g //全局安装yarn ，以备后用</li>
<li>yarn add mermaid //使用yarn安装mermaid依赖</li>
<li>yarn add mermaid --dev //将依赖添加到开发环境中</li>
</ul>
</li>
<li>使用npm 安装依赖
<ul>
<li>npm install hexo-filter-mermaid-diagrams</li>
</ul>
</li>
</ol>
<p>添加 配置和注入js</p>
<p>1，添加配置</p>
<p>​	这里和百度的出来有些不一样，百度出来的结果就是直接在根目录下面 的_config.yml 直接添加配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># mermaid chart</span><br><span class="line">mermaid: ## mermaid url https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid</span><br><span class="line">  enable: true  # default true</span><br><span class="line">  version: &quot;8.7.0&quot; # default v7.1.2</span><br><span class="line">  options:  # find more api options from https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid&#x2F;blob&#x2F;master&#x2F;src&#x2F;mermaidAPI.js</span><br><span class="line">    #startOnload: true  &#x2F;&#x2F; default true</span><br></pre></td></tr></table></figure>
<p>​	但是在我这里并没有奏效，经过我的折腾才发现，next主题里面的已经有mermaid配置（已经设置为了enable: false） ，会将根目录下面的配置覆盖,所以没有奏效。既然知道了配置被覆盖的原因，那上面的配置就没必要添加了，直接修改next主题里面的配置将false改为true即可。</p>
<p>2，注入js使得配置生效</p>
<p>找到 theme/next/layout/_partials/footer.swig 文件 并打开，然后在末尾添上如下的代码即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.mermaid.enable %&#125;</span><br><span class="line">  &lt;script src&#x3D;&#39;https:&#x2F;&#x2F;unpkg.com&#x2F;mermaid@&#123;&#123; theme.mermaid.version &#125;&#125;&#x2F;dist&#x2F;mermaid.min.js&#39;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    if (window.mermaid) &#123;</span><br><span class="line">      mermaid.initialize(&#123;&#123;theme.mermaid.options &#125;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>最终生效</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/HeronWan.github.io/2020/08/30/hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>hexo博客相关</category>
      </categories>
  </entry>
  <entry>
    <title>hexo博客相关/5.hexo使用</title>
    <url>/HeronWan.github.io/2020/08/30/hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/5.hexo%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="hexo搭建个人博客与优化"><a class="markdownIt-Anchor" href="#hexo搭建个人博客与优化"></a> hexo搭建个人博客与优化</h1>
<h2 id="搭建流程"><a class="markdownIt-Anchor" href="#搭建流程"></a> 搭建流程</h2>
<a id="more"></a>
<ol>
<li>
<p>需要本地预先安装好安装好git和node环境</p>
</li>
<li>
<p>在node全局环境中安装hexo-cli手脚架<code>npm install -g hexo-cli</code></p>
</li>
<li>
<p>在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：</p>
<ul>
<li><code>hexo init</code>      # 初始化</li>
<li><code>npm install</code>    # 安装组件</li>
</ul>
</li>
<li>
<p>启动本地进行预览</p>
<ul>
<li><code>hexo g</code> 生成编译文件</li>
<li><code>hexo s</code> 启动服务器，访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>，出现 Hexo 默认页面，本地博客安装成功！</li>
</ul>
</li>
<li>
<p>在码云上创建gitee pages</p>
</li>
<li>
<p>配置文件</p>
</li>
<li>
<p>部署 命令<code>hexo deploy</code><br />
<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo g</code></p>
</li>
</ol>
<h2 id="配置文件说明"><a class="markdownIt-Anchor" href="#配置文件说明"></a> 配置文件说明</h2>
]]></content>
      <categories>
        <category>hexo博客相关</category>
      </categories>
  </entry>
  <entry>
    <title>hexo博客相关/readme</title>
    <url>/HeronWan.github.io/2020/08/30/hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/readme/</url>
    <content><![CDATA[<h1 id="mynotes"><a class="markdownIt-Anchor" href="#mynotes"></a> <a href="https://heronwan.github.io/">MyNotes</a></h1>
<h2 id="相关命令"><a class="markdownIt-Anchor" href="#相关命令"></a> 相关命令</h2>
<ul>
<li>
<p><code>hexo c</code> //清除public中生成的编译文件</p>
</li>
<li>
<p><code>hexo g</code> //生成public编译文件</p>
</li>
<li>
<p><code>hexo s</code> //启动本地服务，浏览器中可查看项目</p>
</li>
<li>
<p><code>hexo d</code> //项目部署远程，将生成的public中的文件推送到远程master分支中</p>
</li>
<li>
<p><code>hexo c</code> &amp;&amp; hexo g &amp;&amp;hexo d &amp;&amp; hexo s</p>
</li>
<li>
<p><code>git pull</code> //同步远程的修改</p>
</li>
<li>
<p><code>git add .</code> //将本地修改添加到暂存区</p>
</li>
<li>
<p><code>git commit -m &quot;提交信息&quot;</code> // 将修改提交到本地仓库</p>
</li>
<li>
<p><code>git push origin hexo</code> //推送到远程的hexo分支中</p>
</li>
</ul>
 <a id="more"></a>
<ol>
<li>一键部署：</li>
</ol>
<p>hexo c &amp;&amp; hexo g &amp;&amp; hexo g &amp;&amp; hexo s</p>
<ol start="2">
<li>博客迁移</li>
</ol>
<blockquote>
<p>git clone <a href="https://github.com/HeronWan/HeronWan.github.io.git" target="_blank" rel="noopener">https://github.com/HeronWan/HeronWan.github.io.git</a> hexo # 克隆远程仓库</p>
</blockquote>
<blockquote>
<p>npm install -g hexo-cli #安装全局hexo环境，可提供hexo c/g/s/d命令使用</p>
</blockquote>
<blockquote>
<p>npm install # 本地安装依赖（会将package.json中的依赖全部安装）</p>
</blockquote>
<ol start="3">
<li>同步博客源码：</li>
</ol>
<p>git add . &amp;&amp; git commit -m “some changes” &amp;&amp; git push origin hexo</p>
<h2 id="博客源码维护"><a class="markdownIt-Anchor" href="#博客源码维护"></a> 博客源码维护</h2>
<p>该仓库中有两个分支：</p>
<ol>
<li>
<p>master负责保存编译好了的部署文件，在本地执行“hexo d”就会自动更新部署</p>
</li>
<li>
<p>hexo保存的是该仓库的源码，包括配置文件和md文件以及其他页面的源码。在本地修改可通过git命令提交维护。</p>
</li>
</ol>
<h2 id="todos"><a class="markdownIt-Anchor" href="#todos"></a> todos</h2>
<ol>
<li>
<p>leetcode刷题</p>
</li>
<li>
<ol start="2">
<li>opencv实战</li>
</ol>
</li>
<li>
<p>动手学深度学习pytorch实战</p>
</li>
</ol>
<h2 id="搭建流程"><a class="markdownIt-Anchor" href="#搭建流程"></a> 搭建流程</h2>
<ol>
<li>
<p>需要本地预先安装好安装好git和node环境</p>
</li>
<li>
<p>在node全局环境中安装hexo-cli手脚架<code>npm install -g hexo-cli</code></p>
</li>
<li>
<p>在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：</p>
</li>
</ol>
<ul>
<li>
<p><code>hexo init</code>   # 初始化</p>
</li>
<li>
<p><code>npm install</code>  # 安装组件</p>
</li>
</ul>
<ol start="4">
<li>启动本地进行预览</li>
</ol>
<ul>
<li>
<p><code>hexo g</code> 生成编译文件</p>
</li>
<li>
<p><code>hexo s</code> 启动服务器，访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>，出现 Hexo 默认页面，本地博客安装成功！</p>
</li>
</ul>
<ol start="5">
<li>
<p>在码云上创建gitee pages</p>
</li>
<li>
<p>配置文件</p>
</li>
<li>
<p>部署 命令<code>hexo d</code></p>
</li>
</ol>
<p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo g</code></p>
]]></content>
      <categories>
        <category>hexo博客相关</category>
      </categories>
      <tags>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript最佳实践</title>
    <url>/HeronWan.github.io/2020/08/30/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<h1 id="最佳实践"><a class="markdownIt-Anchor" href="#最佳实践"></a> 最佳实践</h1>
<p>​						--《JavaScript高级程序设计》笔记</p>
<h2 id="一可维护性"><a class="markdownIt-Anchor" href="#一可维护性"></a> 一，可维护性</h2>
<a id="more"></a>
<ol>
<li>
<p>什么是可维护性？</p>
<ul>
<li>可理解性 — 其他人可以接手代码并理解它的意图。</li>
<li>直观性 — 代码中的东西一看就能明白，不管其操作过程多么复杂</li>
<li>可适应性 — 代码以一种数据上的变化不要求完全重写的方法撰写</li>
<li>可扩展性— 在代码架构上已考虑在未来允许对核心功能进行扩展</li>
<li>可调式性— 的出错失时，代码可以给予你足够的信息来尽可能直接地确定问题所在。</li>
</ul>
</li>
<li>
<p>代码约定：</p>
<ul>
<li>可读性
<ul>
<li>缩进</li>
<li>注释</li>
</ul>
</li>
<li>变量和函数命名
<ul>
<li>变量名应该为名词，如car</li>
<li>函数名为动词开始 ，如 getName(), setName()</li>
<li>变量和函数都应该使用合乎逻辑的名字</li>
</ul>
</li>
<li>变量类型透明 （推荐第一种 和 第二种）
<ul>
<li>初始化</li>
<li>匈牙利标记法—在变量名前面添加前缀：
<ul>
<li>o代表对象</li>
<li>s字符串</li>
<li>i整数</li>
<li>f浮点数</li>
<li>b布尔值</li>
</ul>
</li>
<li>指定类型的注释</li>
</ul>
</li>
</ul>
</li>
<li>
<p>松散耦合 – 某部分过分依赖另一部分，代码就会 耦合过紧，难以维护</p>
<ul>
<li>解耦js/html</li>
<li>解耦js/css</li>
<li>解耦应用逻辑/事件处理程序
<ul>
<li>问题：某个事件处理程序除了包含应用逻辑，还进行事件处理，会让调试变得困难</li>
<li>解决：分离应用逻辑和事件处理程序，两者分别处理各自的东西。一个事件处理程序应该从事件对象中提取相关信息，并将这些信息传递到处理应用逻辑的某个方法中</li>
<li>好处：容易更改触发特定过程的事件。容易进行调试代码，创建单元测试等。</li>
</ul>
</li>
</ul>
</li>
<li>
<p>编程实践</p>
<ul>
<li>尊重对象所有权</li>
<li>减少全局变量</li>
<li>进行充分的类型检测</li>
<li>使用一个常量命名空间，便于统一管理。</li>
</ul>
</li>
</ol>
<h2 id="二性能优化"><a class="markdownIt-Anchor" href="#二性能优化"></a> 二，性能优化</h2>
<ol>
<li>注意作用域
<ol>
<li>避免全局查找，使用局部变量指向已经查找好的全局变量</li>
<li>避免使用with</li>
</ol>
</li>
<li>选择正确的方法
<ol>
<li>避免不必要的属性查询，可以使用数组查询
<ul>
<li>属性查询的复杂度为 O(n),数组查询的复杂度O(1)</li>
</ul>
</li>
<li>优化循环
<ol>
<li>减值迭代</li>
<li>简化终止条件</li>
<li>简化循环体</li>
<li>使用后测试循环 – do{} while 语句</li>
</ol>
</li>
<li>避免双重解释，-- 不要使用类似eval() 方式解析</li>
<li>性能的其他注意事项
<ol>
<li>原生方法较快</li>
<li>switch语句较快</li>
<li>位运算较快</li>
</ol>
</li>
</ol>
</li>
<li>最小化语句数 – 尽可能的合并语句
<ol>
<li>多个变量声明</li>
<li>插入迭代值</li>
<li>使用数组和对象字面量</li>
</ol>
</li>
<li>优化DOM交互
<ol>
<li>最小化现场更新</li>
<li>使用innerHTML</li>
<li>使用事件代理
<ol>
<li>任何可以冒泡的事件都不仅仅可以在时间目标上进行处理，目标的任何祖先节点上也能处理。</li>
</ol>
</li>
<li>注意HTMLCollection ,对其查询开销很昂贵，减少查询次数</li>
</ol>
</li>
</ol>
<h2 id="三部署"><a class="markdownIt-Anchor" href="#三部署"></a> 三，部署</h2>
]]></content>
      <categories>
        <category>前端笔记</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>哈夫曼编码笔记</title>
    <url>/HeronWan.github.io/2020/08/31/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/</url>
    <content><![CDATA[<h1 id="哈弗曼编码"><a class="markdownIt-Anchor" href="#哈弗曼编码"></a> 哈弗曼编码</h1>
<blockquote>
<p>最近在笔试中大概遇到这样的一道题：</p>
<p>​	<strong>给定字符集{a,b,c,d}组成的字符串 “aaabbbdaaabdcc” 的最佳编码的长度是多少？</strong></p>
<p>看到最佳编码一开始我也是想到了要用哈弗曼编码，但是在答题过程中，始终没有回忆起来哈弗曼编码的流程是什么样的。</p>
<p>事后百度，然后自己再来总结一遍。</p>
<a id="more"></a>
</blockquote>
<p>1.首先统计每个字符的数量</p>
<table>
<thead>
<tr>
<th style="text-align:center">字符</th>
<th style="text-align:center">a</th>
<th style="text-align:center">b</th>
<th style="text-align:center">c</th>
<th style="text-align:center">d</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">出现数量（权重）</td>
<td style="text-align:center">6</td>
<td style="text-align:center">4</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<p>然后 将字符根据权重从小到大进行排序，，每次选出最小的两个权重，进行相加<br />
第一步，将最小的1放在左边，次小的2放在右边，求出和作为父节点，并将父节点添加到权值数组中形成新数组[3,4,6 ]，并在其中继续找出最小的两个数</p>
<pre class="mermaid">graph TB;
d((1))
c((2))

3((3))-->d
3((3))-->c

b((4))
a((6))</pre>
<p>找到的两个最小的数 3，和次小的4，求出和7作为父节点，依次类推</p>
<pre class="mermaid">graph TB;
d((1))
c((2))

3((3))-->d
3((3))-->c

b((4))
a((6))
7((7))-->b
7-->3
13-->a
13-->7</pre>
<p>然后进行对路径进行编号</p>
<pre class="mermaid">graph TB;
%% 节点
d((1)) 
c((2))
%% 结构
3((3)) -->|1| d
3((3)) -->|0| c

b((4))
a((6))
7((7))--0-->b
7((7))--1-->3
13((13))--1-->a
13--0-->7</pre>
<p>根据路径的编号，那么叶子结点所对应的字符的编码就是从根到当前的叶子结点的路径了</p>
<p>字符所对应的编码如下所示：</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>a</th>
<th>b</th>
<th>c</th>
<th>d</th>
</tr>
</thead>
<tbody>
<tr>
<td>编码</td>
<td>1</td>
<td>00</td>
<td>010</td>
<td>011</td>
</tr>
<tr>
<td>权重（频率）</td>
<td>6</td>
<td>4</td>
<td>2</td>
<td>1</td>
</tr>
<tr>
<td>字符串中当前字符的总编码长度</td>
<td>6</td>
<td>8</td>
<td>6</td>
<td>3</td>
</tr>
</tbody>
</table>
<p>最终求出的最佳编码长度为 1 * 6 + 2 * 4 + 3 * 2 + 3 * 1 =  13，其实就是哈夫曼树根节点的值。</p>
]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
  </entry>
  <entry>
    <title>leetcode刷题总结</title>
    <url>/HeronWan.github.io/2020/08/30/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/leetcode%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="总结经验"><a class="markdownIt-Anchor" href="#总结经验"></a> 总结经验</h2>
<ul>
<li>先测试用例，后编码</li>
<li>先整体思路，后局部。</li>
<li>用注释标记思路和需要注意的地方。</li>
</ul>
<a id="more"></a>
<h2 id="掌握的知识点"><a class="markdownIt-Anchor" href="#掌握的知识点"></a> 掌握的知识点</h2>
<ol>
<li>
<p>广搜</p>
</li>
<li>
<p>深搜</p>
</li>
<li>
<p>链表</p>
</li>
<li>
<p>栈</p>
</li>
<li>
<p>数组</p>
</li>
<li>
<p>队列</p>
</li>
<li>
<p>简单的动态规划</p>
</li>
</ol>
<h2 id="需要加强的知识点"><a class="markdownIt-Anchor" href="#需要加强的知识点"></a> 需要加强的知识点</h2>
<ol>
<li>回溯法</li>
<li>全排列</li>
<li>全排列的次序</li>
<li>快速排序和多路快排</li>
<li>并查集</li>
<li>背包问题</li>
</ol>
]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
  </entry>
  <entry>
    <title>康托展开</title>
    <url>/HeronWan.github.io/2020/08/30/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%BA%B7%E6%8B%93%E5%B1%95%E5%BC%80%E4%B8%8E%E5%BA%B7%E6%8B%93%E9%80%86%E5%B1%95%E5%BC%80/</url>
    <content><![CDATA[<h1 id="康托展开和逆康托展开"><a class="markdownIt-Anchor" href="#康托展开和逆康托展开"></a> 康托展开和逆康托展开</h1>
<p>题目详见：<a href="https://leetcode-cn.com/problems/permutation-sequence/" target="_blank" rel="noopener">leetcode060. 第k个排列</a></p>
<p>该题就是求n个数全排列中的第k的排序，查看评论区才知道有一个叫做康拓展开的概念，我从来都没有接触过，所以现在做下笔记，学习康拓排序，来解决这个leetcode题。</p>
<a id="more"></a>
<h2 id="康拓排序"><a class="markdownIt-Anchor" href="#康拓排序"></a> 康拓排序</h2>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo>=</mo><msub><mi>a</mi><mi>n</mi></msub><mo>×</mo><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><mi mathvariant="normal">−</mi><mn>1</mn><mo>×</mo><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">−</mi><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mo>×</mo><mn>0</mn><mo stretchy="false">!</mo></mrow><annotation encoding="application/x-tex">rank=a_n\times(n−1)!+a_n−1\times(n−2)!+⋯+a_1\times0!
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">−</span><span class="mord">2</span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mclose">!</span></span></span></span></span></p>
<p>其中, a[i]为整数，并且0 &lt;= a[i] &lt;= i, 0 &lt;= i &lt; n,  <code>rank</code>   表示当前的序列在全排列中排第几个，这就是康托展开。</p>
<p>康托展开 就是已知序列，求出它的排列名次</p>
<h2 id="逆康拓排序"><a class="markdownIt-Anchor" href="#逆康拓排序"></a> 逆康拓排序</h2>
<p>逆康拓排序就是已知排列的名次，求出所对应的序列。</p>
<h2 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h2>
<p>因为序列和名次是一一对应的，所以可以用来压缩 字符串</p>
]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
  </entry>
  <entry>
    <title>设计模式笔记</title>
    <url>/HeronWan.github.io/2020/08/31/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="设计模式"><a class="markdownIt-Anchor" href="#设计模式"></a> 设计模式</h1>
<p>笔试中遇到过问设计模式中的依赖倒置原则是什么？</p>
<p>所以今天我就来总结下设计模式中比较常见的设计模式</p>
<a id="more"></a>
]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
  </entry>
  <entry>
    <title>guns笔记</title>
    <url>/HeronWan.github.io/2020/08/30/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/guns%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="大道至简"><a class="markdownIt-Anchor" href="#大道至简"></a> 大道至简</h1>
<h2 id="目标系统架构师系列课程"><a class="markdownIt-Anchor" href="#目标系统架构师系列课程"></a> 目标：系统架构师系列课程</h2>
<a id="more"></a>
<h2 id="系统高可用"><a class="markdownIt-Anchor" href="#系统高可用"></a> 系统高可用：</h2>
<ul>
<li>负载均衡</li>
<li>限流措施</li>
<li>分布式事务</li>
<li>分布式session</li>
<li>压力测试</li>
</ul>
<h2 id="系统高并发"><a class="markdownIt-Anchor" href="#系统高并发"></a> 系统高并发</h2>
<ul>
<li>缓存应用</li>
<li>异步并发处理</li>
<li>http缓存</li>
<li>jvm的优化</li>
<li>队列应用</li>
<li>动静分离</li>
</ul>
<h2 id="构建应用"><a class="markdownIt-Anchor" href="#构建应用"></a> 构建应用</h2>
<ul>
<li>目标：快速构建应用系统</li>
<li>引入guns框架</li>
</ul>
<hr />
<h1 id="guns入门"><a class="markdownIt-Anchor" href="#guns入门"></a> guns入门</h1>
<h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2>
<ul>
<li>快速构建后台管理系统的开源框架</li>
<li>guns默认提供诸多业务系统的基本功能</li>
<li>guns集成诸多优秀开源框架</li>
</ul>
<h2 id="权限管理"><a class="markdownIt-Anchor" href="#权限管理"></a> 权限管理</h2>
<ul>
<li>用户管理</li>
<li>角色管理</li>
<li>部门管理</li>
<li>菜单管理</li>
<li>字典管理</li>
<li>业务日志</li>
<li>登录日志</li>
<li>监控日志</li>
<li>通知管理</li>
<li>代码生成</li>
</ul>
<h2 id="guns部署"><a class="markdownIt-Anchor" href="#guns部署"></a> guns部署</h2>
<ul>
<li>
<p>使用idea open-&gt;guns-parents</p>
</li>
<li>
<p>修改数据源<br />
目标：guns-admin\src\main\resources\application.yml<br><br />
修改内容：<br><br />
修改端口，修改连接本地数据库账户密码<br />
[1] spring.datasource<br><br />
[2] guns.flowable.datasource<br><br />
[3] guns.flowable.muti-datasource</p>
</li>
<li>
<p>启动guns：</p>
<ol>
<li>
<p>运行java文件【spring boot】:<br><br />
guns-admin\src\main\java\com\stylefeng\guns\GunsApplication.java\com\stylefeng\guns\GunsApplication<br><br />
run as即可</p>
</li>
<li>
<p>直接运行jar文件<br><br />
2.1 对guns进行打包部署<br><br />
2.1.1 找到guns-parents<br><br />
2.1.2 运行命令 mvn clean package -Dmaven.test.skip=true<br />
2.1.3 拷贝jar包至运行目录<br />
java -jar guns-admin-1.0.0-SNAPSHOT.jar</p>
</li>
<li>
<p>运行war包<br />
3.1. 修改guns-admin中的pom文件打包方式<br />
3.2. 对guns进行打包部署<br />
3.2.1  找到guns-parents<br><br />
3.2.2 运行命令 mvn clean package -Dmaven.test.skip=true<br />
3.2.3 拷贝war包至web服务器的webapp目录中<br />
java -jar guns-admin-1.0.0-SNAPSHOT.jar</p>
</li>
</ol>
</li>
</ul>
<h1 id="guns结构组成"><a class="markdownIt-Anchor" href="#guns结构组成"></a> guns结构组成</h1>
<h2 id="技术组成"><a class="markdownIt-Anchor" href="#技术组成"></a> 技术组成</h2>
<ul>
<li>spring boot</li>
<li>mybatis-plus</li>
<li>swagger</li>
<li>shiro</li>
<li>spring mvc</li>
</ul>
<h2 id="模块组成"><a class="markdownIt-Anchor" href="#模块组成"></a> 模块组成</h2>
<ul>
<li>guns-parent:guns的maven父工程</li>
<li>guns-admin:guns的业务子模块</li>
<li>guns-rest：guns的restful子模块</li>
</ul>
<h1 id="展望"><a class="markdownIt-Anchor" href="#展望"></a> 展望</h1>
<ol>
<li>guns的rest和权限</li>
<li>将业务代码放置在tomcat中</li>
<li>tomcat集群优化和搭建<br />
msm-&gt; memcached-session-manager[分布式session处理]<br />
memcached-&gt;最好的缓存管理中间件</li>
</ol>
]]></content>
      <categories>
        <category>软件与工具使用</category>
      </categories>
  </entry>
  <entry>
    <title>git常见问题汇总</title>
    <url>/HeronWan.github.io/2020/08/30/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="git常见问题汇"><a class="markdownIt-Anchor" href="#git常见问题汇"></a> git常见问题汇</h1>
<h2 id="1-git怎么快捷提交到远程"><a class="markdownIt-Anchor" href="#1-git怎么快捷提交到远程"></a> 1. git怎么快捷提交到远程</h2>
<p>有时候只是修改了一个简单的地方，但是提交却要好几行才能完成</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -am <span class="string">"change some text"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<p>能不能把这几句合并成一句，以后再也不用桥一些繁琐的命令，以提高工作效率<br />
当然可以，如下：</p>
<a id="more"></a>
<blockquote>
<p>git add . &amp;&amp;  git commit -am “change some text” &amp;&amp; git push</p>
</blockquote>
<p>一句搞定！<br />
但是问题来了，这句命令也太长了吧，做人能不能简单一点，不要搞得那么复杂吗！或者能直接设置快捷键呢？</p>
<p>好的，满足你，跟着我来一起做，步骤如下：</p>
<ol>
<li>
<p>用vscode打开当前仓库，配置task.json:</p>
<p>点击vscode界面左下角，打开 command palette… —&gt; 输入task 进行搜索  —&gt;  选择task：configure task -&gt; 选择task 模板 ，新建task.json文件 —&gt; 在task.json文件中修改成以下内容：</p>
 <figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">// See https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class="line">// for the documentation about the tasks.json format</span><br><span class="line">"version": "2.0.0",</span><br><span class="line">"tasks": [</span><br><span class="line"><span class="code">    &#123;</span></span><br><span class="line"><span class="code">        "label": "push code",</span></span><br><span class="line"><span class="code">        "type": "shell",</span></span><br><span class="line"><span class="code">        "command": "git add . &amp;  git commit -am 'change something' &amp; git push"</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>验证 task是否能运行：</p>
<p>点击vscode界面左下角，打开 command palette… —&gt; 输入run task 回车 —&gt; 点击 push code看task是否能成功执行</p>
</li>
<li>
<p>配置快捷键：</p>
<p>file —&gt; preference —&gt; keyboard shortcut —&gt; 打开了快捷键配置文件，点击右上角的 {}，进入文本编辑模式，添加如下内容：</p>
 <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line"><span class="code">    &#123;</span></span><br><span class="line"><span class="code">        // 为git提交代码到远程仓库设置快捷键 </span></span><br><span class="line"><span class="code">        "key": "ctrl+p ctrl+p",</span></span><br><span class="line"><span class="code">        "command": "workbench.action.tasks.runTask",</span></span><br><span class="line"><span class="code">        "args": "push code",</span></span><br><span class="line"><span class="code">        "when": "isLinux"    </span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>使用 快捷键&quot;ctrl+p ctrl+p&quot; 验证是否能成功push代码到远程仓库。</p>
</li>
</ol>
<p>原本按照这个想法，我想到了两个思路：</p>
<ol>
<li>
<p>通过vscode的设置task和快捷键完成操作，步骤如上。</p>
</li>
<li>
<p>将三条命令alias一条简短的快捷命令,在终端上执行。</p>
<p>2.1 但是这个并没有想象中那么简单，至少在gitvonfig中是难以实现的。因为 alias 中的快捷命令是需要运行时需要在前面添加 git 才能运行的，比如：<code>alias p=push </code>，那么在命令行运行 <code>git p</code> 就相当于 <code>git push </code>。这就限制了无法用 将这三条命令 缩写成一条命令来运行。</p>
<p>2.2 但是世上无难事，只要有心人，曲线也是能救国的！不要局限在git的配置中怎么去实现，思维要开阔些！我们可以在当前文件夹下面新建一个bash脚本，把上面三条命令直接写进去，直接运行脚本不就可以了嘛!</p>
<p><a href="http://xn--push-494fr2cb5kmlat54c6rn21ar85cw26m.sh" target="_blank" rel="noopener">当前文件夹下面创建push.sh</a>,写入文本：</p>
 <figure class="highlight md"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">echo 成功添加暂存区</span><br><span class="line">git commit -am "change some text"</span><br><span class="line">echo 成功提交到本地仓库</span><br><span class="line">git push</span><br><span class="line">echo 成功push到远程仓库</span><br></pre></td></tr></table></figure>
<p>在当前文件夹下面的终端运行：</p>
<blockquote>
<p>chmod a+x <a href="http://push.sh" target="_blank" rel="noopener">push.sh</a></p>
<p>./push.sh</p>
</blockquote>
</li>
</ol>
<h2 id="2-git提交码云上没有显示贡献度"><a class="markdownIt-Anchor" href="#2-git提交码云上没有显示贡献度"></a> 2. git提交码云上没有显示贡献度</h2>
<p>结果竟然是因为我设置的全局邮箱有问题:</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user.email&#x3D;&quot;1002860620@qq.com&quot;</span><br><span class="line">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>
<p>上面所示，邮箱多了一双引号，去掉引号就可以啦<br />
<code>git config --global user.email 1002860620@qq.com</code></p>
<p>然后再输入<code>git config -l</code> 查看配置：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user.email&#x3D;1002860620@qq.com</span><br><span class="line">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>
<p>引号去掉了，然后<code>git push</code>提交，在后台查看终于显示我的贡献度了，</p>
<p>好气哦，ubuntu用了这么长时间，在码云上提交了那么多贡献全是空的！！</p>
<h2 id="3怎么给仓库打tag记录历史中重要的节点"><a class="markdownIt-Anchor" href="#3怎么给仓库打tag记录历史中重要的节点"></a> 3.怎么给仓库打tag，记录历史中重要的节点</h2>
<p>首先<code>git tag -l</code> 查看仓库中所有tag</p>
<p>Git 支持两种标签：轻量标签（lightweight）与附注标签（annotated）</p>
<ul>
<li>
<p>轻量标签：很像一个不会改变的分支——它只是某个特定提交的引用。</p>
<p><code>git tag &lt;tagname&gt;</code> 创建轻量标签<br />
<code>git show &lt;tagname&gt;</code> 显示出提交信息</p>
</li>
<li>
<p>附注标签：是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。<br />
<code>git tag -a &lt;tagname&gt; -m &quot;标签信息&quot;</code> 创建附注标签</p>
</li>
<li>
<p>后期打标签：你也可以对过去的提交打标签<br />
<code>git log --pretty=oneline</code> 显示历史提交信息<br />
<code>git tag -a &lt;tagname&gt; &lt;某个提交的哈希码&gt;</code> 为历史提交打标签</p>
</li>
<li>
<p>共享标签：将标签上传到远程共享<br />
<code>git push origin --tags</code> 上传所有tags<br />
<code>git push origin &lt;tagname&gt;</code> 上传某个tag</p>
</li>
<li>
<p>删除标签tag<br />
<code>git tag -d &lt;tagname&gt;</code> 删除本地tag<br />
<code>git push origin --delete &lt;tagname&gt;</code>   删除远程tag</p>
</li>
<li>
<p>检出标签：如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用，在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支。<br />
<code>git checkout &lt;tagname&gt;</code> 查看标签具体内容</p>
<p><code>git checkout -b &lt;branchName&gt; &lt;tagname&gt;</code> 为某个标签创建分支</p>
</li>
</ul>
]]></content>
      <categories>
        <category>软件与工具使用</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>软件与工具使用/markdown笔记</title>
    <url>/HeronWan.github.io/2020/08/30/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/markdown%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="markdown疑难杂症"><a class="markdownIt-Anchor" href="#markdown疑难杂症"></a> markdown疑难杂症</h1>
<h2 id="1-单文件怎么生成目录并实现点击即可定位"><a class="markdownIt-Anchor" href="#1-单文件怎么生成目录并实现点击即可定位"></a> 1. 单文件怎么生成目录，并实现点击即可定位</h2>
<h3 id="方法1手动添加"><a class="markdownIt-Anchor" href="#方法1手动添加"></a> 方法1:手动添加</h3>
<p>原始格式如下所示，效果正如当前页面所生成的问题目录格式，原理其实是类似于插入链接的格式。插入链接格式</p>
<p><a href="https://gitee.com/heronwang/linux_notes" target="_blank" rel="noopener">点击跳转我的linux笔记</a></p>
<p>这里的链接的原始格式：</p>
<a id="more"></a>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">[<span class="string">点击跳转我的linux笔记</span>](<span class="link">https://gitee.com/heronwang/linux_notes</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">[<span class="string">点击跳转</span>](<span class="link">#id值</span>)</span><br></pre></td></tr></table></figure>
<p>整个目录模板格式如下：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># &lt;center&gt; 标题 &lt;/center&gt;</span></span><br><span class="line">----</span><br><span class="line"><span class="section">## 目录</span></span><br><span class="line"><span class="bullet">1. </span>[<span class="string">目录1</span>](<span class="link">#jump1</span>)</span><br><span class="line"><span class="bullet">2. </span>[<span class="string">目录2</span>](<span class="link">#jump2</span>)</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="section">### &lt;a id="jump1"&gt;1. 目录1&lt;/a&gt;</span></span><br><span class="line">---</span><br><span class="line"><span class="section">### &lt;a id="jump2"&gt;2. 目录2&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="方法2使用vscode插件markdown-toc自动生成简单易用"><a class="markdownIt-Anchor" href="#方法2使用vscode插件markdown-toc自动生成简单易用"></a> 方法2:使用vscode插件:Markdown-toc自动生成（简单易用）</h3>
<ul>
<li>在vscode扩展中搜索 Markdown-toc,点击安装。</li>
<li>进入vscode的系统设置settings,搜索eol,将换行设置为/n,这里我是linux系统设置为/n,windows系统设置为 /r/n 。</li>
<li>然后回到markdown文档中，右键选择 Markdown toc:insert/update，即可根据标题自动生成目录</li>
</ul>
<h3 id="方法3使用markdown-all-in-one-支持的toc创建toc"><a class="markdownIt-Anchor" href="#方法3使用markdown-all-in-one-支持的toc创建toc"></a> 方法3:使用markdown all in one 支持的toc创建toc</h3>
<p>打开相应的文件，ctrl +shift+ p 调出命令行，搜索toc，执行Markdown:create content of table</p>
<h2 id="2-原始格式输出"><a class="markdownIt-Anchor" href="#2-原始格式输出"></a> 2. 原始格式输出</h2>
<p>使用 ``` （ ` 位于esc的下面一个按键）将代码块包裹起来即可原始格式输出markdown，如下所示：</p>
  <figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="code">```markdown</span></span><br><span class="line"><span class="code">  # 一级标题</span></span><br><span class="line"><span class="code">  ## 二级标题</span></span><br><span class="line"><span class="code">  ### 三级标题</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure>
<h2 id="怎么使用flow流程图"><a class="markdownIt-Anchor" href="#怎么使用flow流程图"></a> 怎么使用flow流程图</h2>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;flow    </span><br><span class="line">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">e&#x3D;&gt;end: 结束</span><br><span class="line">op&#x3D;&gt;operation: 我的操作</span><br><span class="line">cond&#x3D;&gt;condition: 确认？</span><br><span class="line">op2&#x3D;&gt;operation: 操作2</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;这里写流程</span><br><span class="line">st-&gt;op-&gt;cond-&gt;op2</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op2</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure>
<p>显示如下所示(vscode需要使用MPE插件预览)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">e&#x3D;&gt;end: 结束</span><br><span class="line">op&#x3D;&gt;operation: 我的操作</span><br><span class="line">cond&#x3D;&gt;condition: 确认？</span><br><span class="line">op2&#x3D;&gt;operation: 操作2</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;这里写流程</span><br><span class="line">st-&gt;op-&gt;cond-&gt;op2</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op2</span><br></pre></td></tr></table></figure>
<h2 id="怎么使用math公式"><a class="markdownIt-Anchor" href="#怎么使用math公式"></a> 怎么使用math公式</h2>
<ol>
<li>矩阵使用：<br />
<code>$这里单行公式$</code></li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">这里添加多行公式</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi mathvariant="normal">平</mi><mi mathvariant="normal">移</mi><mi mathvariant="normal">矩</mi><mi mathvariant="normal">阵</mi><mi mathvariant="normal">：</mi><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>100</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>100</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">  平移矩阵：M=
  \left[\begin{matrix}
   1 &amp; 0 &amp; 100 \\
   0 &amp; 1 &amp; 100 \\
  \end{matrix} \right]\tag{A}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">矩</span><span class="mord cjk_fallback">阵</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span><span class="tag"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">A</span></span><span class="mord">)</span></span></span></span></span></span></p>
<h2 id="怎么使用表格"><a class="markdownIt-Anchor" href="#怎么使用表格"></a> 怎么使用表格</h2>
<p>实例如下，3列7行的表格：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| Column1 | Column2 | Column3 |</span><br><span class="line">|---------|---------|---------|</span><br><span class="line">| Row1    |         |         |</span><br><span class="line">| Row2    | dfd     |         |</span><br><span class="line">| Row3    |         |         |</span><br><span class="line">| Row4    |         |         |</span><br><span class="line">| Row5    |         |         |</span><br><span class="line">| Row6    |         |         |</span><br><span class="line">| Row7    |         |         |</span><br></pre></td></tr></table></figure>
<p>显示如下：</p>
<table>
<thead>
<tr>
<th>Column1</th>
<th>Column2</th>
<th>Column3</th>
</tr>
</thead>
<tbody>
<tr>
<td>Row1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Row2</td>
<td>dfd</td>
<td></td>
</tr>
<tr>
<td>Row3</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Row4</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Row5</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Row6</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Row7</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>相关的快捷键<br />
<code>alt + m</code> 打开生成markdown结构的的菜单，选择table输入要生成的行列</p>
<p><code>ctrl + d t</code> 均与分布表格单元格（相当于美化表格）</p>
]]></content>
      <categories>
        <category>软件与工具使用</category>
      </categories>
  </entry>
  <entry>
    <title>软件与工具使用/linux命令</title>
    <url>/HeronWan.github.io/2020/08/30/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/linux%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="linux常见问题总结"><a class="markdownIt-Anchor" href="#linux常见问题总结"></a> linux常见问题总结</h1>
<pre><code>这个是在使用linux/ubuntu 系统过程中，对遇到的问题进行记录总结，以备后用。好记性不如烂键盘！
</code></pre>
<h2 id="1-怎么使用管理员权限打开文件夹"><a class="markdownIt-Anchor" href="#1-怎么使用管理员权限打开文件夹"></a> 1. 怎么使用管理员权限打开文件夹?</h2>
<pre><code>&gt; sudo natilus
</code></pre>
<a id="more"></a>
<h2 id="2-浏览器看不了视频"><a class="markdownIt-Anchor" href="#2-浏览器看不了视频"></a> 2. 浏览器看不了视频?</h2>
<pre><code>安装flash,执行一下命令前先需要设置允许安装未知版权的软件：  system settings -&gt; software&amp;updates -&gt; ubuntu software -&gt; 取消software restricted copyright or legal issues(第四个选项)

&gt;  sudo apt-get install flashplugin-installer

安装html5音视频所支持的依赖

&gt; sudo apt-get update
&gt;
&gt; sudo apt-get install ubuntu-restricted-extras
</code></pre>
<h2 id="3-多条命令执行区别"><a class="markdownIt-Anchor" href="#3-多条命令执行区别"></a> 3. 多条命令执行区别</h2>
<pre><code>（1） 每个命令之间用;隔开

说明：各命令的执行给果，不会影响其它命令的执行。换句话说，各个命令都会执行，但不保证每个命令都执行成功。

（2） 每个命令之间用&amp;&amp;隔开

说明：若前面的命令执行成功，才会去执行后面的命令。这样可以保证所有的命令执行完毕后，执行过程都是成功的。

（3）每个命令之间用||隔开

说明：||是或的意思，只有前面的命令执行失败后才去执行下一条命令，直到成功执行一条命令为止。

（4）每个命令之间用&amp;隔开
说明：&amp;表示and，按顺序执行每条命令，但是前后不影响，也就是无论第一条是否执行失败，后一条总是要执行

（5）每个命令之间用|隔开
说明：管道符|，前一条执行的结果作为后一条执行语句的输入，依次执行。
</code></pre>
<h2 id="4ubuntu安装各种格式软件"><a class="markdownIt-Anchor" href="#4ubuntu安装各种格式软件"></a> 4.Ubuntu安装各种格式软件</h2>
<pre><code>安装.deb格式的软件
dpkg -i &lt;package.deb&gt;
</code></pre>
<h2 id="5-快速回到桌面快捷键"><a class="markdownIt-Anchor" href="#5-快速回到桌面快捷键"></a> 5. 快速回到桌面快捷键</h2>
<p><code>ctrl + win + d</code> 快速回到桌面快捷键</p>
]]></content>
      <categories>
        <category>软件与工具使用</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title>软件与工具使用/window命令行笔记</title>
    <url>/HeronWan.github.io/2020/08/30/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/window%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="windows下面有用的cmd指令"><a class="markdownIt-Anchor" href="#windows下面有用的cmd指令"></a> windows下面有用的cmd指令</h1>
<h3 id="1-临时禁用键盘"><a class="markdownIt-Anchor" href="#1-临时禁用键盘"></a> 1. 临时禁用键盘</h3>
<p>说明： 之前键盘坏了，敲键盘的的时候会一直输入字符k，于是使用卸载驱动的形式，将键盘禁用了，现在我只是想临时的想要禁用自己笔记本的键盘，便于在自己的键盘上放书或者本子什么的，方便阅读和外接键盘的输入。于是就搜到了如下的命令，解决自己的燃眉之急</p>
<p>禁用键盘：sc config i8042prt start= disabled，重启</p>
<p>恢复键盘：sc config i8042prt start= auto， 重启</p>
<a id="more"></a>
<h3 id="2-将cpp文件编译生成的exe文件放在指定的位置"><a class="markdownIt-Anchor" href="#2-将cpp文件编译生成的exe文件放在指定的位置"></a> 2. 将cpp文件编译生成的exe文件放在指定的位置</h3>
<p>需求说明：在编译单个cpp文件时，生成的exe文件总是放在当前文件夹下面，我花费了点心思，终于解决了将当前文件夹下面cpp编译生成的exe文件，放在当前文件下下面的build文件夹里面。</p>
<p>修改Setting.json文件里面的&quot;code-runner.executorMap&quot;.&quot;cpp&quot;的值为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;code-runner.executorMap&quot;: &#123;</span><br><span class="line">	...</span><br><span class="line">    &quot;cpp&quot;: &quot;cd $dir &amp;&amp;  (IF NOT EXIST build (md build) )  &amp;&amp; g++ $fileName -o build\\$fileNameWithoutExt &amp;&amp; $dir\\build\\$fileNameWithoutExt&quot;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面其实就是将四句cmd命令合并成一句执行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd $dir     &#x2F;&#x2F;进入到当前执行文件所在的文件夹</span><br><span class="line"></span><br><span class="line">( IF NOT EXIST build (md build)  )  &#x2F;&#x2F;  当前文件夹下面如果不存在build文件夹就创建build文件夹</span><br><span class="line"></span><br><span class="line">g++ $fileName -o build\\$fileNameWithoutExt &#x2F;&#x2F;编译当前文件并将编译结果放置在build文件夹下面</span><br><span class="line"></span><br><span class="line">$dir\\build\\$fileNameWithoutExt &#x2F;&#x2F;执行已经编译好的可执行文件</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>软件与工具使用</category>
      </categories>
  </entry>
  <entry>
    <title>软件与工具使用/vscode笔记</title>
    <url>/HeronWan.github.io/2020/08/30/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/vscode%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="vscode常见问题"><a class="markdownIt-Anchor" href="#vscode常见问题"></a> vscode常见问题</h1>
<h2 id="1怎么修改-vscode-主题颜色"><a class="markdownIt-Anchor" href="#1怎么修改-vscode-主题颜色"></a> 1.怎么修改 vscode 主题颜色？</h2>
<p>😄</p>
<p>新下载的 vscode 默认的都是黑色的主题，颜色太暗看不清怎么办？ 直接修改 vscoe 颜色颜色即可，步骤如下：</p>
<p>file -&gt; preference -&gt; color theme -&gt; 选择 light 即可<br />
也可以快捷键 ctrl + K + ctrl + T 直接打开颜色主题进行设置</p>
<a id="more"></a>
<h2 id="2设置文件过程中自动保存"><a class="markdownIt-Anchor" href="#2设置文件过程中自动保存"></a> 2.设置文件过程中自动保存</h2>
<p>对文件的修改每次有需要手动保存 ，有没有觉得好麻烦呀？只需按照下面步骤设置轻松实现 vscode 自动编辑保存功能</p>
<pre><code>点击 vscode 界面右下角 -&gt; settings -&gt; 搜索框中搜索 auto save -&gt;选择 afterDelay,同时设置延迟保存时间为 1000，大功告成
</code></pre>
<h2 id="3设置滚轮可调节编辑区字体大小"><a class="markdownIt-Anchor" href="#3设置滚轮可调节编辑区字体大小"></a> 3.设置滚轮可调节编辑区字体大小</h2>
<pre><code>在settings.json 文件中添加配置`&quot;editor.mouseWheelZoom&quot;: true` 即可
</code></pre>
<h2 id="4灵活好用的快捷建"><a class="markdownIt-Anchor" href="#4灵活好用的快捷建"></a> 4.灵活好用的快捷建</h2>
<pre><code>灵活好用的系统或自定义的常用快捷键，如果系统没有该快捷建可自行配置：

vscode界面及编辑区快捷键

`ctrl + b` 显示/隐藏左侧状态栏

`ctrl + =/-/鼠标滚轮`  调整编辑区的字体大小 ，鼠标滚轮需要进行[问题3](#3设置滚轮可调节编辑区字体大小)所示的设置

`crrl + shift + -/=` 调整整个界面大小

`crrl + tab` 切换到最近打开文本中


分屏快捷键

`ctrl + \` 拆分窗口组，（默认新建窗口位置在右侧）

`ctrl + \  ctrl + 方向键` 选择新拆分出的窗口位置（自定义）

`ctrl + j  a` 将所有其他窗口的分屏关闭，并合并当当前窗口中，可实现当前代码窗口的最大化显示（(自定义)）

`ctrl + k  w` 关闭当前分屏及所有打开的文件

`ctrl + k o` 关闭其他分组的窗口，保留当前分组的窗口

markdown快捷键

`alt + m` 激活docs-markdown菜单,实现快捷制表等操作 
   
`ctrl + shift + v` 切换 markdown 的编辑和预览模式
</code></pre>
<h2 id="5-实用的扩展插件"><a class="markdownIt-Anchor" href="#5-实用的扩展插件"></a> 5. 实用的扩展插件</h2>
<pre><code>`Markdown All in One` 在vscode中必备的markdown插件，支持预览，基本语法等

`markdownlint` markdown 语法智能提示，改善自己的md书写规范

`Markdown toc` 自动生成markdown目录树，简单实用

`markdown preview Enhancced` 预览增强，可支持显示复杂的公式，流程图，表格等

`vscode-icons` 美化文件浏览器中的文件/文件夹图标

`terminal` 下面状态栏添加终端快捷按钮

`python` python环境必备的插件，识别 .py文件关联到解释器，运行等功能
</code></pre>
<h2 id="6-怎么拆分和合并分屏"><a class="markdownIt-Anchor" href="#6-怎么拆分和合并分屏"></a> 6. 怎么拆分和合并分屏</h2>
<pre><code>见 [4.灵活好用的快捷建](#4灵活好用的快捷建) 中的分屏快捷键
</code></pre>
]]></content>
      <categories>
        <category>软件与工具使用</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv/</url>
    <content><![CDATA[<h1 id="opencv基础"><a class="markdownIt-Anchor" href="#opencv基础"></a> opencv基础</h1>
<p><a href="../readme.md">返回readme</a></p>
<h2 id="图像处理基础"><a class="markdownIt-Anchor" href="#图像处理基础"></a> 图像处理基础</h2>
<h3 id="图像的表示"><a class="markdownIt-Anchor" href="#图像的表示"></a> 图像的表示</h3>
<p>二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。</p>
<p>灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。</p>
<p>彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反</p>
<a id="more"></a>
<h3 id="像素处理"><a class="markdownIt-Anchor" href="#像素处理"></a> 像素处理</h3>
<p><a href="opencv/%E5%83%8F%E7%B4%A0%E5%A4%84%E7%90%86.py">像素处理代码实现</a></p>
<h3 id="使用numpyarray访问元素"><a class="markdownIt-Anchor" href="#使用numpyarray访问元素"></a> 使用numpy.array访问元素</h3>
<p><a href="opencv/numpy.array%E8%AE%BF%E9%97%AE%E5%85%83%E7%B4%A0.py">代码实现</a></p>
<p>函数 item(行，列) 能高效访问图像的像素点<br />
itemset(索引值，新值) 用来修改像素值</p>
<h3 id="感兴趣区域roi-和-通道操作"><a class="markdownIt-Anchor" href="#感兴趣区域roi-和-通道操作"></a> 感兴趣区域ROI 和 通道操作</h3>
<p><a href="opencv/ROI.py">代码实现</a></p>
<p>设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C</p>
<p>通道拆分 cv.split(img)</p>
<p>通道合并 cv.merge([b,g,r])</p>
<h3 id="获取图像属性"><a class="markdownIt-Anchor" href="#获取图像属性"></a> 获取图像属性</h3>
<p>img.shape 返回包含行数，列数，通道数的数组</p>
<p>img.size  返回图像的像素数目</p>
<p>img.dtype 返回图像的数据类型</p>
<h2 id="图像运算"><a class="markdownIt-Anchor" href="#图像运算"></a> 图像运算</h2>
<h3 id="加法"><a class="markdownIt-Anchor" href="#加法"></a> 加法</h3>
<p>img1 + img2 ,遵循规则：<br />
a+b = (a+b) % 256,即结果对256取膜</p>
<p>cv2.add(img1,img2) ,遵循规则：<br />
a+b = min(a+b,255), 即和大于255时结果取255</p>
<h3 id="图像加权和"><a class="markdownIt-Anchor" href="#图像加权和"></a> 图像加权和</h3>
<p>dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略<br />
结果就是 dst = src * alpha +src2 *beta +gamma</p>
<p>加权和超过255，结果同样取255</p>
<h3 id="按位逻辑运算"><a class="markdownIt-Anchor" href="#按位逻辑运算"></a> 按位逻辑运算</h3>
<p>cv2.bitwise_and() 与<br />
cv2.bitwise_or()  或<br />
cv2.bitwise_xor() 异或<br />
cv2.bitwise_not() 非</p>
<p>跟 0 位与结果为 0 ，变成黑色<br />
跟255位与结果是本身 ，颜色不变</p>
<h3 id="掩膜"><a class="markdownIt-Anchor" href="#掩膜"></a> 掩膜</h3>
<p>使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0</p>
<h3 id="图像与数值运算"><a class="markdownIt-Anchor" href="#图像与数值运算"></a> 图像与数值运算</h3>
<p>cv2.add(img,6) 参与运算的既可以是图片也可以是数值</p>
<h3 id="位平面分解"><a class="markdownIt-Anchor" href="#位平面分解"></a> 位平面分解</h3>
<p>将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。<br />
在8位灰度图中，可以组成8个二进制图像<br />
<a href="opencv/%E4%BD%8D%E5%B9%B3%E9%9D%A2.py">代码</a></p>
<h3 id="图像加密和解密"><a class="markdownIt-Anchor" href="#图像加密和解密"></a> 图像加密和解密</h3>
<p>通过按位异或运算可以实现图像的加密和解密</p>
<p>通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密</p>
<p><a href="opencv/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86.py">代码实现</a></p>
<h3 id="数字水印"><a class="markdownIt-Anchor" href="#数字水印"></a> 数字水印</h3>
<p>最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。</p>
<p>在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。<br />
这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能</p>
<p>分两步：</p>
<pre><code>嵌入过程
  用数字水印信息将图像的最低有效位替换掉

提取过程
  提取出最低有效位的水印信息即可
</code></pre>
<p><a href="opencv/%E6%95%B0%E5%AD%97%E6%B0%B4%E5%8D%B0.py">demo</a></p>
<h3 id="脸部打码以及解码"><a class="markdownIt-Anchor" href="#脸部打码以及解码"></a> 脸部打码以及解码</h3>
<p>使用掩码和按位运算方式实现对脸部打码和解码实例<br />
<a href="opencv/%E8%84%B8%E9%83%A8%E6%89%93%E7%A0%81%E4%BB%A5%E5%8F%8A%E8%A7%A3%E7%A0%81.py">demo</a></p>
<h2 id="色彩空间类型转换"><a class="markdownIt-Anchor" href="#色彩空间类型转换"></a> 色彩空间类型转换</h2>
<p>色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像</p>
<h3 id="色彩空间基础"><a class="markdownIt-Anchor" href="#色彩空间基础"></a> 色彩空间基础</h3>
<p>比较常见的色彩空间：</p>
<ul>
<li>GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： <code>GRAY =0.299×R +0.587*G +0.114*B</code></li>
<li>XYZ色彩空间，一中便于计算的色彩空间</li>
<li>YCrCb色彩空间</li>
<li>HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value</li>
<li>HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation</li>
</ul>
<h3 id="类型转换函数-hsv色彩空间讨论-alpha通道"><a class="markdownIt-Anchor" href="#类型转换函数-hsv色彩空间讨论-alpha通道"></a> 类型转换函数、HSV色彩空间讨论、alpha通道</h3>
<p><a href="oepncv/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.py">demo</a></p>
<p>dst = cv2.cvtColor(src,code,[,dstcn])</p>
<pre><code>code表示色彩空间转换码
dstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到
</code></pre>
<p>alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明</p>
<h2 id="几何变换"><a class="markdownIt-Anchor" href="#几何变换"></a> <strong>几何变换</strong></h2>
<h3 id="缩放"><a class="markdownIt-Anchor" href="#缩放"></a> <strong>缩放</strong></h3>
  <figure class="highlight md"><table><tr><td class="code"><pre><span class="line">dst = cv.resize(src,dsize , fx,fy,interpolation)</span><br><span class="line">  src:缩放的原始图像</span><br><span class="line">  dsize：输出图像大小</span><br><span class="line">  fx：水平方向的缩放比例</span><br><span class="line">  fy:垂直方向的缩放比例</span><br><span class="line">  interpolation：代表插值方式</span><br><span class="line"><span class="code">    缩放图像时，INTER_AREA能达到最好效果</span></span><br><span class="line"><span class="code">    放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果</span></span><br></pre></td></tr></table></figure>
<h3 id="旋转"><a class="markdownIt-Anchor" href="#旋转"></a> <strong>旋转</strong></h3>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dst &#x3D; cv2.flip(src,flipCode)</span><br><span class="line">  flipCode 旋转类型：</span><br><span class="line">  0，绕x轴旋转</span><br><span class="line">  正数，绕y轴旋转</span><br><span class="line">  负数，绕x，y同时旋转</span><br></pre></td></tr></table></figure>
<h3 id="仿射"><a class="markdownIt-Anchor" href="#仿射"></a> <strong>仿射</strong></h3>
<p>仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作</p>
<p>该变换能够保持图像的平直性和平行性</p>
<p>仿射 = 平移 + 旋转</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)</span><br><span class="line">M:代表一个2x3的变换矩阵</span><br><span class="line">dsize:代表输出图像的尺寸大小</span><br><span class="line">flags:代表插值方式，默认INTER_LINEAR</span><br><span class="line">borderMode:代表边类型</span><br><span class="line"></span><br><span class="line">borderValue:代表边界值，默认0</span><br></pre></td></tr></table></figure>
<h3 id="透视"><a class="markdownIt-Anchor" href="#透视"></a> <strong>透视</strong></h3>
<h3 id="重映射"><a class="markdownIt-Anchor" href="#重映射"></a> <strong>重映射</strong></h3>
<h2 id="阈值处理"><a class="markdownIt-Anchor" href="#阈值处理"></a> <strong>阈值处理</strong></h2>
<h3 id="threldhold函数"><a class="markdownIt-Anchor" href="#threldhold函数"></a> <strong>threldhold函数</strong></h3>
<h3 id="自适应阈值处理"><a class="markdownIt-Anchor" href="#自适应阈值处理"></a> <strong>自适应阈值处理</strong></h3>
<h3 id="otsu处理"><a class="markdownIt-Anchor" href="#otsu处理"></a> <strong>otsu处理</strong></h3>
<h2 id="图像平滑处理"><a class="markdownIt-Anchor" href="#图像平滑处理"></a> <strong>图像平滑处理</strong></h2>
<h3 id="均值滤-波"><a class="markdownIt-Anchor" href="#均值滤-波"></a> <strong>均值滤  波</strong></h3>
<h3 id="方框滤波"><a class="markdownIt-Anchor" href="#方框滤波"></a> <strong>方框滤波</strong></h3>
<h3 id="高斯滤波"><a class="markdownIt-Anchor" href="#高斯滤波"></a> <strong>高斯滤波</strong></h3>
<h3 id="中值滤波"><a class="markdownIt-Anchor" href="#中值滤波"></a> <strong>中值滤波</strong></h3>
<h3 id="双边滤波"><a class="markdownIt-Anchor" href="#双边滤波"></a> <strong>双边滤波</strong></h3>
<h3 id="2d-卷积"><a class="markdownIt-Anchor" href="#2d-卷积"></a> <strong>2D 卷积</strong></h3>
<h2 id="形态学操作"><a class="markdownIt-Anchor" href="#形态学操作"></a> <strong>形态学操作</strong></h2>
<h3 id="腐蚀"><a class="markdownIt-Anchor" href="#腐蚀"></a> <strong>腐蚀</strong></h3>
<h3 id="膨胀"><a class="markdownIt-Anchor" href="#膨胀"></a> <strong>膨胀</strong></h3>
<h3 id="通用形态学函数"><a class="markdownIt-Anchor" href="#通用形态学函数"></a> <strong>通用形态学函数</strong></h3>
<h3 id="开运算"><a class="markdownIt-Anchor" href="#开运算"></a> <strong>开运算</strong></h3>
<h3 id="闭运算"><a class="markdownIt-Anchor" href="#闭运算"></a> <strong>闭运算</strong></h3>
<h3 id="形态学梯度运算"><a class="markdownIt-Anchor" href="#形态学梯度运算"></a> <strong>形态学梯度运算</strong></h3>
<h3 id="礼貌运算"><a class="markdownIt-Anchor" href="#礼貌运算"></a> <strong>礼貌运算</strong></h3>
<h3 id="黑帽运算"><a class="markdownIt-Anchor" href="#黑帽运算"></a> <strong>黑帽运算</strong></h3>
<h3 id="核函数"><a class="markdownIt-Anchor" href="#核函数"></a> <strong>核函数</strong></h3>
<h2 id="图像梯度"><a class="markdownIt-Anchor" href="#图像梯度"></a> <strong>图像梯度</strong></h2>
<h3 id="sobel-理论基础"><a class="markdownIt-Anchor" href="#sobel-理论基础"></a> <strong>sobel 理论基础</strong></h3>
<h3 id="sobel算子及函数使用"><a class="markdownIt-Anchor" href="#sobel算子及函数使用"></a> <strong>sobel算子及函数使用</strong></h3>
<h3 id="scharr-算子及函数使用"><a class="markdownIt-Anchor" href="#scharr-算子及函数使用"></a> <strong>scharr 算子及函数使用</strong></h3>
<h3 id="laplacian-算子及函数使用"><a class="markdownIt-Anchor" href="#laplacian-算子及函数使用"></a> <strong>Laplacian 算子及函数使用</strong></h3>
<h3 id="算子总结"><a class="markdownIt-Anchor" href="#算子总结"></a> <strong>算子总结</strong></h3>
<h2 id="canny边缘检测"><a class="markdownIt-Anchor" href="#canny边缘检测"></a> <strong>canny边缘检测</strong></h2>
<h3 id="canny边缘检测理论"><a class="markdownIt-Anchor" href="#canny边缘检测理论"></a> <strong>canny边缘检测理论</strong></h3>
<h3 id="canny函数及使用"><a class="markdownIt-Anchor" href="#canny函数及使用"></a> <strong>canny函数及使用</strong></h3>
<h2 id="图像金字塔"><a class="markdownIt-Anchor" href="#图像金字塔"></a> <strong>图像金字塔</strong></h2>
<h3 id="理论基础"><a class="markdownIt-Anchor" href="#理论基础"></a> <strong>理论基础</strong></h3>
<h3 id="pyrdown函数及使用"><a class="markdownIt-Anchor" href="#pyrdown函数及使用"></a> <strong>pyrDown函数及使用</strong></h3>
<h3 id="采样可逆行研究"><a class="markdownIt-Anchor" href="#采样可逆行研究"></a> <strong>采样可逆行研究</strong></h3>
<h3 id="拉普拉斯金字塔"><a class="markdownIt-Anchor" href="#拉普拉斯金字塔"></a> <strong>拉普拉斯金字塔</strong></h3>
<h2 id="图像轮廓"><a class="markdownIt-Anchor" href="#图像轮廓"></a> <strong>图像轮廓</strong></h2>
<h3 id="查找并绘制轮廓"><a class="markdownIt-Anchor" href="#查找并绘制轮廓"></a> <strong>查找并绘制轮廓</strong></h3>
<h3 id="矩特征"><a class="markdownIt-Anchor" href="#矩特征"></a> <strong>矩特征</strong></h3>
<h3 id="hu钜"><a class="markdownIt-Anchor" href="#hu钜"></a> <strong>hu钜</strong></h3>
<h3 id="轮廓拟合"><a class="markdownIt-Anchor" href="#轮廓拟合"></a> <strong>轮廓拟合</strong></h3>
<h3 id="凸包"><a class="markdownIt-Anchor" href="#凸包"></a> <strong>凸包</strong></h3>
<h3 id="利用形状场景算法比较轮廓"><a class="markdownIt-Anchor" href="#利用形状场景算法比较轮廓"></a> <strong>利用形状场景算法比较轮廓</strong></h3>
<h3 id="轮廓的特征值"><a class="markdownIt-Anchor" href="#轮廓的特征值"></a> <strong>轮廓的特征值</strong></h3>
<h2 id="傅里叶变换"><a class="markdownIt-Anchor" href="#傅里叶变换"></a> <strong>傅里叶变换</strong></h2>
<h3 id="理论基础-2"><a class="markdownIt-Anchor" href="#理论基础-2"></a> <strong>理论基础</strong></h3>
<h3 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> <strong>实现</strong></h3>
<h2 id="模板匹配"><a class="markdownIt-Anchor" href="#模板匹配"></a> <strong>模板匹配</strong></h2>
<h3 id="模板匹配基础"><a class="markdownIt-Anchor" href="#模板匹配基础"></a> <strong>模板匹配基础</strong></h3>
<h3 id="多模板匹配"><a class="markdownIt-Anchor" href="#多模板匹配"></a> <strong>多模板匹配</strong></h3>
<h2 id="霍夫变换"><a class="markdownIt-Anchor" href="#霍夫变换"></a> <strong>霍夫变换</strong></h2>
<h3 id="霍夫直线变换"><a class="markdownIt-Anchor" href="#霍夫直线变换"></a> 霍夫直线变换</h3>
<h3 id="霍夫圆形变换"><a class="markdownIt-Anchor" href="#霍夫圆形变换"></a> <strong>霍夫圆形变换</strong></h3>
<h2 id="图像分割与提取"><a class="markdownIt-Anchor" href="#图像分割与提取"></a> <strong>图像分割与提取</strong></h2>
<h3 id="用分水岭算法实现图像分割"><a class="markdownIt-Anchor" href="#用分水岭算法实现图像分割"></a> <strong>用分水岭算法实现图像分割</strong></h3>
<h3 id="交互式前景提取"><a class="markdownIt-Anchor" href="#交互式前景提取"></a> <strong>交互式前景提取</strong></h3>
<h2 id="视频处理"><a class="markdownIt-Anchor" href="#视频处理"></a> <strong>视频处理</strong></h2>
<h3 id="videocapture类"><a class="markdownIt-Anchor" href="#videocapture类"></a> <strong>VideoCapture类</strong></h3>
<h3 id="viedeowriter类"><a class="markdownIt-Anchor" href="#viedeowriter类"></a> <strong>ViedeoWriter类</strong></h3>
<h3 id="视频操作基础"><a class="markdownIt-Anchor" href="#视频操作基础"></a> <strong>视频操作基础</strong></h3>
<h2 id="绘图机交互"><a class="markdownIt-Anchor" href="#绘图机交互"></a> <strong>绘图机交互</strong></h2>
<h3 id="绘图基础"><a class="markdownIt-Anchor" href="#绘图基础"></a> <strong>绘图基础</strong></h3>
<h3 id="鼠标交互"><a class="markdownIt-Anchor" href="#鼠标交互"></a> <strong>鼠标交互</strong></h3>
<h3 id="滚动条"><a class="markdownIt-Anchor" href="#滚动条"></a> <strong>滚动条</strong></h3>
<h2 id="k近邻算法"><a class="markdownIt-Anchor" href="#k近邻算法"></a> <strong>k近邻算法</strong></h2>
<h3 id="理论基础-3"><a class="markdownIt-Anchor" href="#理论基础-3"></a> <strong>理论基础</strong></h3>
<h3 id="计算"><a class="markdownIt-Anchor" href="#计算"></a> <strong>计算</strong></h3>
<h3 id="手写数字识别原理"><a class="markdownIt-Anchor" href="#手写数字识别原理"></a> <strong>手写数字识别原理</strong></h3>
<h3 id="自定义函数手写数字识别"><a class="markdownIt-Anchor" href="#自定义函数手写数字识别"></a> <strong>自定义函数手写数字识别</strong></h3>
<h3 id="k近邻模块的基本使用"><a class="markdownIt-Anchor" href="#k近邻模块的基本使用"></a> <strong>k近邻模块的基本使用</strong></h3>
<h3 id="k-近邻手写板数字的识别"><a class="markdownIt-Anchor" href="#k-近邻手写板数字的识别"></a> <strong>K 近邻手写板数字的识别</strong></h3>
<p>K<br />
K**<br />
K<br />
K*<br />
K</p>
<h3 id="svm案例介绍"><a class="markdownIt-Anchor" href="#svm案例介绍"></a> <strong>svm案例介绍</strong></h3>
<h2 id="k均值聚类"><a class="markdownIt-Anchor" href="#k均值聚类"></a> <strong>k均值聚类</strong></h2>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv02</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv02/</url>
    <content><![CDATA[<h2 id="2图像运算"><a class="markdownIt-Anchor" href="#2图像运算"></a> 2，图像运算</h2>
<h3 id="加法"><a class="markdownIt-Anchor" href="#加法"></a> 加法</h3>
<p>img1 + img2 ,遵循规则：<br />
a+b = (a+b) % 256,即结果对256取膜</p>
<p>cv2.add(img1,img2) ,遵循规则：<br />
a+b = min(a+b,255), 即和大于255时结果取255</p>
<h3 id="图像加权和"><a class="markdownIt-Anchor" href="#图像加权和"></a> 图像加权和</h3>
<p>dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略<br />
结果就是 dst = src * alpha +src2 *beta +gamma</p>
<p>加权和超过255，结果同样取255</p>
<h3 id="按位逻辑运算"><a class="markdownIt-Anchor" href="#按位逻辑运算"></a> 按位逻辑运算</h3>
<p>cv2.bitwise_and() 与<br />
cv2.bitwise_or()  或<br />
cv2.bitwise_xor() 异或<br />
cv2.bitwise_not() 非</p>
<p>跟 0 位与结果为 0 ，变成黑色<br />
跟255位与结果是本身 ，颜色不变</p>
<h3 id="掩膜"><a class="markdownIt-Anchor" href="#掩膜"></a> 掩膜</h3>
<p>使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0</p>
<h3 id="图像与数值运算"><a class="markdownIt-Anchor" href="#图像与数值运算"></a> 图像与数值运算</h3>
<p>cv2.add(img,6) 参与运算的既可以是图片也可以是数值</p>
<h3 id="位平面分解"><a class="markdownIt-Anchor" href="#位平面分解"></a> 位平面分解</h3>
<p>将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。<br />
在8位灰度图中，可以组成8个二进制图像<br />
<a href="opencv/%E4%BD%8D%E5%B9%B3%E9%9D%A2.py">代码</a></p>
<h3 id="图像加密和解密"><a class="markdownIt-Anchor" href="#图像加密和解密"></a> 图像加密和解密</h3>
<p>通过按位异或运算可以实现图像的加密和解密</p>
<p>通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密</p>
<p><a href="opencv/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86.py">代码实现</a></p>
<h3 id="数字水印"><a class="markdownIt-Anchor" href="#数字水印"></a> 数字水印</h3>
<p>最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。</p>
<p>在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。<br />
这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能</p>
<p>分两步：</p>
<pre><code>嵌入过程
  用数字水印信息将图像的最低有效位替换掉

提取过程
  提取出最低有效位的水印信息即可
</code></pre>
<p><a href="opencv/%E6%95%B0%E5%AD%97%E6%B0%B4%E5%8D%B0.py">demo</a></p>
<h3 id="脸部打码以及解码"><a class="markdownIt-Anchor" href="#脸部打码以及解码"></a> 脸部打码以及解码</h3>
<p>使用掩码和按位运算方式实现对脸部打码和解码实例<br />
<a href="opencv/%E8%84%B8%E9%83%A8%E6%89%93%E7%A0%81%E4%BB%A5%E5%8F%8A%E8%A7%A3%E7%A0%81.py">demo</a></p>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv03</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv03/</url>
    <content><![CDATA[<h2 id="3色彩空间类型转换"><a class="markdownIt-Anchor" href="#3色彩空间类型转换"></a> 3，色彩空间类型转换</h2>
<p>色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像</p>
<h3 id="色彩空间基础"><a class="markdownIt-Anchor" href="#色彩空间基础"></a> 色彩空间基础</h3>
<p>比较常见的色彩空间：</p>
<ul>
<li>GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： <code>GRAY =0.299×R +0.587*G +0.114*B</code></li>
<li>XYZ色彩空间，一中便于计算的色彩空间</li>
<li>YCrCb色彩空间</li>
<li>HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value</li>
<li>HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation</li>
</ul>
<h3 id="类型转换函数-hsv色彩空间讨论-alpha通道"><a class="markdownIt-Anchor" href="#类型转换函数-hsv色彩空间讨论-alpha通道"></a> 类型转换函数、HSV色彩空间讨论、alpha通道</h3>
<p><a href="oepncv/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.py">demo</a></p>
<p>dst = cv2.cvtColor(src,code,[,dstcn])</p>
<pre><code>code表示色彩空间转换码
dstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到
</code></pre>
<p>alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明</p>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/oepncv01</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/oepncv01/</url>
    <content><![CDATA[<h2 id="1图像处理基础"><a class="markdownIt-Anchor" href="#1图像处理基础"></a> 1，图像处理基础</h2>
<h3 id="图像的表示"><a class="markdownIt-Anchor" href="#图像的表示"></a> 图像的表示</h3>
<p>二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。</p>
<p>灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。</p>
<p>彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反</p>
<h3 id="像素处理"><a class="markdownIt-Anchor" href="#像素处理"></a> 像素处理</h3>
<p><a href="opencv/%E5%83%8F%E7%B4%A0%E5%A4%84%E7%90%86.py">像素处理代码实现</a></p>
<h3 id="使用numpyarray访问元素"><a class="markdownIt-Anchor" href="#使用numpyarray访问元素"></a> 使用numpy.array访问元素</h3>
<p><a href="opencv/numpy.array%E8%AE%BF%E9%97%AE%E5%85%83%E7%B4%A0.py">代码实现</a></p>
<p>函数 item(行，列) 能高效访问图像的像素点<br />
itemset(索引值，新值) 用来修改像素值</p>
<h3 id="感兴趣区域roi-和-通道操作"><a class="markdownIt-Anchor" href="#感兴趣区域roi-和-通道操作"></a> 感兴趣区域ROI 和 通道操作</h3>
<p><a href="opencv/ROI.py">代码实现</a></p>
<p>设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C</p>
<p>通道拆分 cv.split(img)</p>
<p>通道合并 cv.merge([b,g,r])</p>
<h3 id="获取图像属性"><a class="markdownIt-Anchor" href="#获取图像属性"></a> 获取图像属性</h3>
<p>img.shape 返回包含行数，列数，通道数的数组</p>
<p>img.size  返回图像的像素数目</p>
<p>img.dtype 返回图像的数据类型</p>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv04</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv04/</url>
    <content><![CDATA[<h2 id="4几何变换"><a class="markdownIt-Anchor" href="#4几何变换"></a> 4，<strong>几何变换</strong></h2>
<h3 id="缩放"><a class="markdownIt-Anchor" href="#缩放"></a> <strong>缩放</strong></h3>
  <figure class="highlight md"><table><tr><td class="code"><pre><span class="line">dst = cv.resize(src,dsize , fx,fy,interpolation)</span><br><span class="line">  src:缩放的原始图像</span><br><span class="line">  dsize：输出图像大小</span><br><span class="line">  fx：水平方向的缩放比例</span><br><span class="line">  fy:垂直方向的缩放比例</span><br><span class="line">  interpolation：代表插值方式</span><br><span class="line"><span class="code">    缩放图像时，INTER_AREA能达到最好效果</span></span><br><span class="line"><span class="code">    放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果</span></span><br></pre></td></tr></table></figure>
<h3 id="旋转"><a class="markdownIt-Anchor" href="#旋转"></a> <strong>旋转</strong></h3>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dst &#x3D; cv2.flip(src,flipCode)</span><br><span class="line">  flipCode 旋转类型：</span><br><span class="line">  0，绕x轴旋转</span><br><span class="line">  正数，绕y轴旋转</span><br><span class="line">  负数，绕x，y同时旋转</span><br></pre></td></tr></table></figure>
<h3 id="仿射"><a class="markdownIt-Anchor" href="#仿射"></a> <strong>仿射</strong></h3>
<p>仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作</p>
<p>该变换能够保持图像的平直性和平行性</p>
<p>仿射 = 平移 + 旋转</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)</span><br><span class="line">M:代表一个2x3的变换矩阵</span><br><span class="line">dsize:代表输出图像的尺寸大小</span><br><span class="line">flags:代表插值方式，默认INTER_LINEAR</span><br><span class="line">borderMode:代表边类型</span><br><span class="line"></span><br><span class="line">borderValue:代表边界值，默认0</span><br></pre></td></tr></table></figure>
<h3 id="透视"><a class="markdownIt-Anchor" href="#透视"></a> <strong>透视</strong></h3>
<p>仿射可以将矩阵映射成任意平行四边形<br />
透视变换可以将矩形映射成任意四边形</p>
<p>透视函数：<code>dst = cv2.warpPerspective(src,M,dsize,flags,borderMode,borderValue)</code></p>
<ul>
<li>M 代表一个3*3的变换矩阵</li>
<li>dsize代表输出图像的尺寸</li>
<li>flags代表插值方式</li>
<li>borderMode代表变类型</li>
<li>borderValue代表边界值</li>
</ul>
<p>生成转换举矩阵：<code>retval = cv2.getPerspectiveTransform(src,dst)</code></p>
<h3 id="重映射"><a class="markdownIt-Anchor" href="#重映射"></a> <strong>重映射</strong></h3>
<p>把一副图像内像素点放置到另一幅图像内的指定位置，这个过程被称为重映射</p>
<p>映射函数：<code>dst = cv2.remap(src,map1,map2,interpolation,borderMode,borderValue)</code></p>
<p>映射就是通过修改图像像素点的位置一副新的图像，在构建新图像时，需要确定新图像中的每个像素点在原图中的位置，因此，映射函数的作用就是查找新图像像素点在原始图像内的位置。该过程就是将新图像像素映射到原始图像的过程，因此被称为反向映射。</p>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv06</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv06/</url>
    <content><![CDATA[<h2 id="6形态学操作"><a class="markdownIt-Anchor" href="#6形态学操作"></a> 6，<strong>形态学操作</strong></h2>
<p>形态学，即数学形态学,图像处理中一个非常重要分操作，形态学主要从图像内提取分量信息，该分量信息通常对于表达和描绘图像时所使用的最本质的形状特征。</p>
<h3 id="腐蚀"><a class="markdownIt-Anchor" href="#腐蚀"></a> <strong>腐蚀</strong></h3>
<p>简介：腐蚀是形态学的最基本的形态学操作之一，它能够将图像的边界点消除，使图像沿着边界向内收缩，也可以将小于指定结构体元素的部分去除</p>
<p>作用：腐蚀用来<strong>收缩</strong>或者<strong>细化</strong>二值图像中的前景，借此实现去除噪声、元素分割等操作</p>
<p>原理：取局部最小值来实现</p>
<p><code>dst= cv2.erode( src, kernal, anchor, iterations, borderType )</code></p>
<h3 id="膨胀"><a class="markdownIt-Anchor" href="#膨胀"></a> <strong>膨胀</strong></h3>
<p>原理类似<strong>腐蚀</strong>,取局部最大值</p>
<p>膨胀就是求局部最大值的操作，核B与图形卷积，即计算核B覆盖的区域（体现局部）的像素点的最大值，并把这个最大值赋值给参考点指定的像素。这样就会使图像中的高亮区域逐渐增长</p>
<p><code>dst = cv2.dilate(src,kernal, anchor, iterations, borderType, borderValue )</code></p>
<h3 id="通用形态学函数"><a class="markdownIt-Anchor" href="#通用形态学函数"></a> <strong>通用形态学函数</strong></h3>
<p>形态学函数<br />
<code>dst = cv2.morphologyEx( src, kernal , anchor, iterations, borderType)</code></p>
<h3 id="开运算"><a class="markdownIt-Anchor" href="#开运算"></a> <strong>开运算</strong></h3>
<p>先腐蚀，后膨胀，这一过程称为开运算</p>
<h3 id="闭运算"><a class="markdownIt-Anchor" href="#闭运算"></a> <strong>闭运算</strong></h3>
<p>先膨胀，后腐蚀，这一过程称为闭运算</p>
<h3 id="形态学梯度运算"><a class="markdownIt-Anchor" href="#形态学梯度运算"></a> <strong>形态学梯度运算</strong></h3>
<p>形态学梯度运算 是用图像膨胀 减去 图像腐蚀的操作，该操作可以获得原始图像的前景图像的边缘</p>
<h3 id="礼帽运算"><a class="markdownIt-Anchor" href="#礼帽运算"></a> <strong>礼帽运算</strong></h3>
<p>礼帽运算是用原始图像减去开运算图像的操作，</p>
<p>礼貌运算能够获得图像的噪声信息</p>
<h3 id="黑帽运算"><a class="markdownIt-Anchor" href="#黑帽运算"></a> <strong>黑帽运算</strong></h3>
<p>黑帽运算是用闭运算图像减去原始图像的操作</p>
<p>闭运算能够获得图像内部的小孔，或者前景中的小黑点，或者得到比原始图像的边缘更暗的边缘部分</p>
<h3 id="核函数"><a class="markdownIt-Anchor" href="#核函数"></a> <strong>核函数</strong></h3>
<p>在进行形态学操作时，必须使用一个特定的核（结构单元）。该核能够自定义生成，也可以通过函数cv2.getStructuringElement()构造，它能够返回一个用于形态学处理的结构单元</p>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv05</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv05/</url>
    <content><![CDATA[<h2 id="5阈值处理"><a class="markdownIt-Anchor" href="#5阈值处理"></a> 5，<strong>阈值处理</strong></h2>
<p>阈值处理就是剔除图像中像素值高于一定值或者低于一定值的像素点，比如设定阈值为127，然后：</p>
<ul>
<li>将图像内所有像素值大于127的像素点设置为255</li>
<li>将图像内像素值小于或等于127的像素点设置为0</li>
</ul>
<p>opencv提供<code>cv2.threshold()</code>和<code>cv.adaptiveThreshold</code></p>
<h3 id="threldhold函数"><a class="markdownIt-Anchor" href="#threldhold函数"></a> <strong>threldhold函数</strong></h3>
<p><code>retval, dst = cv2.threshold(src,thresh,maxval,type)</code></p>
<ul>
<li>retval返回的阈值</li>
<li>dst代表阈值分割结果图像，与原始图像具有相同的大小和类型</li>
<li>src代表进行阈值阈值分割的图像</li>
<li>thresh 代表设定的阈值</li>
<li>maxval代表当type参数为thresh——binarry或者THRESH_BINARY_INV 类型时，需要设定的最大值</li>
<li>type代表阈值分割的类型：
<ul>
<li>cv2.THRESH_BINARY       二值化阈值处理</li>
<li>cv2.THRESH_BINARY_INV反 二值化阈值处理</li>
<li>cv2.THRESH_TRUNC        截断阈值化处理</li>
<li>cv2.THRESH_TOZERO_INV   超阈值零处理</li>
<li>CV2.THRESH_TOZERO       低阈值零处理</li>
</ul>
</li>
</ul>
<h3 id="自适应阈值处理"><a class="markdownIt-Anchor" href="#自适应阈值处理"></a> <strong>自适应阈值处理</strong></h3>
<p>也就是变化的阈值完成对图像的阈值处理</p>
<p><code>dst = cv.adaptiveThreshold(src, maxval,adaptiveMethod, thresholdType ,blockSize, C)</code></p>
<ul>
<li>
<p>adaptiveMethod  表示自适应方法有以下两个自适应阈值方法，都是逐个像素的计算自适应阈值，自适应阈值等于每个像素由参数blocksize所指定领域的加权平均值减去常量C</p>
<ul>
<li>cv2.ADAPTIVE_THRESH_MEAN_C      领域内所有像素点权重值都是一样的</li>
<li>CV2.ADAPTIVE_THRESH_GAUSSIAN_C  与领域各个像素点到中心点的距离相关，通过高斯方程得到各个点的权重值</li>
</ul>
</li>
<li>
<p>thresholdType   代表阈值处理方式</p>
</li>
<li>
<p>blockSize       代表块大小</p>
</li>
</ul>
<h3 id="otsu处理"><a class="markdownIt-Anchor" href="#otsu处理"></a> <strong>otsu处理</strong></h3>
<p>在使用cv2.threshold()进行阈值处理时，需要定义一个阈值，并以此阈值作为阈值处理的依据，通常情况下，图像都是色彩均匀的，这时直接将阈值处理成127比较合适</p>
<p>但是有时图像灰度级分布是不均匀的，如果此时还将阈值设置为127，就不合适。</p>
<p>otsu方法能够根据当前图像给出的最佳的类间分隔阈值，简而言之，otsu方法会遍历所有可能的阈值，从而找到最佳的阈值</p>
<p><code>t, otsu = cv2.threshold(img,,0,255,cv2.THRESH_BINARY+cv.THRESH_OTSU)</code></p>
<p>##,6，<strong>图像平滑处理</strong></p>
<p>在尽量保留图像原有信息的情况下，过滤掉图像内部的噪声，这一过程称为 图像平滑处理，也叫 图像模糊处理，也叫做去噪</p>
<p>图像平滑处理的基本原理就是，将噪声所在像素点的值处理为其周围临近像素点的值的近似值，取近似值的方式有如下：</p>
<ul>
<li>均值滤波</li>
<li>方框滤波</li>
<li>高斯滤波</li>
<li>中值滤波</li>
<li>双边滤波</li>
<li>2D卷积（自定义滤波）</li>
</ul>
<h3 id="均值滤波"><a class="markdownIt-Anchor" href="#均值滤波"></a> <strong>均值滤波</strong></h3>
<p>均值滤波是指用当前像素点周围N×N个像素点的滤波来代替当前像素值。</p>
<p>均值滤波函数<code>dst = cv2.blur(src,ksize,anchor,borderType)</code></p>
<ul>
<li>ksize是滤波核的大小，滤波核大小是指在均值处理中，其邻域图像的高度和宽度。核越大，去噪效果越好，但是越失真</li>
<li>anchor是锚点，默认（-1，-1），表示当前计算均值的点位于核的中心点的位置</li>
<li>bordertype 是边界样式，该值决定以何种方式处理边界</li>
<li></li>
</ul>
<h3 id="方框滤波"><a class="markdownIt-Anchor" href="#方框滤波"></a> <strong>方框滤波</strong></h3>
<p>方框滤波中，不会计算像素均值，可以自由选择是否对均值滤波的结果进行归一化，即可以自由选择滤波结果是邻域像素之和的平均值，还是邻域像素值之和。</p>
<p><code>dst = cv2.boxFilter( src,ddepth,ksize,anvhor,normalize,borderType)</code></p>
<ul>
<li>ddepth 处理结果图像深度，一般使用-1表示与原始图像使用相同的图像深度</li>
<li>ksize 是滤波核的大小，滤波核大小是指滤波处理过程中所选择的邻域图像的高度和深度</li>
<li>anchor 锚点，其默认值是（-1，-1）表示当前计算均值的点位于核中心点位置，该值使用默认值即可</li>
<li>normalize 表示在滤波时是否进行归一化
<ul>
<li>=1 要进行归一化</li>
<li>=0 不进行归一化</li>
</ul>
</li>
</ul>
<h3 id="高斯滤波"><a class="markdownIt-Anchor" href="#高斯滤波"></a> <strong>高斯滤波</strong></h3>
<p>进行均值滤波和方框滤波时，其邻域内每个像素的权重都是相等的，在高斯滤波中，会将中心点的权重加大，远离中心点的权重减小</p>
<p>核的宽高可以不同，但必须是奇数</p>
<p><code>dst = cv2.GaussianBlur(src,ksize,sigmaX,sigmaY,borderType)</code></p>
<ul>
<li>sigmaX 卷积核在水平方向上的标准差</li>
<li>sigmaX 卷积核在垂直方向上的标准差</li>
<li></li>
</ul>
<h3 id="中值滤波"><a class="markdownIt-Anchor" href="#中值滤波"></a> <strong>中值滤波</strong></h3>
<p>中值滤波用邻域内所有像素点的中间值来代替当前像素点的像素值</p>
<p>原理，将邻域内所有像素点像素值排序，取得中间位置的像素值作为当前像素点的像素值</p>
<p><code>dst= cv2.medianBlur(src, ksize)</code></p>
<h3 id="双边滤波"><a class="markdownIt-Anchor" href="#双边滤波"></a> <strong>双边滤波</strong></h3>
<p>双边滤波是综合考虑空间信息和色彩信息的滤波方式，在滤波过程中能够有效的保护图像类的边缘信息</p>
<p>原理：双边滤波在计算某一个像素点的新值时，不仅考虑距离信息（距离越远，权重越小），还考虑色彩距离（色彩差别越大，权重越小）</p>
<p>作用：保护边缘信息</p>
<p>函数：<code>dst = cv2.bilateralFilter(src,d,sigmaColor,sigmaSpace,borderType)</code></p>
<ul>
<li>d是选取空间距离的参数</li>
<li>sigmaColor是滤波处理时选取的颜色差值范围</li>
<li>sigmaSpace是坐标空间中的sigma值</li>
<li>borderType边界样式，决定以何种方式处理边界</li>
</ul>
<h3 id="2d-卷积"><a class="markdownIt-Anchor" href="#2d-卷积"></a> <strong>2D 卷积</strong></h3>
<p>使用自定义卷积核实现卷积操作：<br />
<code>dst= cv2.filter(src,ddepth,kernal,anchor,delta,borderType)</code></p>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv07</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv07/</url>
    <content><![CDATA[<h2 id="7图像梯度"><a class="markdownIt-Anchor" href="#7图像梯度"></a> 7，<strong>图像梯度</strong></h2>
<p>图像梯度的计算就是图像变化的速度，对于图像的边缘部分，其灰度值变化较大，梯度值也较大，相反，对于图像中比较平滑的部分，其灰度值较小，相应的梯度值也较小</p>
<h3 id="sobel-理论基础"><a class="markdownIt-Anchor" href="#sobel-理论基础"></a> <strong>sobel 理论基础</strong></h3>
<p>利用局部差分寻找边缘，一般有水平方向的Gx和垂直方向的Gy两个分量</p>
<p>水平方向的分量等于，像素点的左侧像素值减去右侧像素值</p>
<p>垂直方向的分量等于，像素点的上方像素值减去下方像素值</p>
<p>sobel核的算子一般如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Gx=  
\left[\begin{matrix}
   -1 &amp; 0 &amp; 1 \\
   -2 &amp; 0 &amp; 2 \\
   -1 &amp; 0 &amp; 1 \\
  \end{matrix} \right]\tag{A}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">A</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(B)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Gy=
\left[\begin{matrix}
   -1 &amp; -2 &amp; -1 \\
   0 &amp; 0 &amp; 0 \\
   1 &amp; 2 &amp; 1 \\
  \end{matrix} \right]\tag{B}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">B</span></span><span class="mord">)</span></span></span></span></span></span></p>
<h3 id="sobel算子及函数使用"><a class="markdownIt-Anchor" href="#sobel算子及函数使用"></a> <strong>sobel算子及函数使用</strong></h3>
<p><code>cv2.Sobel(src,ddepth,dx,dy,ksize,scale,delta,borderType)</code></p>
<ul>
<li>dx：表示x方向上的求导阶数</li>
<li>dy：表示y方向上的求导阶数</li>
<li>ksize；表示核大小</li>
<li>scale：表示计算导数值采用的缩放因子</li>
<li>delta：表示加在目标图像dst上的值</li>
</ul>
<h3 id="scharr-算子及函数使用"><a class="markdownIt-Anchor" href="#scharr-算子及函数使用"></a> <strong>scharr 算子及函数使用</strong></h3>
<p>scharr和sobel计算流程是一样的，只是核不一样，scharr的核如下</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Gx=  
\left[\begin{matrix}
   -3 &amp; 0 &amp; 3 \\
   -10 &amp; 0 &amp; 10 \\
   -3 &amp; 0 &amp; 3 \\
  \end{matrix} \right]\tag{A}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">A</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(B)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Gy=
\left[\begin{matrix}
   -3 &amp; -10 &amp; -3 \\
   0 &amp; 0 &amp; 0 \\
   3 &amp; 10 &amp; 3 \\
  \end{matrix} \right]\tag{B}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">B</span></span><span class="mord">)</span></span></span></span></span></span></p>
<h3 id="laplacian-算子及函数使用"><a class="markdownIt-Anchor" href="#laplacian-算子及函数使用"></a> <strong>Laplacian 算子及函数使用</strong></h3>
<p>Laplacian是一种二阶导数算子，其具有旋转不变性，可以满足不同方向上的图像边缘锐化（边缘检测）的要求，通常情况下，其算子的系数之和需要为0<br />
算子核如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[\begin{matrix}
   0 &amp; 1 &amp; 0 \\
   1 &amp; -4 &amp; 1 \\
   0 &amp; 1 &amp; 0 \\
  \end{matrix} \right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="算子总结"><a class="markdownIt-Anchor" href="#算子总结"></a> <strong>算子总结</strong></h3>
<p>sobel算子：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi mathvariant="normal">，</mi><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">Gx=  
\left[\begin{matrix}
   -3 &amp; 0 &amp; 3 \\
   -10 &amp; 0 &amp; 10 \\
   -3 &amp; 0 &amp; 3 \\
  \end{matrix} \right]
  ，
  Gy=
\left[\begin{matrix}
   -3 &amp; -10 &amp; -3 \\
   0 &amp; 0 &amp; 0 \\
   3 &amp; 10 &amp; 3 \\
  \end{matrix} \right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>scharr算子：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi mathvariant="normal">，</mi><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">Gx=  
\left[\begin{matrix}
   -3 &amp; 0 &amp; 3 \\
   -10 &amp; 0 &amp; 10 \\
   -3 &amp; 0 &amp; 3 \\
  \end{matrix} \right]
，
Gy=
\left[\begin{matrix}
   -3 &amp; -10 &amp; -3 \\
   0 &amp; 0 &amp; 0 \\
   3 &amp; 10 &amp; 3 \\
  \end{matrix} \right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>laplacian算子：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[\begin{matrix}
   0 &amp; 1 &amp; 0 \\
   1 &amp; -4 &amp; 1 \\
   0 &amp; 1 &amp; 0 \\
  \end{matrix} \right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv09</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv09/</url>
    <content><![CDATA[<h2 id="9图像金字塔"><a class="markdownIt-Anchor" href="#9图像金字塔"></a> 9，<strong>图像金字塔</strong></h2>
<p>图像金字塔是由一副图像的多个不同分辨率的子图所构成的图像集合，该组图像由单个图像通过不断地降采样所产生的，最小的图像可能仅仅有一个像素点</p>
<h3 id="理论基础"><a class="markdownIt-Anchor" href="#理论基础"></a> <strong>理论基础</strong></h3>
<p>图像金字塔是同一图像不同分辨率的子图的集合，是通过对原图像不断的向下采样产生的，即由高分辨率的图像（大尺寸）产生低分辨率的图像（小尺寸）</p>
<ol>
<li>
<p>下采样：图像宽高变成原来的一半</p>
<ol>
<li>简单采样：删除偶数行和欧数列</li>
<li>滤波器采样：
<ol>
<li>邻域滤波器：邻域内求平均值</li>
<li>高斯滤波器：像素点越远权值越小</li>
</ol>
</li>
</ol>
</li>
<li>
<p>上采样：图像宽高是原来2倍</p>
<ol>
<li>补0插值：对像素点以补0完成插值</li>
<li>临近插值：用最邻近的点给没有值的像素点赋值</li>
</ol>
</li>
</ol>
<h3 id="pyrdown函数及使用"><a class="markdownIt-Anchor" href="#pyrdown函数及使用"></a> <strong>pyrDown函数及使用</strong></h3>
<p>下采样函数<code>dst = pyrDown(src, dstsize,borderType)</code></p>
<ul>
<li>dssize目标图像的大小</li>
</ul>
<h3 id="pyrup函数及使用"><a class="markdownIt-Anchor" href="#pyrup函数及使用"></a> <strong>pyrUp函数及使用</strong></h3>
<p>上采样函数<code>dst = pyrUp(src, dstsize,borderType)</code></p>
<h3 id="采样可逆行研究"><a class="markdownIt-Anchor" href="#采样可逆行研究"></a> <strong>采样可逆行研究</strong></h3>
<p>下采样会丢失信息，所以下采样和上采样不是可逆的</p>
<h3 id="拉普拉斯金字塔"><a class="markdownIt-Anchor" href="#拉普拉斯金字塔"></a> <strong>拉普拉斯金字塔</strong></h3>
<p>我们希望通过对金字塔中的小图像进行上采样以获得完整的大尺寸高分辨率图像，这时就需要用到拉普拉斯金字塔</p>
<p>为了在向上采样时能够恢复具有较高分辨率的原始图像，就要获取在采样过程中所丢失的信息，这些丢失的信息就构成了拉普拉斯金字塔</p>
<p>拉普拉斯金字塔的第i层，等于 高斯金字塔中的第i层 与 高斯金字塔第i+1层上采样结果 之差</p>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv08</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv08/</url>
    <content><![CDATA[<h2 id="8canny边缘检测"><a class="markdownIt-Anchor" href="#8canny边缘检测"></a> 8，<strong>canny边缘检测</strong></h2>
<p>canny检测步骤：</p>
<ol>
<li>去噪，噪声会影响边缘检测的准确性
<ul>
<li>应用高斯滤波器去噪，一般采用5*5的核</li>
<li>高斯滤波的特点，离中心越远权值越小</li>
</ul>
</li>
<li>计算梯度的幅度和方向
<ul>
<li>梯度的方向和边缘方向是垂直的</li>
<li>根据边缘检测算子得出的水平和垂直方向的分量，计算出梯度的幅度和方向</li>
</ul>
</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">梯</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">幅</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">：</mi><mi>G</mi><mo>=</mo><msqrt><msubsup><mi>G</mi><mi>x</mi><mn>2</mn></msubsup></msqrt><mo>+</mo><msqrt><msubsup><mi>G</mi><mi>y</mi><mn>2</mn></msubsup></msqrt></mrow><annotation encoding="application/x-tex">梯度的幅度：G = \sqrt{G_x^2} +\sqrt{G_y^2}  
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">梯</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">幅</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.259571em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.980429em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.940429em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,
158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067
c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,
175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71
c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,
-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26
s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.259571em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6276250000000001em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.212375em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1723749999999997em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,
572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,
-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39
c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60
s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,
-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z
M1001 80H400000v40H1013z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6276250000000001em;"><span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">梯</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">向</mi><mi mathvariant="normal">：</mi><mi>θ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy="false">(</mo><msqrt><msubsup><mi>G</mi><mi>x</mi><mn>2</mn></msubsup></msqrt><mo separator="true">,</mo><msqrt><msubsup><mi>G</mi><mi>y</mi><mn>2</mn></msubsup></msqrt><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">梯度的方向：\theta = arctan( \sqrt{G_x^2} ,\sqrt{G_y^2})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">梯</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6276250000000001em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.980429em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.940429em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,
158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067
c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,
175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71
c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,
-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26
s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.259571em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.212375em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1723749999999997em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,
572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,
-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39
c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60
s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,
-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z
M1001 80H400000v40H1013z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6276250000000001em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<ol start="3">
<li>
<p>极非大值抑制，即适当的让边缘变瘦</p>
<ul>
<li>如果该点是正负梯度上的局部最大值，保留该点</li>
<li>如果不是，则抑制该点（归零）</li>
</ul>
</li>
<li>
<p>确定边缘，使用双阈值算法确定最终的边缘信息</p>
<ul>
<li>设置两个阈值，一个为高阈值maxval,一个为低阈值minval</li>
<li>如果当前边缘像素的梯度值大于maxval，则将当前边缘标记为强边缘</li>
<li>如果当前边缘像素梯度值介于maxval和minval之间，则将当前边缘像素标记为虚边缘</li>
<li>如果小于minval，则抑制但钱边缘像素</li>
<li>与强边缘相连，则将该边缘标记为边缘</li>
<li>与强边缘无连接，则将该边缘抑制</li>
</ul>
</li>
</ol>
<h3 id="canny函数及使用"><a class="markdownIt-Anchor" href="#canny函数及使用"></a> <strong>canny函数及使用</strong></h3>
<p><code>edges = cv.Canny(image ,threshold1, threshold2, apertureSize, L2gradient)</code><br />
- threshold1第一个阈值<br />
- threshold2第二个阈值<br />
- apertureSize表示sobel孔径的大小<br />
- L2gradient计算梯度幅度的标识</p>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv10</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv10/</url>
    <content><![CDATA[<h2 id="10图像轮廓"><a class="markdownIt-Anchor" href="#10图像轮廓"></a> 10，<strong>图像轮廓</strong></h2>
<p>边缘检测虽然能够检测出边缘，但是边缘是不连续的，检测到的边缘并不是一个整体，图像轮廓是指将边缘连接起来形成一个整体，用于后续的计算。</p>
<p>通过对图像轮廓的操作，我们能够获得目标图像的大小，位置，方向等信息</p>
<h3 id="查找并绘制轮廓"><a class="markdownIt-Anchor" href="#查找并绘制轮廓"></a> <strong>查找并绘制轮廓</strong></h3>
<p>一个轮廓对应着一系列的点，这些点以某种方式表示图像中的一条曲线</p>
<p><code>cv.findContours()</code>用于查找图像的轮廓，并能够根据参数返回特定方式的轮廓曲线，函数<code>cv2.drowContours()</code>能将查找到的轮廓绘制到图像上</p>
<h3 id="矩特征"><a class="markdownIt-Anchor" href="#矩特征"></a> <strong>矩特征</strong></h3>
<p>比较两个轮廓最简单的方法就是比较两者的轮廓矩。轮廓矩代表着一个轮廓、一幅图像，一组点集的全局特征。矩信息包含了对应对象不同类型的几何特征，例如大小、位置、角度、形状等。矩特征被广泛用于模式识别和图像识别等方便</p>
<ol>
<li>矩的计算：moments函数</li>
</ol>
<p><code>retval = cv2.moments(array, binaryImage)</code></p>
<ul>
<li>array 可以是点集，也可以是灰度图像或二值图像，整个点击作为一条轮廓</li>
<li>binaryImage：若为true，array中所有非0值都被处理成1</li>
<li>retval 返回值是一个特征矩，主要包括：
<ul>
<li>空间矩,计算面积、周长
<ul>
<li>零阶矩:m00</li>
<li>一阶矩:m10,m01</li>
<li>二阶矩:m20,m11</li>
<li>三阶矩:m30</li>
</ul>
</li>
<li>中心距：计算平移不变性，比较不同位置对象是否一致
<ul>
<li>二阶中心距:mu20,mu11</li>
<li>三阶中心距:mu30</li>
</ul>
</li>
<li>归一化中心矩：通过除以物体的总尺寸而获得的缩放不变性，具有平移不变性，还具有缩放不变性
<ul>
<li>二阶hu矩:nu20,nu11,nu02</li>
<li>三阶hu矩:nu30,nu21,nu12,nu03</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>2.计算轮廓的长度：arcLength函数<br />
<code>retval = cv2.arcLength(curve, closed)</code></p>
<ul>
<li>retval返回值是轮廓的周长</li>
<li>curve 是轮廓</li>
<li>closed是布尔值，用来表示轮廓是否封闭</li>
</ul>
<h3 id="hu钜"><a class="markdownIt-Anchor" href="#hu钜"></a> <strong>hu钜</strong></h3>
<p>hu矩是归一化中心矩的线型组合。hu矩在图像旋转，缩放，平移等操作后，仍能保持矩的不变性，所以经常会使用hu矩来识别图像额特征</p>
<p><code>hu = cv2.HuMoments(m)</code></p>
<h3 id="轮廓拟合"><a class="markdownIt-Anchor" href="#轮廓拟合"></a> <strong>轮廓拟合</strong></h3>
<p>在计算轮廓时，可能并不需要实际的轮廓，而仅需要一个接近于轮廓的近似多边形的方法。</p>
<ol>
<li>轮廓拟合</li>
</ol>
<p><code>x, y, w, h = cv2.boundingRect( array)</code></p>
<ul>
<li>array 是灰度图像或轮廓</li>
<li>该函数具有四个返回值,分别表示：</li>
<li>矩阵边界左上角顶点的x坐标</li>
<li>矩阵边界左上角顶点的y坐标</li>
<li>矩阵边界x方向的长度</li>
<li>矩阵边界y方向的长度</li>
</ul>
<ol start="2">
<li>最小包围矩阵框<br />
<code>retval = cv2.minAreaRect(array)</code></li>
</ol>
<ul>
<li>返回值retval表示返回的矩阵特征信息， 该值结构是：
<ul>
<li>最小外接矩形的中心，</li>
<li>（宽度，高度），</li>
<li>旋转角</li>
</ul>
</li>
</ul>
<ol start="3">
<li>
<p>最小包围圆形<br />
<code>center,radius = cv2.minEnclosingCircle(array)</code></p>
</li>
<li>
<p>最优拟合直线</p>
</li>
<li>
<p>最小包围三角形</p>
</li>
<li>
<p>逼近多边形</p>
</li>
</ol>
<h3 id="凸包"><a class="markdownIt-Anchor" href="#凸包"></a> <strong>凸包</strong></h3>
<p>逼近多边形是轮廓的高度近似，但是有时候，我们希望使用一个多边形的凸包，来简化它。凸包跟逼近多边形很像，只不过他是物体最外层的凸多边形。凸包指的是完全包括原有轮廓，并且仅由轮廓上的点所构成的多边形</p>
<p>在凸包中，任意连续三个点的内角小于180度</p>
<ol>
<li>获取凸包</li>
<li>凸缺陷
<ol>
<li>凸包和轮廓之间的部分，称为凸缺陷，</li>
</ol>
</li>
<li>几何学测试
<ol>
<li>测试轮廓是否是凸型的</li>
<li>点到轮廓的距离：<br />
<code>retval = cv2.pointPolygonTest( contour, pt, measureDist)</code></li>
</ol>
</li>
</ol>
<h3 id="利用形状场景算法比较轮廓"><a class="markdownIt-Anchor" href="#利用形状场景算法比较轮廓"></a> <strong>利用形状场景算法比较轮廓</strong></h3>
<p>用矩比较形状是一种非常有效的方法，不过现在有更高效的方法。</p>
<p>从opencv3开始，就开始有了专有模块shape，该模块中的形状场景算法能够更高效的比较形状</p>
<ol>
<li>计算形状场景距离<br />
1.</li>
</ol>
<h3 id="轮廓的特征值"><a class="markdownIt-Anchor" href="#轮廓的特征值"></a> <strong>轮廓的特征值</strong></h3>
<ol>
<li>
<p>宽高比</p>
</li>
<li>
<p>extent</p>
</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mi>x</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">轮</mi><mi mathvariant="normal">廓</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi><mo stretchy="false">(</mo><mi mathvariant="normal">对</mi><mi mathvariant="normal">象</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">矩</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">边</mi><mi mathvariant="normal">界</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">extent = \frac{轮廓面积(对象面积)}{矩形边界面积}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">矩</span><span class="mord cjk_fallback">形</span><span class="mord cjk_fallback">边</span><span class="mord cjk_fallback">界</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">轮</span><span class="mord cjk_fallback">廓</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span><span class="mopen">(</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">象</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ol start="3">
<li>Soliity</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>o</mi><mi>l</mi><mi>i</mi><mi>d</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">轮</mi><mi mathvariant="normal">廓</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">对</mi><mi mathvariant="normal">象</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi><mi mathvariant="normal">）</mi></mrow><mrow><mi mathvariant="normal">凸</mi><mi mathvariant="normal">包</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">solidity = \frac{轮廓面积（对象面积）}{凸包面积}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.363em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">凸</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">轮</span><span class="mord cjk_fallback">廓</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">象</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">）</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ol start="4">
<li>等效直径<br />
可以用等效直径来衡量轮廓的特征值，该值是与轮廓面积相等的圆形的直径</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">等</mi><mi mathvariant="normal">效</mi><mi mathvariant="normal">直</mi><mi mathvariant="normal">径</mi><mo>=</mo><msqrt><mfrac><mrow><mn>4</mn><mo>×</mo><mi mathvariant="normal">轮</mi><mi mathvariant="normal">廓</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi></mrow><mi>π</mi></mfrac></msqrt></mrow><annotation encoding="application/x-tex">等效直径 = \sqrt{\frac{4\times轮廓面积}{\pi}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">效</span><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">径</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.788405em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.651595em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">轮</span><span class="mord cjk_fallback">廓</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6115950000000003em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,
-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,
25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,
-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079
c169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.788405em;"><span></span></span></span></span></span></span></span></span></span></p>
<ol start="5">
<li>
<p>方向<br />
函数cv2.fitEllipse()可以用来构造最优拟合椭圆，还可以在返回椭圆的中心点、轴长、旋转角度等信息。使用这种形式能够更直观地获取椭圆的方向等信息</p>
</li>
<li>
<p>掩膜和像素点<br />
有时我们希望获取对象的掩膜图像以及对应的点</p>
</li>
<li>
<p>平均颜色与平均灰度</p>
</li>
<li>
<p>极点</p>
<ol>
<li>有时候我们希望获取某个对象的极值点，例如最左端、最右端、最上端、最下端的四个点。</li>
<li>opencv提供了相应的函数找出这些点</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv12</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv12/</url>
    <content><![CDATA[<h2 id="12模板匹配"><a class="markdownIt-Anchor" href="#12模板匹配"></a> 12，<strong>模板匹配</strong></h2>
<h3 id="模板匹配基础"><a class="markdownIt-Anchor" href="#模板匹配基础"></a> <strong>模板匹配基础</strong></h3>
<h3 id="多模板匹配"><a class="markdownIt-Anchor" href="#多模板匹配"></a> <strong>多模板匹配</strong></h3>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv13</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv13/</url>
    <content><![CDATA[<h2 id="13霍夫变换"><a class="markdownIt-Anchor" href="#13霍夫变换"></a> 13，<strong>霍夫变换</strong></h2>
<h3 id="霍夫直线变换"><a class="markdownIt-Anchor" href="#霍夫直线变换"></a> 霍夫直线变换</h3>
<h3 id="霍夫圆形变换"><a class="markdownIt-Anchor" href="#霍夫圆形变换"></a> <strong>霍夫圆形变换</strong></h3>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv14</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv14/</url>
    <content><![CDATA[<h2 id="14图像分割与提取"><a class="markdownIt-Anchor" href="#14图像分割与提取"></a> 14，<strong>图像分割与提取</strong></h2>
<h3 id="用分水岭算法实现图像分割"><a class="markdownIt-Anchor" href="#用分水岭算法实现图像分割"></a> <strong>用分水岭算法实现图像分割</strong></h3>
<h3 id="交互式前景提取"><a class="markdownIt-Anchor" href="#交互式前景提取"></a> <strong>交互式前景提取</strong></h3>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv15</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv15/</url>
    <content><![CDATA[<h2 id="15视频处理"><a class="markdownIt-Anchor" href="#15视频处理"></a> 15，<strong>视频处理</strong></h2>
<h3 id="videocapture类"><a class="markdownIt-Anchor" href="#videocapture类"></a> <strong>VideoCapture类</strong></h3>
<h3 id="viedeowriter类"><a class="markdownIt-Anchor" href="#viedeowriter类"></a> <strong>ViedeoWriter类</strong></h3>
<h3 id="视频操作基础"><a class="markdownIt-Anchor" href="#视频操作基础"></a> <strong>视频操作基础</strong></h3>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv11</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv11/</url>
    <content><![CDATA[<h2 id="11傅里叶变换"><a class="markdownIt-Anchor" href="#11傅里叶变换"></a> 11，<strong>傅里叶变换</strong></h2>
<p>图像处理一般分为空间域处理和频率域处理</p>
<p>空间域处理是直接对图像中的像素进行处理</p>
<p>频率域处理是先将图像变为图像域，然后在频率域对图像进行处理，最后再通过反变换将图像从频率域变换到空间域。</p>
<p>傅里叶变换能够将将空间域变换到频率域，而逆傅里叶变换能够将频率域变换到空间域内。</p>
<h3 id="理论基础"><a class="markdownIt-Anchor" href="#理论基础"></a> <strong>理论基础</strong></h3>
<h3 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> <strong>实现</strong></h3>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv16</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv16/</url>
    <content><![CDATA[<h2 id="16绘图机交互"><a class="markdownIt-Anchor" href="#16绘图机交互"></a> 16，<strong>绘图机交互</strong></h2>
<h3 id="绘图基础"><a class="markdownIt-Anchor" href="#绘图基础"></a> <strong>绘图基础</strong></h3>
<h3 id="鼠标交互"><a class="markdownIt-Anchor" href="#鼠标交互"></a> <strong>鼠标交互</strong></h3>
<h3 id="滚动条"><a class="markdownIt-Anchor" href="#滚动条"></a> <strong>滚动条</strong></h3>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv17</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv17/</url>
    <content><![CDATA[<h2 id="17k近邻算法"><a class="markdownIt-Anchor" href="#17k近邻算法"></a> 17，<strong>k近邻算法</strong></h2>
<h3 id="理论基础"><a class="markdownIt-Anchor" href="#理论基础"></a> <strong>理论基础</strong></h3>
<h3 id="计算"><a class="markdownIt-Anchor" href="#计算"></a> <strong>计算</strong></h3>
<h3 id="手写数字识别原理"><a class="markdownIt-Anchor" href="#手写数字识别原理"></a> <strong>手写数字识别原理</strong></h3>
<h3 id="自定义函数手写数字识别"><a class="markdownIt-Anchor" href="#自定义函数手写数字识别"></a> <strong>自定义函数手写数字识别</strong></h3>
<h3 id="k近邻模块的基本使用"><a class="markdownIt-Anchor" href="#k近邻模块的基本使用"></a> <strong>k近邻模块的基本使用</strong></h3>
<h3 id="k-近邻手写板数字的识别"><a class="markdownIt-Anchor" href="#k-近邻手写板数字的识别"></a> <strong>K 近邻手写板数字的识别</strong></h3>
<h3 id="svm案例介绍"><a class="markdownIt-Anchor" href="#svm案例介绍"></a> <strong>svm案例介绍</strong></h3>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习/opencv笔记/opencv18</title>
    <url>/HeronWan.github.io/2020/08/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/opencv%E7%AC%94%E8%AE%B0/opencv18/</url>
    <content><![CDATA[<h2 id="18k均值聚类"><a class="markdownIt-Anchor" href="#18k均值聚类"></a> 18，<strong>k均值聚类</strong></h2>
]]></content>
      <categories>
        <category>opencv笔记</category>
        <category>深度学习</category>
      </categories>
  </entry>
</search>
