{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/images/01.jpg","path":"images/01.jpg","modified":0,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"source/images/pic001.png","path":"images/pic001.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"source/images/bg2.jpg","path":"images/bg2.jpg","modified":0,"renderable":0},{"_id":"source/images/bg3.jpg","path":"images/bg3.jpg","modified":0,"renderable":0},{"_id":"source/images/bg1.jpg","path":"images/bg1.jpg","modified":0,"renderable":0},{"_id":"source/images/bg1.png","path":"images/bg1.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1592483868380},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1592483868380},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1592483868380},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1592483868381},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1592483868381},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1592483868381},{"_id":"themes/next/_config.yml","hash":"41e76c132ce6d2b6457f23f39be03db1efea0959","modified":1592546928638},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1592483868382},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1592483868389},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1592483868412},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1592483868382},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1592483868383},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1592483868383},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1592483868383},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1592483868384},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1592483868384},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1592483868384},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1592483868384},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1592483868384},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1592483868389},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1592483868389},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1592483868389},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1592483868390},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1592483868390},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1592483868390},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1592483868390},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1592483868391},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1592483868391},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1592483868391},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1592483868391},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1592483868391},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1592483868392},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1592483868392},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1592483868392},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1592483868392},{"_id":"themes/next/languages/tr.yml","hash":"46e09f2119cbfbcf93fb8dbd267dccabeb8b0cda","modified":1592483868392},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1592483868393},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1592483868393},{"_id":"themes/next/languages/zh-CN.yml","hash":"81d73e21402dad729053a3041390435f43136a68","modified":1592483868393},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1592483868393},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1592483868393},{"_id":"themes/next/layout/_layout.swig","hash":"9554bd0f5c5a0438aa7b64065be5561c374d260e","modified":1592483868394},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1592483868411},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1592483868411},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1592483868412},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1592483868412},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1592483868412},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1592483868412},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1592483868418},{"_id":"source/_data/styles.styl","hash":"a64fc08d4f751279d294b6cb0c83fa6571451282","modified":1592547098062},{"_id":"source/about/index.md","hash":"626b0714130022937e82d80946e03682534f9c78","modified":1592486608168},{"_id":"source/archives/index.md","hash":"aaf25d3b01d1b64ef6615c823ed694078c8f3d7d","modified":1592483868339},{"_id":"source/categories/index.md","hash":"036279ef880794e20aa69f3d83a2f12a60503f6a","modified":1592483868339},{"_id":"source/images/01.jpg","hash":"11f979731f1cf3926d69c326d9207879140f1175","modified":1592483868340},{"_id":"source/images/avatar.jpg","hash":"3a1136455bec7eb00d3aca03938e13ae9d62a44e","modified":1592483868341},{"_id":"source/tags/index.md","hash":"f8e8b298ae39ab7f3ba5891665811bdf51a4f863","modified":1592483868342},{"_id":"source/images/pic001.png","hash":"e55de44e7a429e4814fb823e48144ae7914203ef","modified":1592483868342},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1592483868385},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1592483868385},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1592483868385},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1592483868386},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1592483868386},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1592483868387},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1592483868387},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1592483868388},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1592483868387},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1592483868388},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1592483868388},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1592483868388},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1592483868389},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1592483868394},{"_id":"themes/next/layout/_macro/post.swig","hash":"c3fd56bac90ce45a0c79ddfe68beb223ad0d72b4","modified":1592483868394},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1592483868394},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1592483868395},{"_id":"themes/next/layout/_partials/footer.swig","hash":"0e650e97d5fadc4b8a9a0fec00fe7db642dc3f76","modified":1592483868395},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1592483868397},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1592483868398},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1592483868400},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1592483868400},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1592483868401},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1592483868401},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1592483868403},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1592483868403},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1592483868405},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1592483868407},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1592483868408},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1592483868408},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1592483868413},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1592483868415},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1592483868416},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1592483868416},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1592483868416},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1592483868417},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1592483868417},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1592483868417},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1592483868417},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1592483868417},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1592483868418},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1592483868418},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1592483868418},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1592483868419},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1592483868418},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1592483868419},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1592483868419},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1592483868419},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1592483868420},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1592483868420},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1592483868420},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1592483868439},{"_id":"themes/next/source/css/main.styl","hash":"815ef30987d02f3d76dbe4b5ee3a72135a152678","modified":1592483868445},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1592483868446},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1592483868446},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1592483868446},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1592483868447},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1592483868447},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1592483868447},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1592483868447},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1592483868448},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1592483868448},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1592483868448},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1592483868448},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1592483868448},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1592483868449},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1592483868449},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1592483868449},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1592483868449},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1592483868450},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1592483868450},{"_id":"themes/next/source/js/utils.js","hash":"53ce574c301a8b958e7f825beb193c77fb975e33","modified":1592483868451},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1592483868451},{"_id":"source/_posts/hexo博客相关/5.hexo使用.md","hash":"168538ce4c8f17ca4821a242feec4e63078b0f6c","modified":1598786458204},{"_id":"source/_posts/hexo博客相关/hello-world.md","hash":"eca387483fb070727b12974cecf4057e139cc4f5","modified":1592483868336},{"_id":"source/_posts/hexo博客相关/readme.md","hash":"f11a6454495150b16342edc45f05f10e36f72cb2","modified":1598781709198},{"_id":"source/_posts/前端笔记/最佳实践.md","hash":"5755d9876df4981925bc55d094ebe10488dfe318","modified":1598795988746},{"_id":"source/_posts/深度学习/opencv.md","hash":"a52d6714098dd0e1d6f8f29272c13a06643af6ce","modified":1592483868335},{"_id":"source/_posts/算法笔记/leetcode做题总结.md","hash":"ccb5a23d5b94dd8f5658999e8b37e5b2c3b7bcca","modified":1592658879552},{"_id":"source/_posts/算法笔记/康拓展开与康拓逆展开.md","hash":"d62450655fe4a00c640fd707b06087becbe611c0","modified":1592583051988},{"_id":"source/_posts/软件与工具使用/git常见问题.md","hash":"dd2e051448a809e45264ff70d04689e1dcdaf078","modified":1592483868336},{"_id":"source/_posts/软件与工具使用/guns笔记.md","hash":"8244261390e48ab4ce0c3b57a38570933003c994","modified":1598799229837},{"_id":"source/_posts/软件与工具使用/linux命令.md","hash":"53c59dc7154d142042d71ab7b3a7afe060afc830","modified":1592483868336},{"_id":"source/_posts/软件与工具使用/markdown笔记.md","hash":"bd779f8237219ee927732bc5963a96afe7b05d9c","modified":1592483868337},{"_id":"source/_posts/软件与工具使用/vscode笔记.md","hash":"580b34bda531f11567858d8fd18a5a48c38f9841","modified":1598781894623},{"_id":"source/_posts/软件与工具使用/window命令行笔记.md","hash":"5de70ee4152683075f31e44827520efbb9551eab","modified":1598797263575},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1592483868395},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1592483868395},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1592483868396},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1592483868396},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1592483868396},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1592483868397},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1592483868397},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1592483868397},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1592483868398},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1592483868398},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1592483868398},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1592483868399},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1592483868399},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1592483868399},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1592483868399},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1592483868400},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1592483868399},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1592483868400},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1592483868401},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1592483868402},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1592483868402},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1592483868402},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1592483868403},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1592483868404},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1592483868404},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1592483868404},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1592483868404},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1592483868405},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1592483868405},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1592483868406},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1592483868406},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1592483868406},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1592483868407},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1592483868407},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1592483868407},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1592483868408},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1592483868408},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1592483868408},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1592483868409},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1592483868409},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1592483868409},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1592483868410},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1592483868410},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1592483868410},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1592483868410},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1592483868411},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1592483868411},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1592483868411},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1592483868413},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1592483868413},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1592483868413},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1592483868414},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1592483868414},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1592483868414},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1592483868414},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1592483868414},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1592483868415},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1592483868415},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1592483868415},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1592483868444},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1592483868444},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1592483868445},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1592483868445},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ad680efdfb2f86546182bf3f59886efbcf3c1b2d","modified":1592483868445},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1592483868450},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1592483868450},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1592483868454},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1592483868454},{"_id":"source/_posts/深度学习/opencv笔记/oepncv01.md","hash":"6ec22639bf0e98f9e9763bd264dc15541009b1f9","modified":1592506585272},{"_id":"source/_posts/深度学习/opencv笔记/opencv02.md","hash":"eb97dc18f4270d19a942107c294482351b5b556c","modified":1592506585273},{"_id":"source/_posts/深度学习/opencv笔记/opencv03.md","hash":"46128d82b7d16c0ff9fc003748f3360afbdd9a8b","modified":1592506585274},{"_id":"source/_posts/深度学习/opencv笔记/opencv04.md","hash":"0b5744fbe4bb0fecd1107c48c5738d6f0ff735ed","modified":1592506585275},{"_id":"source/_posts/深度学习/opencv笔记/opencv05.md","hash":"7fb772cbfb093fdc702e33b7eb004cef46d44774","modified":1592506585276},{"_id":"source/_posts/深度学习/opencv笔记/opencv06.md","hash":"f782bcafed868c638d249244179bff41cb77a59f","modified":1592506585277},{"_id":"source/_posts/深度学习/opencv笔记/opencv07.md","hash":"0c9d947574ae38905a09d3c7dd000e7b3fc5d0fc","modified":1592506585278},{"_id":"source/_posts/深度学习/opencv笔记/opencv08.md","hash":"daddf1f461216eba2476db10e851da7ca630d2cb","modified":1592506585278},{"_id":"source/_posts/深度学习/opencv笔记/opencv09.md","hash":"21d9c7a85bff46ab04a1167277c05626bd3f4102","modified":1592506585279},{"_id":"source/_posts/深度学习/opencv笔记/opencv10.md","hash":"ecdf80f44a53ea3661759dbbdec616b3af2a666d","modified":1592506585280},{"_id":"source/_posts/深度学习/opencv笔记/opencv11.md","hash":"8a8bd7bd762a2045e7b9b030c04a3ffbbed698d6","modified":1592506585281},{"_id":"source/_posts/深度学习/opencv笔记/opencv12.md","hash":"a115e08f38aa40620dcc99fb41671fff4f7d1137","modified":1592506585282},{"_id":"source/_posts/深度学习/opencv笔记/opencv13.md","hash":"38a888c74f942312cc09b756f45dca75fcaf90c5","modified":1598782025186},{"_id":"source/_posts/深度学习/opencv笔记/opencv14.md","hash":"a7d57d5ec64f82d3e536c1c35227c47261f17c4e","modified":1592506585283},{"_id":"source/_posts/深度学习/opencv笔记/opencv15.md","hash":"b3b5fd695bd046076ee47f79afe0a0c1ac773188","modified":1592506585284},{"_id":"source/_posts/深度学习/opencv笔记/opencv16.md","hash":"eef27819358a1e7e73356683419ae355e6522c46","modified":1592506585285},{"_id":"source/_posts/深度学习/opencv笔记/opencv17.md","hash":"359dbaf042f16fc89ab3e7bfe9ed84f667a7fdc7","modified":1592506585286},{"_id":"source/_posts/深度学习/opencv笔记/opencv18.md","hash":"3fce1accf4294097212c4aff650b67bf8c6ee6da","modified":1592506585287},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1592483868421},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1592483868421},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1592483868421},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1592483868426},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1592483868429},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1592483868429},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5540c9259cb7895a5f10a289c7937e5470a7c134","modified":1592483868434},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1592483868434},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1592483868434},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1592483868436},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1592483868436},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1592483868436},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1592483868437},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1592483868438},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1592483868439},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1592483868439},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1592483868440},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1592483868440},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1592483868440},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1592483868440},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1592483868441},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1592483868441},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1592483868441},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1592483868442},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1592483868442},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1592483868442},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1592483868442},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1592483868443},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"dc9318992ce2eb086ebaa2fe56b325e56d24098b","modified":1592483868443},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1592483868442},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1592483868443},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1592483868444},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1592483868453},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1592483868452},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1592483868452},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1592483868453},{"_id":"source/images/bg2.jpg","hash":"770e5e2f383d418eb8f5ac74a7b20b6fd933b2ef","modified":1592476276353},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1592483868421},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1592483868422},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1592483868422},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1592483868422},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1592483868423},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1592483868423},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1592483868423},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1592483868424},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1592483868424},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1592483868424},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1592483868424},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1592483868424},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1592483868424},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1592483868425},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1592483868425},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1592483868425},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1592483868425},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"fcd64c23d17775b3635325f6758b648d932e79b5","modified":1592483868425},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1592483868427},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1592483868427},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1592483868426},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1592483868427},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1592483868428},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1592483868428},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1592483868428},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1592483868429},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1592483868426},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1592483868429},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1592483868429},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1592483868429},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1592483868427},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1592483868430},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1592483868430},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1592483868431},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1592483868431},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1592483868431},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1592483868431},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1592483868432},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1592483868432},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1592483868432},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1592483868432},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1592483868435},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1592483868435},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1592483868436},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1592483868436},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1592483868437},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1592483868437},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1592483868437},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1592483868438},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1592483868438},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1592483868438},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1592483868438},{"_id":"source/images/bg3.jpg","hash":"365f4292dde471cf4ccd68108fba61037a9c8bd4","modified":1592475942638},{"_id":"source/images/bg1.jpg","hash":"86cdc271978ba0e65cd979becba548a7aa682ea3","modified":1592476201069},{"_id":"source/images/bg1.png","hash":"21273d33ddae4e12de6ad03c69c153b63933339e","modified":1592545406066},{"_id":"public/search.xml","hash":"20568868aac6f2208a302e4ed51debc03e07f0f3","modified":1598798924128},{"_id":"public/categories/index.html","hash":"caa534e8137b57a070d298ba5da2b717268539f9","modified":1598798924128},{"_id":"public/tags/index.html","hash":"44f770f983fdc23803018fb1a64be6c7f02b1756","modified":1598798924128},{"_id":"public/categories/hexo博客相关/index.html","hash":"78d3943f988a345810297eef26e5b0351d23fc64","modified":1598798924128},{"_id":"public/categories/前端笔记/index.html","hash":"f26d04ae32b08739535a910805c0d0c2033087f8","modified":1598798924128},{"_id":"public/categories/算法笔记/index.html","hash":"9c3bd0c70a0286217d58b576003d9b4eaf6ec5ae","modified":1598798924128},{"_id":"public/categories/深度学习/index.html","hash":"4608e4de259366e596e962edaff89d9034f05d73","modified":1598798924128},{"_id":"public/archives/2020/08/index.html","hash":"785521b23f796af9def6b1d821ee834bc89090e8","modified":1598798924128},{"_id":"public/tags/JavaScript/index.html","hash":"4125d1b9d4f4e8b7f43f48d75032781eb88eb49d","modified":1598798924128},{"_id":"public/tags/ubuntu/index.html","hash":"9d378bfe1f8967d8cb61534096525f557700f8c9","modified":1598798924128},{"_id":"public/tags/html5/index.html","hash":"0d7a7a63ebfa486ab89b8a0e1addccce0e0f5e0b","modified":1598798924128},{"_id":"public/about/index.html","hash":"7a2ca8bbc87b2aee7b9b0a39de6cf2b365bb3700","modified":1598798924128},{"_id":"public/archives/index.html","hash":"6906791166da5b1e729aa1cb86fdf6b2ecfe4ac7","modified":1598798924128},{"_id":"public/2020/08/30/软件与工具使用/window命令行笔记/index.html","hash":"b638e7c0ee424c1e2d38d15f33e5aa75bb99415e","modified":1598798924128},{"_id":"public/2020/08/30/前端笔记/最佳实践/index.html","hash":"4cc5b5dd441ea530405b585b956f31267bc0acf8","modified":1598798924128},{"_id":"public/2020/08/30/hexo博客相关/readme/index.html","hash":"cac05fe250340933340579db0c8ba8c634cfd75c","modified":1598798924128},{"_id":"public/2020/06/19/算法笔记/康拓展开与康拓逆展开/index.html","hash":"82f8452205cb06ec727f211c46ca3c110db95aba","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv18/index.html","hash":"d8019eed668b807afe3bb0bad3b0d1ad064fb224","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv17/index.html","hash":"77d90f9d9dc4778f0e1e55d90811c0c3d3f9e3b5","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv16/index.html","hash":"a433e874a7014a490ceae7255b92ce1ebe846b1f","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv15/index.html","hash":"0e2deaf9de7ac02188b2b9f6404ab84b2bc2e0c7","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv14/index.html","hash":"5b2df51f6f7e2c67200b9f22eb0bd759f3e7c04c","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv13/index.html","hash":"35d4975318a2e96fcb7e94d8101bbe78ab826ab6","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv12/index.html","hash":"2877c7640c19318c363eeca167d1a40027b09b9d","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv11/index.html","hash":"6037ffb28feec3d7378410962c0d5f49ccb569f1","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv10/index.html","hash":"a342f3dfc901c444321ffa1d5d909761ac063a95","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv09/index.html","hash":"07f2543b61671fcd1c4add963a06a09d503b205e","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv08/index.html","hash":"ae91d8099b681ac97b1e8154a40bd1c5d78d3116","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv07/index.html","hash":"9954c0fba28717db7fc892a35a3a4decfab76843","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv06/index.html","hash":"de45c3e20bdc520064738302a2bd89a14c489a2a","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv05/index.html","hash":"87023d566691ab8be6a8ee90cf008cdb812093a9","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv04/index.html","hash":"84a26666a5bf1bc5c68d47a4438fb6b6ef51ff8f","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv03/index.html","hash":"264f7a8013573e28d7359e61f8c7552b0ecf8312","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/opencv02/index.html","hash":"fd5fbafb1974fdeef5d34f11fe3fa75e2768e5e5","modified":1598798924128},{"_id":"public/2020/06/19/深度学习/opencv笔记/oepncv01/index.html","hash":"64c2c8b96ecec4ebe79fd30c129c9799de98e586","modified":1598798924128},{"_id":"public/2020/06/19/hexo博客相关/5.hexo使用/index.html","hash":"e37255aa33cf0497e6f08699966e2836976076ff","modified":1598798924128},{"_id":"public/2020/06/19/算法笔记/leetcode做题总结/index.html","hash":"d134a34c0fc7c43c8f6a692c9bb41fd95aa37bbd","modified":1598798924128},{"_id":"public/2020/06/18/软件与工具使用/vscode笔记/index.html","hash":"627a5998fa725bac49738925d81d96108f73d1d4","modified":1598798924128},{"_id":"public/2020/06/18/软件与工具使用/markdown笔记/index.html","hash":"b27a8f2ee73cf85b18892f0ec02f4ffe57816c29","modified":1598798924128},{"_id":"public/2020/06/18/软件与工具使用/linux命令/index.html","hash":"1ad1cf0511e24e1c8a126c7902ff873037d1ae83","modified":1598798924128},{"_id":"public/2020/06/18/软件与工具使用/git常见问题/index.html","hash":"d041015270cd73f20b11a2a4ed444487fd9e4ded","modified":1598798924128},{"_id":"public/2020/06/18/hexo博客相关/hello-world/index.html","hash":"421af9a27ab4d9b42164cb4c1e560b9b63176993","modified":1598798924128},{"_id":"public/2020/06/18/深度学习/opencv/index.html","hash":"f354a9213e6c4d4a74af7ec952d9c670a5efb437","modified":1598798924128},{"_id":"public/categories/软件与工具使用/index.html","hash":"b51d0027bc65c5e2ec2fb0668a0f6516b9a204c9","modified":1598798924128},{"_id":"public/categories/opencv笔记/index.html","hash":"0e100ebfaead9b8f8299a051df9a59974660851f","modified":1598798924128},{"_id":"public/categories/opencv笔记/page/2/index.html","hash":"8ebf1402e7be2e0f8ea764e47db673fa0dabb7c0","modified":1598798924128},{"_id":"public/categories/opencv笔记/深度学习/index.html","hash":"8318a8f512a88c842c0f0bbece4bff662e1ec5f1","modified":1598798924128},{"_id":"public/categories/opencv笔记/深度学习/page/2/index.html","hash":"789eb88df9cb216e9587d9af7c3c421702b6357a","modified":1598798924128},{"_id":"public/archives/page/2/index.html","hash":"bd770ff0e6da8bc023040948a62a552818d84f32","modified":1598798924128},{"_id":"public/archives/page/3/index.html","hash":"01d48f71aa21f8559ecef5f60209ed632a8884b9","modified":1598798924128},{"_id":"public/archives/2020/index.html","hash":"e86e1aa87ebe351183cfa670b4a780163dd857c9","modified":1598798924128},{"_id":"public/archives/2020/page/2/index.html","hash":"d87a2b6042865443dc00c4ed8a4802aadc899313","modified":1598798924128},{"_id":"public/archives/2020/page/3/index.html","hash":"8669478f1ae63987da112e89bf03229952ee5dba","modified":1598798924128},{"_id":"public/archives/2020/06/index.html","hash":"107ee20bf49f062d12454c51da945ec75a3f0e4b","modified":1598798924128},{"_id":"public/archives/2020/06/page/2/index.html","hash":"e185bbaa579e4aeab30ab947f79bfd0055bd24bc","modified":1598798924128},{"_id":"public/archives/2020/06/page/3/index.html","hash":"6b81b38249e0423da0ad20c99d2cafa48eeaa79f","modified":1598798924128},{"_id":"public/index.html","hash":"c1cde2335b5c4881dee46547fb006435f14a9069","modified":1598798924128},{"_id":"public/page/2/index.html","hash":"f0d20864cdcd7961983e754a3f9b642adf3fb55e","modified":1598798924128},{"_id":"public/page/3/index.html","hash":"ad13c1732ea39ab5926ffc1f12368d94066a4a1d","modified":1598798924128},{"_id":"public/tags/opencv/index.html","hash":"7a3fff456a6345ade015c75ee6c5f7c2d242e36e","modified":1598798924128},{"_id":"public/images/01.jpg","hash":"11f979731f1cf3926d69c326d9207879140f1175","modified":1598798924128},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1598798924128},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1598798924128},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1598798924128},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1598798924128},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1598798924128},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1598798924128},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1598798924128},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1598798924128},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1598798924128},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1598798924128},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1598798924128},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1598798924128},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1598798924128},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1598798924128},{"_id":"public/images/avatar.jpg","hash":"3a1136455bec7eb00d3aca03938e13ae9d62a44e","modified":1598798924128},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1598798924128},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1598798924128},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1598798924128},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1598798924128},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1598798924128},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1598798924128},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1598798924128},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1598798924128},{"_id":"public/css/main.css","hash":"d8063c68dac6f952ce4ad70306a431c709952053","modified":1598798924128},{"_id":"public/images/pic001.png","hash":"e55de44e7a429e4814fb823e48144ae7914203ef","modified":1598798924128},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1598798924128},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1598798924128},{"_id":"public/js/utils.js","hash":"2c6e6b4d9a592fbb4bf04689524db2cdfcd94ca7","modified":1598798924128},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1598798924128},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1598798924128},{"_id":"public/images/bg2.jpg","hash":"770e5e2f383d418eb8f5ac74a7b20b6fd933b2ef","modified":1598798924128},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1598798924128},{"_id":"public/images/bg1.jpg","hash":"86cdc271978ba0e65cd979becba548a7aa682ea3","modified":1598798924128},{"_id":"public/images/bg3.jpg","hash":"365f4292dde471cf4ccd68108fba61037a9c8bd4","modified":1598798924128},{"_id":"public/images/bg1.png","hash":"21273d33ddae4e12de6ad03c69c153b63933339e","modified":1598798924128}],"Category":[{"name":"hexo博客相关","_id":"ckeh7llxx000zj8g59397hn8n"},{"name":"前端笔记","_id":"ckeh7lmef0018j8g50l89dkc4"},{"name":"算法笔记","_id":"ckeh7lmeg001dj8g56qni31wz"},{"name":"软件与工具使用","_id":"ckeh7lmeg001gj8g5fy9y236e"},{"name":"深度学习","_id":"ckeh7lmej0024j8g5bhh6ewv9"},{"name":"opencv笔记","_id":"ckeh7lmek0028j8g535bj6i9e"},{"name":"深度学习","parent":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmep002rj8g54en26ivc"}],"Data":[{"_id":"styles","data":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}],"Page":[{"title":"About Me","date":"2020-06-13T14:27:24.000Z","type":"about","_content":"\n# 联系方式\n\n- 手机： 18162323337\n- Email： 1002860620@qq.com\n- QQ: 1002860620\n- 期望职位： web前端工程师/大前端/算法工程师\n  \n# 个人信息\n\n<!-- - **王海荣**/男/1995\n- 本科/采矿工程/英语四级\n- 研究生/计算机技术 -->\n- 码云：https://gitee.com/heronwang\n- github：https://github.com/HeronWan\n- CSDN：https://blog.csdn.net/qq_38968556\n\n\n# 教育背景\n\n<!-- - **2014.09 -- 2018.06**   武汉工程大学/资源与土木工程学院 本科：采矿工程 -->\n- **2018.09 -- 2021.06**   武汉工程大学/计算机科学与工程学院 研究生：计算机技术\n\n# 项目经验\n\n- **2018.07 -- 2018.08**   上海 /上海同筑信息科技有限公司 实习生\n  - 技术栈：html5/css3/JavaScript/c#\n- **2019.03 -- 2019.12**  武汉/武汉致同事务所  软件开发\n  - 技术栈：java/mysql/mybatis/SpringMVC/git/jenkins/es6/js高级编程\n\n# 个人爱好\n\n二次元与冰红茶\n\n<!-- \n- 熟悉： 数据结构与算法，JavaScript高级变成，web开发流程，markdown编辑，git/gitee/github，mysql数据库编程，SSM构建项目与持续开发，git操作与使用，opencv计算机视觉库\n- 掌握： python/java/c++基础变成 -->\n<!-- \n# 个人评价\n\n喜欢挑战，不惧艰难，喜欢动手解决问题的成就感，也喜欢思考问题的本源，做出总结和自己的思考。 -->","source":"about/index.md","raw":"---\ntitle: About Me\ndate: 2020-06-13 22:27:24\ntype: about\n---\n\n# 联系方式\n\n- 手机： 18162323337\n- Email： 1002860620@qq.com\n- QQ: 1002860620\n- 期望职位： web前端工程师/大前端/算法工程师\n  \n# 个人信息\n\n<!-- - **王海荣**/男/1995\n- 本科/采矿工程/英语四级\n- 研究生/计算机技术 -->\n- 码云：https://gitee.com/heronwang\n- github：https://github.com/HeronWan\n- CSDN：https://blog.csdn.net/qq_38968556\n\n\n# 教育背景\n\n<!-- - **2014.09 -- 2018.06**   武汉工程大学/资源与土木工程学院 本科：采矿工程 -->\n- **2018.09 -- 2021.06**   武汉工程大学/计算机科学与工程学院 研究生：计算机技术\n\n# 项目经验\n\n- **2018.07 -- 2018.08**   上海 /上海同筑信息科技有限公司 实习生\n  - 技术栈：html5/css3/JavaScript/c#\n- **2019.03 -- 2019.12**  武汉/武汉致同事务所  软件开发\n  - 技术栈：java/mysql/mybatis/SpringMVC/git/jenkins/es6/js高级编程\n\n# 个人爱好\n\n二次元与冰红茶\n\n<!-- \n- 熟悉： 数据结构与算法，JavaScript高级变成，web开发流程，markdown编辑，git/gitee/github，mysql数据库编程，SSM构建项目与持续开发，git操作与使用，opencv计算机视觉库\n- 掌握： python/java/c++基础变成 -->\n<!-- \n# 个人评价\n\n喜欢挑战，不惧艰难，喜欢动手解决问题的成就感，也喜欢思考问题的本源，做出总结和自己的思考。 -->","updated":"2020-06-18T13:23:28.168Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckeh7llp50000j8g52cmx29t3","content":"<h1 id=\"联系方式\"><a class=\"markdownIt-Anchor\" href=\"#联系方式\"></a> 联系方式</h1>\n<ul>\n<li>手机： 18162323337</li>\n<li>Email： <a href=\"mailto:1002860620@qq.com\">1002860620@qq.com</a></li>\n<li>QQ: 1002860620</li>\n<li>期望职位： web前端工程师/大前端/算法工程师</li>\n</ul>\n<h1 id=\"个人信息\"><a class=\"markdownIt-Anchor\" href=\"#个人信息\"></a> 个人信息</h1>\n<!-- - **王海荣**/男/1995\n- 本科/采矿工程/英语四级\n- 研究生/计算机技术 -->\n<ul>\n<li>码云：<a href=\"https://gitee.com/heronwang\" target=\"_blank\" rel=\"noopener\">https://gitee.com/heronwang</a></li>\n<li>github：<a href=\"https://github.com/HeronWan\" target=\"_blank\" rel=\"noopener\">https://github.com/HeronWan</a></li>\n<li>CSDN：<a href=\"https://blog.csdn.net/qq_38968556\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_38968556</a></li>\n</ul>\n<h1 id=\"教育背景\"><a class=\"markdownIt-Anchor\" href=\"#教育背景\"></a> 教育背景</h1>\n<!-- - **2014.09 -- 2018.06**   武汉工程大学/资源与土木工程学院 本科：采矿工程 -->\n<ul>\n<li><strong>2018.09 – 2021.06</strong>   武汉工程大学/计算机科学与工程学院 研究生：计算机技术</li>\n</ul>\n<h1 id=\"项目经验\"><a class=\"markdownIt-Anchor\" href=\"#项目经验\"></a> 项目经验</h1>\n<ul>\n<li><strong>2018.07 – 2018.08</strong>   上海 /上海同筑信息科技有限公司 实习生\n<ul>\n<li>技术栈：html5/css3/JavaScript/c#</li>\n</ul>\n</li>\n<li><strong>2019.03 – 2019.12</strong>  武汉/武汉致同事务所  软件开发\n<ul>\n<li>技术栈：java/mysql/mybatis/SpringMVC/git/jenkins/es6/js高级编程</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"个人爱好\"><a class=\"markdownIt-Anchor\" href=\"#个人爱好\"></a> 个人爱好</h1>\n<p>二次元与冰红茶</p>\n<!-- \n- 熟悉： 数据结构与算法，JavaScript高级变成，web开发流程，markdown编辑，git/gitee/github，mysql数据库编程，SSM构建项目与持续开发，git操作与使用，opencv计算机视觉库\n- 掌握： python/java/c++基础变成 -->\n<!-- \n# 个人评价\n\n喜欢挑战，不惧艰难，喜欢动手解决问题的成就感，也喜欢思考问题的本源，做出总结和自己的思考。 -->","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"length":388,"excerpt":"","more":"<h1 id=\"联系方式\"><a class=\"markdownIt-Anchor\" href=\"#联系方式\"></a> 联系方式</h1>\n<ul>\n<li>手机： 18162323337</li>\n<li>Email： <a href=\"mailto:1002860620@qq.com\">1002860620@qq.com</a></li>\n<li>QQ: 1002860620</li>\n<li>期望职位： web前端工程师/大前端/算法工程师</li>\n</ul>\n<h1 id=\"个人信息\"><a class=\"markdownIt-Anchor\" href=\"#个人信息\"></a> 个人信息</h1>\n<!-- - **王海荣**/男/1995\n- 本科/采矿工程/英语四级\n- 研究生/计算机技术 -->\n<ul>\n<li>码云：<a href=\"https://gitee.com/heronwang\" target=\"_blank\" rel=\"noopener\">https://gitee.com/heronwang</a></li>\n<li>github：<a href=\"https://github.com/HeronWan\" target=\"_blank\" rel=\"noopener\">https://github.com/HeronWan</a></li>\n<li>CSDN：<a href=\"https://blog.csdn.net/qq_38968556\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_38968556</a></li>\n</ul>\n<h1 id=\"教育背景\"><a class=\"markdownIt-Anchor\" href=\"#教育背景\"></a> 教育背景</h1>\n<!-- - **2014.09 -- 2018.06**   武汉工程大学/资源与土木工程学院 本科：采矿工程 -->\n<ul>\n<li><strong>2018.09 – 2021.06</strong>   武汉工程大学/计算机科学与工程学院 研究生：计算机技术</li>\n</ul>\n<h1 id=\"项目经验\"><a class=\"markdownIt-Anchor\" href=\"#项目经验\"></a> 项目经验</h1>\n<ul>\n<li><strong>2018.07 – 2018.08</strong>   上海 /上海同筑信息科技有限公司 实习生\n<ul>\n<li>技术栈：html5/css3/JavaScript/c#</li>\n</ul>\n</li>\n<li><strong>2019.03 – 2019.12</strong>  武汉/武汉致同事务所  软件开发\n<ul>\n<li>技术栈：java/mysql/mybatis/SpringMVC/git/jenkins/es6/js高级编程</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"个人爱好\"><a class=\"markdownIt-Anchor\" href=\"#个人爱好\"></a> 个人爱好</h1>\n<p>二次元与冰红茶</p>\n<!-- \n- 熟悉： 数据结构与算法，JavaScript高级变成，web开发流程，markdown编辑，git/gitee/github，mysql数据库编程，SSM构建项目与持续开发，git操作与使用，opencv计算机视觉库\n- 掌握： python/java/c++基础变成 -->\n<!-- \n# 个人评价\n\n喜欢挑战，不惧艰难，喜欢动手解决问题的成就感，也喜欢思考问题的本源，做出总结和自己的思考。 -->"},{"title":"archives","date":"2020-06-13T14:27:26.000Z","type":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2020-06-13 22:27:26\ntype: archives\n---\n","updated":"2020-06-18T12:37:48.339Z","path":"archives/index.html","comments":1,"layout":"page","_id":"ckeh7llp90001j8g56jmye7c1","content":"","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"length":0,"excerpt":"","more":""},{"title":"categories","date":"2020-06-13T14:22:07.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-06-13 22:22:07\ntype: categories\n---\n","updated":"2020-06-18T12:37:48.339Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckeh7llpa0002j8g52n25bzk6","content":"","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"length":0,"excerpt":"","more":""},{"title":"tags","date":"2020-06-13T14:27:23.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-06-13 22:27:23\ntype: tags\n---\n","updated":"2020-06-18T12:37:48.342Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckeh7llqb0003j8g5fo1m0khb","content":"","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!--more-->\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hexo博客相关/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!--more-->\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hexo博客相关/hello-world","published":1,"date":"2020-06-18T12:37:48.336Z","updated":"2020-06-18T12:37:48.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llqc0004j8g5542nfc9a","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"151FCAP","length":357,"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>","more":"<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"_content":"# hexo搭建个人博客与优化\n\n## 搭建流程\n\n1. 需要本地预先安装好安装好git和node环境\n2. 在node全局环境中安装hexo-cli手脚架`npm install -g hexo-cli`\n3. 在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：\n    - `hexo init`      # 初始化 \n    - `npm install`    # 安装组件\n4. 启动本地进行预览\n    - `hexo g` 生成编译文件\n    - `hexo s` 启动服务器，访问 http://localhost:4000，出现 Hexo 默认页面，本地博客安装成功！\n\n5. 在码云上创建gitee pages\n6. 配置文件\n7. 部署 命令`hexo deploy`\n   `hexo clean && hexo g && hexo d  && hexo g` \n  \n## 配置文件说明\n\n\n","source":"_posts/hexo博客相关/5.hexo使用.md","raw":"# hexo搭建个人博客与优化\n\n## 搭建流程\n\n1. 需要本地预先安装好安装好git和node环境\n2. 在node全局环境中安装hexo-cli手脚架`npm install -g hexo-cli`\n3. 在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：\n    - `hexo init`      # 初始化 \n    - `npm install`    # 安装组件\n4. 启动本地进行预览\n    - `hexo g` 生成编译文件\n    - `hexo s` 启动服务器，访问 http://localhost:4000，出现 Hexo 默认页面，本地博客安装成功！\n\n5. 在码云上创建gitee pages\n6. 配置文件\n7. 部署 命令`hexo deploy`\n   `hexo clean && hexo g && hexo d  && hexo g` \n  \n## 配置文件说明\n\n\n","slug":"hexo博客相关/5.hexo使用","published":1,"date":"2020-06-18T18:56:25.224Z","updated":"2020-08-30T11:20:58.204Z","title":"hexo博客相关/5.hexo使用","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llqf0005j8g51u4khc73","content":"<h1 id=\"hexo搭建个人博客与优化\"><a class=\"markdownIt-Anchor\" href=\"#hexo搭建个人博客与优化\"></a> hexo搭建个人博客与优化</h1>\n<h2 id=\"搭建流程\"><a class=\"markdownIt-Anchor\" href=\"#搭建流程\"></a> 搭建流程</h2>\n<ol>\n<li>\n<p>需要本地预先安装好安装好git和node环境</p>\n</li>\n<li>\n<p>在node全局环境中安装hexo-cli手脚架<code>npm install -g hexo-cli</code></p>\n</li>\n<li>\n<p>在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：</p>\n<ul>\n<li><code>hexo init</code>      # 初始化</li>\n<li><code>npm install</code>    # 安装组件</li>\n</ul>\n</li>\n<li>\n<p>启动本地进行预览</p>\n<ul>\n<li><code>hexo g</code> 生成编译文件</li>\n<li><code>hexo s</code> 启动服务器，访问 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>，出现 Hexo 默认页面，本地博客安装成功！</li>\n</ul>\n</li>\n<li>\n<p>在码云上创建gitee pages</p>\n</li>\n<li>\n<p>配置文件</p>\n</li>\n<li>\n<p>部署 命令<code>hexo deploy</code><br />\n<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo g</code></p>\n</li>\n</ol>\n<h2 id=\"配置文件说明\"><a class=\"markdownIt-Anchor\" href=\"#配置文件说明\"></a> 配置文件说明</h2>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"RATH8R","length":318,"excerpt":"","more":"<h1 id=\"hexo搭建个人博客与优化\"><a class=\"markdownIt-Anchor\" href=\"#hexo搭建个人博客与优化\"></a> hexo搭建个人博客与优化</h1>\n<h2 id=\"搭建流程\"><a class=\"markdownIt-Anchor\" href=\"#搭建流程\"></a> 搭建流程</h2>\n<ol>\n<li>\n<p>需要本地预先安装好安装好git和node环境</p>\n</li>\n<li>\n<p>在node全局环境中安装hexo-cli手脚架<code>npm install -g hexo-cli</code></p>\n</li>\n<li>\n<p>在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：</p>\n<ul>\n<li><code>hexo init</code>      # 初始化</li>\n<li><code>npm install</code>    # 安装组件</li>\n</ul>\n</li>\n<li>\n<p>启动本地进行预览</p>\n<ul>\n<li><code>hexo g</code> 生成编译文件</li>\n<li><code>hexo s</code> 启动服务器，访问 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>，出现 Hexo 默认页面，本地博客安装成功！</li>\n</ul>\n</li>\n<li>\n<p>在码云上创建gitee pages</p>\n</li>\n<li>\n<p>配置文件</p>\n</li>\n<li>\n<p>部署 命令<code>hexo deploy</code><br />\n<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo g</code></p>\n</li>\n</ol>\n<h2 id=\"配置文件说明\"><a class=\"markdownIt-Anchor\" href=\"#配置文件说明\"></a> 配置文件说明</h2>\n"},{"_content":"\\---\n\n\n\n\\---\n\n\\# [MyNotes](https://heronwan.github.io/)\n\n\n\n\\## 相关命令\n\n\n\n\\- `hexo c` //清除public中生成的编译文件\n\n\\- `hexo g` //生成public编译文件\n\n\\- `hexo s` //启动本地服务，浏览器中可查看项目\n\n\\- `hexo d` //项目部署远程，将生成的public中的文件推送到远程master分支中\n\n\\- `hexo c` && hexo g &&hexo d && hexo s\n\n\\- `git pull` //同步远程的修改\n\n\\- `git add .` //将本地修改添加到暂存区\n\n\\- `git commit -m \"提交信息\"` // 将修改提交到本地仓库\n\n\\- `git push origin hexo` //推送到远程的hexo分支中\n\n \n\n\\1. 一键部署：\n\n hexo c && hexo g && hexo g && hexo s\n\n\n\n\\2. 博客迁移\n\n\\> git clone https://github.com/HeronWan/HeronWan.github.io.git hexo # 克隆远程仓库\n\n\\> npm install -g hexo-cli #安装全局hexo环境，可提供hexo c/g/s/d命令使用\n\n\\> npm install # 本地安装依赖（会将package.json中的依赖全部安装）\n\n\n\n\\3. 同步博客源码：\n\n git add . && git commit -m \"some changes\" && git push origin hexo\n\n\n\n\\## 博客源码维护\n\n\n\n该仓库中有两个分支：\n\n\\1. master负责保存编译好了的部署文件，在本地执行“hexo d”就会自动更新部署\n\n\\2. hexo保存的是该仓库的源码，包括配置文件和md文件以及其他页面的源码。在本地修改可通过git命令提交维护。\n\n\n\n\\## todos\n\n\n\n\\1. leetcode刷题\n\n\\2. opencv实战\n\n\\3. 动手学深度学习pytorch实战\n\n\n\n\n\n\\## 搭建流程\n\n\n\n\\1. 需要本地预先安装好安装好git和node环境\n\n\\2. 在node全局环境中安装hexo-cli手脚架`npm install -g hexo-cli`\n\n\\3. 在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：\n\n  \\- `hexo init`   # 初始化 \n\n  \\- `npm install`  # 安装组件\n\n\\4. 启动本地进行预览\n\n  \\- `hexo g` 生成编译文件\n\n  \\- `hexo s` 启动服务器，访问 http://localhost:4000，出现 Hexo 默认页面，本地博客安装成功！\n\n\n\n\\5. 在码云上创建gitee pages\n\n\\6. 配置文件\n\n\\7. 部署 命令`hexo d`\n\n  `hexo clean && hexo g && hexo d && hexo g` \n\n ","source":"_posts/hexo博客相关/readme.md","raw":"\\---\n\n\n\n\\---\n\n\\# [MyNotes](https://heronwan.github.io/)\n\n\n\n\\## 相关命令\n\n\n\n\\- `hexo c` //清除public中生成的编译文件\n\n\\- `hexo g` //生成public编译文件\n\n\\- `hexo s` //启动本地服务，浏览器中可查看项目\n\n\\- `hexo d` //项目部署远程，将生成的public中的文件推送到远程master分支中\n\n\\- `hexo c` && hexo g &&hexo d && hexo s\n\n\\- `git pull` //同步远程的修改\n\n\\- `git add .` //将本地修改添加到暂存区\n\n\\- `git commit -m \"提交信息\"` // 将修改提交到本地仓库\n\n\\- `git push origin hexo` //推送到远程的hexo分支中\n\n \n\n\\1. 一键部署：\n\n hexo c && hexo g && hexo g && hexo s\n\n\n\n\\2. 博客迁移\n\n\\> git clone https://github.com/HeronWan/HeronWan.github.io.git hexo # 克隆远程仓库\n\n\\> npm install -g hexo-cli #安装全局hexo环境，可提供hexo c/g/s/d命令使用\n\n\\> npm install # 本地安装依赖（会将package.json中的依赖全部安装）\n\n\n\n\\3. 同步博客源码：\n\n git add . && git commit -m \"some changes\" && git push origin hexo\n\n\n\n\\## 博客源码维护\n\n\n\n该仓库中有两个分支：\n\n\\1. master负责保存编译好了的部署文件，在本地执行“hexo d”就会自动更新部署\n\n\\2. hexo保存的是该仓库的源码，包括配置文件和md文件以及其他页面的源码。在本地修改可通过git命令提交维护。\n\n\n\n\\## todos\n\n\n\n\\1. leetcode刷题\n\n\\2. opencv实战\n\n\\3. 动手学深度学习pytorch实战\n\n\n\n\n\n\\## 搭建流程\n\n\n\n\\1. 需要本地预先安装好安装好git和node环境\n\n\\2. 在node全局环境中安装hexo-cli手脚架`npm install -g hexo-cli`\n\n\\3. 在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：\n\n  \\- `hexo init`   # 初始化 \n\n  \\- `npm install`  # 安装组件\n\n\\4. 启动本地进行预览\n\n  \\- `hexo g` 生成编译文件\n\n  \\- `hexo s` 启动服务器，访问 http://localhost:4000，出现 Hexo 默认页面，本地博客安装成功！\n\n\n\n\\5. 在码云上创建gitee pages\n\n\\6. 配置文件\n\n\\7. 部署 命令`hexo d`\n\n  `hexo clean && hexo g && hexo d && hexo g` \n\n ","slug":"hexo博客相关/readme","published":1,"date":"2020-08-30T10:00:50.289Z","updated":"2020-08-30T10:01:49.198Z","title":"hexo博客相关/readme","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llqg0006j8g51sz74tjo","content":"<p>—</p>\n<p>—</p>\n<p># <a href=\"https://heronwan.github.io/\">MyNotes</a></p>\n<p>## 相关命令</p>\n<p>- <code>hexo c</code> //清除public中生成的编译文件</p>\n<p>- <code>hexo g</code> //生成public编译文件</p>\n<p>- <code>hexo s</code> //启动本地服务，浏览器中可查看项目</p>\n<p>- <code>hexo d</code> //项目部署远程，将生成的public中的文件推送到远程master分支中</p>\n<p>- <code>hexo c</code> &amp;&amp; hexo g &amp;&amp;hexo d &amp;&amp; hexo s</p>\n<p>- <code>git pull</code> //同步远程的修改</p>\n<p>- <code>git add .</code> //将本地修改添加到暂存区</p>\n<p>- <code>git commit -m &quot;提交信息&quot;</code> // 将修改提交到本地仓库</p>\n<p>- <code>git push origin hexo</code> //推送到远程的hexo分支中</p>\n<p>\\1. 一键部署：</p>\n<p>hexo c &amp;&amp; hexo g &amp;&amp; hexo g &amp;&amp; hexo s</p>\n<p>\\2. 博客迁移</p>\n<p>&gt; git clone <a href=\"https://github.com/HeronWan/HeronWan.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/HeronWan/HeronWan.github.io.git</a> hexo # 克隆远程仓库</p>\n<p>&gt; npm install -g hexo-cli #安装全局hexo环境，可提供hexo c/g/s/d命令使用</p>\n<p>&gt; npm install # 本地安装依赖（会将package.json中的依赖全部安装）</p>\n<p>\\3. 同步博客源码：</p>\n<p>git add . &amp;&amp; git commit -m “some changes” &amp;&amp; git push origin hexo</p>\n<p>## 博客源码维护</p>\n<p>该仓库中有两个分支：</p>\n<p>\\1. master负责保存编译好了的部署文件，在本地执行“hexo d”就会自动更新部署</p>\n<p>\\2. hexo保存的是该仓库的源码，包括配置文件和md文件以及其他页面的源码。在本地修改可通过git命令提交维护。</p>\n<p>## todos</p>\n<p>\\1. leetcode刷题</p>\n<p>\\2. opencv实战</p>\n<p>\\3. 动手学深度学习pytorch实战</p>\n<p>## 搭建流程</p>\n<p>\\1. 需要本地预先安装好安装好git和node环境</p>\n<p>\\2. 在node全局环境中安装hexo-cli手脚架<code>npm install -g hexo-cli</code></p>\n<p>\\3. 在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：</p>\n<p>- <code>hexo init</code>   # 初始化</p>\n<p>- <code>npm install</code>  # 安装组件</p>\n<p>\\4. 启动本地进行预览</p>\n<p>- <code>hexo g</code> 生成编译文件</p>\n<p>- <code>hexo s</code> 启动服务器，访问 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>，出现 Hexo 默认页面，本地博客安装成功！</p>\n<p>\\5. 在码云上创建gitee pages</p>\n<p>\\6. 配置文件</p>\n<p>\\7. 部署 命令<code>hexo d</code></p>\n<p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo g</code></p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"TXST62","length":1093,"excerpt":"","more":"<p>—</p>\n<p>—</p>\n<p># <a href=\"https://heronwan.github.io/\">MyNotes</a></p>\n<p>## 相关命令</p>\n<p>- <code>hexo c</code> //清除public中生成的编译文件</p>\n<p>- <code>hexo g</code> //生成public编译文件</p>\n<p>- <code>hexo s</code> //启动本地服务，浏览器中可查看项目</p>\n<p>- <code>hexo d</code> //项目部署远程，将生成的public中的文件推送到远程master分支中</p>\n<p>- <code>hexo c</code> &amp;&amp; hexo g &amp;&amp;hexo d &amp;&amp; hexo s</p>\n<p>- <code>git pull</code> //同步远程的修改</p>\n<p>- <code>git add .</code> //将本地修改添加到暂存区</p>\n<p>- <code>git commit -m &quot;提交信息&quot;</code> // 将修改提交到本地仓库</p>\n<p>- <code>git push origin hexo</code> //推送到远程的hexo分支中</p>\n<p>\\1. 一键部署：</p>\n<p>hexo c &amp;&amp; hexo g &amp;&amp; hexo g &amp;&amp; hexo s</p>\n<p>\\2. 博客迁移</p>\n<p>&gt; git clone <a href=\"https://github.com/HeronWan/HeronWan.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/HeronWan/HeronWan.github.io.git</a> hexo # 克隆远程仓库</p>\n<p>&gt; npm install -g hexo-cli #安装全局hexo环境，可提供hexo c/g/s/d命令使用</p>\n<p>&gt; npm install # 本地安装依赖（会将package.json中的依赖全部安装）</p>\n<p>\\3. 同步博客源码：</p>\n<p>git add . &amp;&amp; git commit -m “some changes” &amp;&amp; git push origin hexo</p>\n<p>## 博客源码维护</p>\n<p>该仓库中有两个分支：</p>\n<p>\\1. master负责保存编译好了的部署文件，在本地执行“hexo d”就会自动更新部署</p>\n<p>\\2. hexo保存的是该仓库的源码，包括配置文件和md文件以及其他页面的源码。在本地修改可通过git命令提交维护。</p>\n<p>## todos</p>\n<p>\\1. leetcode刷题</p>\n<p>\\2. opencv实战</p>\n<p>\\3. 动手学深度学习pytorch实战</p>\n<p>## 搭建流程</p>\n<p>\\1. 需要本地预先安装好安装好git和node环境</p>\n<p>\\2. 在node全局环境中安装hexo-cli手脚架<code>npm install -g hexo-cli</code></p>\n<p>\\3. 在本地新建一个空白文件夹，注意文件夹一定要是空白的，在该文件夹路径打开终端，运行：</p>\n<p>- <code>hexo init</code>   # 初始化</p>\n<p>- <code>npm install</code>  # 安装组件</p>\n<p>\\4. 启动本地进行预览</p>\n<p>- <code>hexo g</code> 生成编译文件</p>\n<p>- <code>hexo s</code> 启动服务器，访问 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>，出现 Hexo 默认页面，本地博客安装成功！</p>\n<p>\\5. 在码云上创建gitee pages</p>\n<p>\\6. 配置文件</p>\n<p>\\7. 部署 命令<code>hexo d</code></p>\n<p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo g</code></p>\n"},{"_content":"# 最佳实践\n\n​\t\t\t\t\t\t--《JavaScript高级程序设计》笔记\n\n## 一，可维护性\n\n\n\n1. 什么是可维护性？\n   - 可理解性 --- 其他人可以接手代码并理解它的意图。\n   - 直观性 --- 代码中的东西一看就能明白，不管其操作过程多么复杂\n   - 可适应性 --- 代码以一种数据上的变化不要求完全重写的方法撰写\n   - 可扩展性--- 在代码架构上已考虑在未来允许对核心功能进行扩展\n   - 可调式性--- 的出错失时，代码可以给予你足够的信息来尽可能直接地确定问题所在。\n\n2. 代码约定：\n   - 可读性\n     - 缩进\n     - 注释\n   - 变量和函数命名\n     - 变量名应该为名词，如car\n     - 函数名为动词开始 ，如 getName(), setName()\n     - 变量和函数都应该使用合乎逻辑的名字\n   - 变量类型透明 （推荐第一种 和 第二种）\n     - 初始化 \n     - 匈牙利标记法---在变量名前面添加前缀：\n       - o代表对象\n       - s字符串\n       - i整数\n       - f浮点数\n       - b布尔值\n     - 指定类型的注释\n3. 松散耦合 -- 某部分过分依赖另一部分，代码就会 耦合过紧，难以维护\n   - 解耦js/html\n   - 解耦js/css\n   - 解耦应用逻辑/事件处理程序\n     - 问题：某个事件处理程序除了包含应用逻辑，还进行事件处理，会让调试变得困难\n     - 解决：分离应用逻辑和事件处理程序，两者分别处理各自的东西。一个事件处理程序应该从事件对象中提取相关信息，并将这些信息传递到处理应用逻辑的某个方法中\n     - 好处：容易更改触发特定过程的事件。容易进行调试代码，创建单元测试等。\n4. 编程实践\n   - 尊重对象所有权\n   - 减少全局变量\n   - 进行充分的类型检测\n   - 使用一个常量命名空间，便于统一管理。\n\n## 二，性能优化\n\n1. 注意作用域\n   1. 避免全局查找，使用局部变量指向已经查找好的全局变量\n   2. 避免使用with\n2. 选择正确的方法\n   1. 避免不必要的属性查询，可以使用数组查询\n      - 属性查询的复杂度为 O(n),数组查询的复杂度O(1)\n   2. 优化循环\n      1. 减值迭代\n      2. 简化终止条件\n      3. 简化循环体\n      4. 使用后测试循环 -- do{} while 语句 \n   3. 避免双重解释，-- 不要使用类似eval() 方式解析\n   4. 性能的其他注意事项\n      1. 原生方法较快\n      2. switch语句较快\n      3. 位运算较快\n3. 最小化语句数 -- 尽可能的合并语句\n   1. 多个变量声明\n   2. 插入迭代值\n   3. 使用数组和对象字面量\n4. 优化DOM交互\n   1. 最小化现场更新\n   2. 使用innerHTML\n   3. 使用事件代理\n      1. 任何可以冒泡的事件都不仅仅可以在时间目标上进行处理，目标的任何祖先节点上也能处理。\n   4. 注意HTMLCollection ,对其查询开销很昂贵，减少查询次数\n\n## 三，部署\n\n\n\n","source":"_posts/前端笔记/最佳实践.md","raw":"# 最佳实践\n\n​\t\t\t\t\t\t--《JavaScript高级程序设计》笔记\n\n## 一，可维护性\n\n\n\n1. 什么是可维护性？\n   - 可理解性 --- 其他人可以接手代码并理解它的意图。\n   - 直观性 --- 代码中的东西一看就能明白，不管其操作过程多么复杂\n   - 可适应性 --- 代码以一种数据上的变化不要求完全重写的方法撰写\n   - 可扩展性--- 在代码架构上已考虑在未来允许对核心功能进行扩展\n   - 可调式性--- 的出错失时，代码可以给予你足够的信息来尽可能直接地确定问题所在。\n\n2. 代码约定：\n   - 可读性\n     - 缩进\n     - 注释\n   - 变量和函数命名\n     - 变量名应该为名词，如car\n     - 函数名为动词开始 ，如 getName(), setName()\n     - 变量和函数都应该使用合乎逻辑的名字\n   - 变量类型透明 （推荐第一种 和 第二种）\n     - 初始化 \n     - 匈牙利标记法---在变量名前面添加前缀：\n       - o代表对象\n       - s字符串\n       - i整数\n       - f浮点数\n       - b布尔值\n     - 指定类型的注释\n3. 松散耦合 -- 某部分过分依赖另一部分，代码就会 耦合过紧，难以维护\n   - 解耦js/html\n   - 解耦js/css\n   - 解耦应用逻辑/事件处理程序\n     - 问题：某个事件处理程序除了包含应用逻辑，还进行事件处理，会让调试变得困难\n     - 解决：分离应用逻辑和事件处理程序，两者分别处理各自的东西。一个事件处理程序应该从事件对象中提取相关信息，并将这些信息传递到处理应用逻辑的某个方法中\n     - 好处：容易更改触发特定过程的事件。容易进行调试代码，创建单元测试等。\n4. 编程实践\n   - 尊重对象所有权\n   - 减少全局变量\n   - 进行充分的类型检测\n   - 使用一个常量命名空间，便于统一管理。\n\n## 二，性能优化\n\n1. 注意作用域\n   1. 避免全局查找，使用局部变量指向已经查找好的全局变量\n   2. 避免使用with\n2. 选择正确的方法\n   1. 避免不必要的属性查询，可以使用数组查询\n      - 属性查询的复杂度为 O(n),数组查询的复杂度O(1)\n   2. 优化循环\n      1. 减值迭代\n      2. 简化终止条件\n      3. 简化循环体\n      4. 使用后测试循环 -- do{} while 语句 \n   3. 避免双重解释，-- 不要使用类似eval() 方式解析\n   4. 性能的其他注意事项\n      1. 原生方法较快\n      2. switch语句较快\n      3. 位运算较快\n3. 最小化语句数 -- 尽可能的合并语句\n   1. 多个变量声明\n   2. 插入迭代值\n   3. 使用数组和对象字面量\n4. 优化DOM交互\n   1. 最小化现场更新\n   2. 使用innerHTML\n   3. 使用事件代理\n      1. 任何可以冒泡的事件都不仅仅可以在时间目标上进行处理，目标的任何祖先节点上也能处理。\n   4. 注意HTMLCollection ,对其查询开销很昂贵，减少查询次数\n\n## 三，部署\n\n\n\n","slug":"前端笔记/最佳实践","published":1,"date":"2020-08-30T10:06:53.154Z","updated":"2020-08-30T13:59:48.746Z","title":"前端笔记/最佳实践","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llqh0007j8g5enz70ytz","content":"<h1 id=\"最佳实践\"><a class=\"markdownIt-Anchor\" href=\"#最佳实践\"></a> 最佳实践</h1>\n<p>​\t\t\t\t\t\t--《JavaScript高级程序设计》笔记</p>\n<h2 id=\"一可维护性\"><a class=\"markdownIt-Anchor\" href=\"#一可维护性\"></a> 一，可维护性</h2>\n<ol>\n<li>\n<p>什么是可维护性？</p>\n<ul>\n<li>可理解性 — 其他人可以接手代码并理解它的意图。</li>\n<li>直观性 — 代码中的东西一看就能明白，不管其操作过程多么复杂</li>\n<li>可适应性 — 代码以一种数据上的变化不要求完全重写的方法撰写</li>\n<li>可扩展性— 在代码架构上已考虑在未来允许对核心功能进行扩展</li>\n<li>可调式性— 的出错失时，代码可以给予你足够的信息来尽可能直接地确定问题所在。</li>\n</ul>\n</li>\n<li>\n<p>代码约定：</p>\n<ul>\n<li>可读性\n<ul>\n<li>缩进</li>\n<li>注释</li>\n</ul>\n</li>\n<li>变量和函数命名\n<ul>\n<li>变量名应该为名词，如car</li>\n<li>函数名为动词开始 ，如 getName(), setName()</li>\n<li>变量和函数都应该使用合乎逻辑的名字</li>\n</ul>\n</li>\n<li>变量类型透明 （推荐第一种 和 第二种）\n<ul>\n<li>初始化</li>\n<li>匈牙利标记法—在变量名前面添加前缀：\n<ul>\n<li>o代表对象</li>\n<li>s字符串</li>\n<li>i整数</li>\n<li>f浮点数</li>\n<li>b布尔值</li>\n</ul>\n</li>\n<li>指定类型的注释</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>松散耦合 – 某部分过分依赖另一部分，代码就会 耦合过紧，难以维护</p>\n<ul>\n<li>解耦js/html</li>\n<li>解耦js/css</li>\n<li>解耦应用逻辑/事件处理程序\n<ul>\n<li>问题：某个事件处理程序除了包含应用逻辑，还进行事件处理，会让调试变得困难</li>\n<li>解决：分离应用逻辑和事件处理程序，两者分别处理各自的东西。一个事件处理程序应该从事件对象中提取相关信息，并将这些信息传递到处理应用逻辑的某个方法中</li>\n<li>好处：容易更改触发特定过程的事件。容易进行调试代码，创建单元测试等。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>编程实践</p>\n<ul>\n<li>尊重对象所有权</li>\n<li>减少全局变量</li>\n<li>进行充分的类型检测</li>\n<li>使用一个常量命名空间，便于统一管理。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"二性能优化\"><a class=\"markdownIt-Anchor\" href=\"#二性能优化\"></a> 二，性能优化</h2>\n<ol>\n<li>注意作用域\n<ol>\n<li>避免全局查找，使用局部变量指向已经查找好的全局变量</li>\n<li>避免使用with</li>\n</ol>\n</li>\n<li>选择正确的方法\n<ol>\n<li>避免不必要的属性查询，可以使用数组查询\n<ul>\n<li>属性查询的复杂度为 O(n),数组查询的复杂度O(1)</li>\n</ul>\n</li>\n<li>优化循环\n<ol>\n<li>减值迭代</li>\n<li>简化终止条件</li>\n<li>简化循环体</li>\n<li>使用后测试循环 – do{} while 语句</li>\n</ol>\n</li>\n<li>避免双重解释，-- 不要使用类似eval() 方式解析</li>\n<li>性能的其他注意事项\n<ol>\n<li>原生方法较快</li>\n<li>switch语句较快</li>\n<li>位运算较快</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>最小化语句数 – 尽可能的合并语句\n<ol>\n<li>多个变量声明</li>\n<li>插入迭代值</li>\n<li>使用数组和对象字面量</li>\n</ol>\n</li>\n<li>优化DOM交互\n<ol>\n<li>最小化现场更新</li>\n<li>使用innerHTML</li>\n<li>使用事件代理\n<ol>\n<li>任何可以冒泡的事件都不仅仅可以在时间目标上进行处理，目标的任何祖先节点上也能处理。</li>\n</ol>\n</li>\n<li>注意HTMLCollection ,对其查询开销很昂贵，减少查询次数</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"三部署\"><a class=\"markdownIt-Anchor\" href=\"#三部署\"></a> 三，部署</h2>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"305ZXA2","length":908,"excerpt":"","more":"<h1 id=\"最佳实践\"><a class=\"markdownIt-Anchor\" href=\"#最佳实践\"></a> 最佳实践</h1>\n<p>​\t\t\t\t\t\t--《JavaScript高级程序设计》笔记</p>\n<h2 id=\"一可维护性\"><a class=\"markdownIt-Anchor\" href=\"#一可维护性\"></a> 一，可维护性</h2>\n<ol>\n<li>\n<p>什么是可维护性？</p>\n<ul>\n<li>可理解性 — 其他人可以接手代码并理解它的意图。</li>\n<li>直观性 — 代码中的东西一看就能明白，不管其操作过程多么复杂</li>\n<li>可适应性 — 代码以一种数据上的变化不要求完全重写的方法撰写</li>\n<li>可扩展性— 在代码架构上已考虑在未来允许对核心功能进行扩展</li>\n<li>可调式性— 的出错失时，代码可以给予你足够的信息来尽可能直接地确定问题所在。</li>\n</ul>\n</li>\n<li>\n<p>代码约定：</p>\n<ul>\n<li>可读性\n<ul>\n<li>缩进</li>\n<li>注释</li>\n</ul>\n</li>\n<li>变量和函数命名\n<ul>\n<li>变量名应该为名词，如car</li>\n<li>函数名为动词开始 ，如 getName(), setName()</li>\n<li>变量和函数都应该使用合乎逻辑的名字</li>\n</ul>\n</li>\n<li>变量类型透明 （推荐第一种 和 第二种）\n<ul>\n<li>初始化</li>\n<li>匈牙利标记法—在变量名前面添加前缀：\n<ul>\n<li>o代表对象</li>\n<li>s字符串</li>\n<li>i整数</li>\n<li>f浮点数</li>\n<li>b布尔值</li>\n</ul>\n</li>\n<li>指定类型的注释</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>松散耦合 – 某部分过分依赖另一部分，代码就会 耦合过紧，难以维护</p>\n<ul>\n<li>解耦js/html</li>\n<li>解耦js/css</li>\n<li>解耦应用逻辑/事件处理程序\n<ul>\n<li>问题：某个事件处理程序除了包含应用逻辑，还进行事件处理，会让调试变得困难</li>\n<li>解决：分离应用逻辑和事件处理程序，两者分别处理各自的东西。一个事件处理程序应该从事件对象中提取相关信息，并将这些信息传递到处理应用逻辑的某个方法中</li>\n<li>好处：容易更改触发特定过程的事件。容易进行调试代码，创建单元测试等。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>编程实践</p>\n<ul>\n<li>尊重对象所有权</li>\n<li>减少全局变量</li>\n<li>进行充分的类型检测</li>\n<li>使用一个常量命名空间，便于统一管理。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"二性能优化\"><a class=\"markdownIt-Anchor\" href=\"#二性能优化\"></a> 二，性能优化</h2>\n<ol>\n<li>注意作用域\n<ol>\n<li>避免全局查找，使用局部变量指向已经查找好的全局变量</li>\n<li>避免使用with</li>\n</ol>\n</li>\n<li>选择正确的方法\n<ol>\n<li>避免不必要的属性查询，可以使用数组查询\n<ul>\n<li>属性查询的复杂度为 O(n),数组查询的复杂度O(1)</li>\n</ul>\n</li>\n<li>优化循环\n<ol>\n<li>减值迭代</li>\n<li>简化终止条件</li>\n<li>简化循环体</li>\n<li>使用后测试循环 – do{} while 语句</li>\n</ol>\n</li>\n<li>避免双重解释，-- 不要使用类似eval() 方式解析</li>\n<li>性能的其他注意事项\n<ol>\n<li>原生方法较快</li>\n<li>switch语句较快</li>\n<li>位运算较快</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>最小化语句数 – 尽可能的合并语句\n<ol>\n<li>多个变量声明</li>\n<li>插入迭代值</li>\n<li>使用数组和对象字面量</li>\n</ol>\n</li>\n<li>优化DOM交互\n<ol>\n<li>最小化现场更新</li>\n<li>使用innerHTML</li>\n<li>使用事件代理\n<ol>\n<li>任何可以冒泡的事件都不仅仅可以在时间目标上进行处理，目标的任何祖先节点上也能处理。</li>\n</ol>\n</li>\n<li>注意HTMLCollection ,对其查询开销很昂贵，减少查询次数</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"三部署\"><a class=\"markdownIt-Anchor\" href=\"#三部署\"></a> 三，部署</h2>\n"},{"_content":"# 总结经验\n\n- 先测试用例，后编码\n- 先整体思路，后局部。\n- 用注释标记思路和需要注意的地方。\n\n\n\n## 掌握的知识点\n\n1. 广搜\n\n2. 深搜\n\n3. 链表\n\n4. 栈\n\n5. 数组\n\n6. 队列\n\n7. 简单的动态规划\n\n   \n\n## 需要加强的知识点\n\n1. 回溯法\n2. 全排列\n3. 全排列的次序\n4. 快速排序和多路快排\n5. 并查集\n6. 背包问题\n\n","source":"_posts/算法笔记/leetcode做题总结.md","raw":"# 总结经验\n\n- 先测试用例，后编码\n- 先整体思路，后局部。\n- 用注释标记思路和需要注意的地方。\n\n\n\n## 掌握的知识点\n\n1. 广搜\n\n2. 深搜\n\n3. 链表\n\n4. 栈\n\n5. 数组\n\n6. 队列\n\n7. 简单的动态规划\n\n   \n\n## 需要加强的知识点\n\n1. 回溯法\n2. 全排列\n3. 全排列的次序\n4. 快速排序和多路快排\n5. 并查集\n6. 背包问题\n\n","slug":"算法笔记/leetcode做题总结","published":1,"date":"2020-06-18T18:56:25.172Z","updated":"2020-06-20T13:14:39.552Z","title":"算法笔记/leetcode做题总结","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llqh0008j8g504as9vsm","content":"<h1 id=\"总结经验\"><a class=\"markdownIt-Anchor\" href=\"#总结经验\"></a> 总结经验</h1>\n<ul>\n<li>先测试用例，后编码</li>\n<li>先整体思路，后局部。</li>\n<li>用注释标记思路和需要注意的地方。</li>\n</ul>\n<h2 id=\"掌握的知识点\"><a class=\"markdownIt-Anchor\" href=\"#掌握的知识点\"></a> 掌握的知识点</h2>\n<ol>\n<li>\n<p>广搜</p>\n</li>\n<li>\n<p>深搜</p>\n</li>\n<li>\n<p>链表</p>\n</li>\n<li>\n<p>栈</p>\n</li>\n<li>\n<p>数组</p>\n</li>\n<li>\n<p>队列</p>\n</li>\n<li>\n<p>简单的动态规划</p>\n</li>\n</ol>\n<h2 id=\"需要加强的知识点\"><a class=\"markdownIt-Anchor\" href=\"#需要加强的知识点\"></a> 需要加强的知识点</h2>\n<ol>\n<li>回溯法</li>\n<li>全排列</li>\n<li>全排列的次序</li>\n<li>快速排序和多路快排</li>\n<li>并查集</li>\n<li>背包问题</li>\n</ol>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"2WB93FE","length":99,"excerpt":"","more":"<h1 id=\"总结经验\"><a class=\"markdownIt-Anchor\" href=\"#总结经验\"></a> 总结经验</h1>\n<ul>\n<li>先测试用例，后编码</li>\n<li>先整体思路，后局部。</li>\n<li>用注释标记思路和需要注意的地方。</li>\n</ul>\n<h2 id=\"掌握的知识点\"><a class=\"markdownIt-Anchor\" href=\"#掌握的知识点\"></a> 掌握的知识点</h2>\n<ol>\n<li>\n<p>广搜</p>\n</li>\n<li>\n<p>深搜</p>\n</li>\n<li>\n<p>链表</p>\n</li>\n<li>\n<p>栈</p>\n</li>\n<li>\n<p>数组</p>\n</li>\n<li>\n<p>队列</p>\n</li>\n<li>\n<p>简单的动态规划</p>\n</li>\n</ol>\n<h2 id=\"需要加强的知识点\"><a class=\"markdownIt-Anchor\" href=\"#需要加强的知识点\"></a> 需要加强的知识点</h2>\n<ol>\n<li>回溯法</li>\n<li>全排列</li>\n<li>全排列的次序</li>\n<li>快速排序和多路快排</li>\n<li>并查集</li>\n<li>背包问题</li>\n</ol>\n"},{"toc":{"depth_from":2,"depth_to":6,"ordered":false},"_content":"# git常见问题汇 \n\n## 1. git怎么快捷提交到远程\n\n有时候只是修改了一个简单的地方，但是提交却要好几行才能完成\n\n```bash\ngit add .\ngit commit -am \"change some text\"\ngit push\n```\n\n能不能把这几句合并成一句，以后再也不用桥一些繁琐的命令，以提高工作效率\n当然可以，如下：\n<!--more-->\n> git add . &&  git commit -am \"change some text\" && git push\n\n一句搞定！\n但是问题来了，这句命令也太长了吧，做人能不能简单一点，不要搞得那么复杂吗！或者能直接设置快捷键呢？\n\n好的，满足你，跟着我来一起做，步骤如下：\n\n1. 用vscode打开当前仓库，配置task.json:\n\n    点击vscode界面左下角，打开 command palette.. ---> 输入task 进行搜索  --->  选择task：configure task -> 选择task 模板 ，新建task.json文件 ---> 在task.json文件中修改成以下内容：\n\n    ```md\n    {\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\n    // for the documentation about the tasks.json format\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"push code\",\n            \"type\": \"shell\",\n            \"command\": \"git add . &  git commit -am 'change something' & git push\"\n        }\n    ]\n    }\n    ```\n\n2. 验证 task是否能运行：\n\n    点击vscode界面左下角，打开 command palette.. ---> 输入run task 回车 ---> 点击 push code看task是否能成功执行\n\n3. 配置快捷键：\n\n    file ---> preference ---> keyboard shortcut ---> 打开了快捷键配置文件，点击右上角的 {}，进入文本编辑模式，添加如下内容：\n\n    ```markdown\n    [\n        {\n            // 为git提交代码到远程仓库设置快捷键 \n            \"key\": \"ctrl+p ctrl+p\",\n            \"command\": \"workbench.action.tasks.runTask\",\n            \"args\": \"push code\",\n            \"when\": \"isLinux\"    \n        }\n    ]\n    ```\n\n4. 使用 快捷键\"ctrl+p ctrl+p\" 验证是否能成功push代码到远程仓库。\n\n原本按照这个想法，我想到了两个思路：\n\n1. 通过vscode的设置task和快捷键完成操作，步骤如上。\n\n2. 将三条命令alias一条简短的快捷命令,在终端上执行。\n   \n    2.1 但是这个并没有想象中那么简单，至少在gitvonfig中是难以实现的。因为 alias 中的快捷命令是需要运行时需要在前面添加 git 才能运行的，比如：<code>alias p=push </code>，那么在命令行运行 <code>git p</code> 就相当于 <code>git push </code>。这就限制了无法用 将这三条命令 缩写成一条命令来运行。\n\n    2.2 但是世上无难事，只要有心人，曲线也是能救国的！不要局限在git的配置中怎么去实现，思维要开阔些！我们可以在当前文件夹下面新建一个bash脚本，把上面三条命令直接写进去，直接运行脚本不就可以了嘛!\n\n    当前文件夹下面创建push.sh,写入文本：\n        \n    ```md\n    git add .\n    echo 成功添加暂存区\n    git commit -am \"change some text\"\n    echo 成功提交到本地仓库\n    git push\n    echo 成功push到远程仓库\n    ```\n\n    在当前文件夹下面的终端运行：\n    > chmod a+x push.sh \n    > \n    > ./push.sh\n\n## 2. git提交码云上没有显示贡献度\n\n  结果竟然是因为我设置的全局邮箱有问题:\n    \n  ```\n  user.email=\"1002860620@qq.com\"\n  user.name=heronwang\n  ```\n  \n  上面所示，邮箱多了一双引号，去掉引号就可以啦\n  `git config --global user.email 1002860620@qq.com`\n  \n  然后再输入`git config -l` 查看配置：\n\n  ```\n  user.email=1002860620@qq.com\n  user.name=heronwang\n  ```\n\n  引号去掉了，然后`git push`提交，在后台查看终于显示我的贡献度了，\n\n  好气哦，ubuntu用了这么长时间，在码云上提交了那么多贡献全是空的！！\n\n\n## 3.怎么给仓库打tag，记录历史中重要的节点\n\n首先`git tag -l` 查看仓库中所有tag \n\nGit 支持两种标签：轻量标签（lightweight）与附注标签（annotated）\n\n- 轻量标签：很像一个不会改变的分支——它只是某个特定提交的引用。\n  \n  `git tag <tagname>` 创建轻量标签\n  `git show <tagname>` 显示出提交信息\n\n- 附注标签：是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。\n  `git tag -a <tagname> -m \"标签信息\"` 创建附注标签\n\n- 后期打标签：你也可以对过去的提交打标签\n  `git log --pretty=oneline` 显示历史提交信息\n  `git tag -a <tagname> <某个提交的哈希码>` 为历史提交打标签\n\n- 共享标签：将标签上传到远程共享\n  `git push origin --tags` 上传所有tags\n  `git push origin <tagname>` 上传某个tag\n\n- 删除标签tag\n  `git tag -d <tagname>` 删除本地tag\n  `git push origin --delete <tagname>`   删除远程tag\n\n- 检出标签：如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用，在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支。\n   `git checkout <tagname>` 查看标签具体内容\n\n   `git checkout -b <branchName> <tagname>` 为某个标签创建分支\n\n","source":"_posts/软件与工具使用/git常见问题.md","raw":"---\ntoc:\n  depth_from: 2\n  depth_to: 6\n  ordered: false\n---\n# git常见问题汇 \n\n## 1. git怎么快捷提交到远程\n\n有时候只是修改了一个简单的地方，但是提交却要好几行才能完成\n\n```bash\ngit add .\ngit commit -am \"change some text\"\ngit push\n```\n\n能不能把这几句合并成一句，以后再也不用桥一些繁琐的命令，以提高工作效率\n当然可以，如下：\n<!--more-->\n> git add . &&  git commit -am \"change some text\" && git push\n\n一句搞定！\n但是问题来了，这句命令也太长了吧，做人能不能简单一点，不要搞得那么复杂吗！或者能直接设置快捷键呢？\n\n好的，满足你，跟着我来一起做，步骤如下：\n\n1. 用vscode打开当前仓库，配置task.json:\n\n    点击vscode界面左下角，打开 command palette.. ---> 输入task 进行搜索  --->  选择task：configure task -> 选择task 模板 ，新建task.json文件 ---> 在task.json文件中修改成以下内容：\n\n    ```md\n    {\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\n    // for the documentation about the tasks.json format\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"push code\",\n            \"type\": \"shell\",\n            \"command\": \"git add . &  git commit -am 'change something' & git push\"\n        }\n    ]\n    }\n    ```\n\n2. 验证 task是否能运行：\n\n    点击vscode界面左下角，打开 command palette.. ---> 输入run task 回车 ---> 点击 push code看task是否能成功执行\n\n3. 配置快捷键：\n\n    file ---> preference ---> keyboard shortcut ---> 打开了快捷键配置文件，点击右上角的 {}，进入文本编辑模式，添加如下内容：\n\n    ```markdown\n    [\n        {\n            // 为git提交代码到远程仓库设置快捷键 \n            \"key\": \"ctrl+p ctrl+p\",\n            \"command\": \"workbench.action.tasks.runTask\",\n            \"args\": \"push code\",\n            \"when\": \"isLinux\"    \n        }\n    ]\n    ```\n\n4. 使用 快捷键\"ctrl+p ctrl+p\" 验证是否能成功push代码到远程仓库。\n\n原本按照这个想法，我想到了两个思路：\n\n1. 通过vscode的设置task和快捷键完成操作，步骤如上。\n\n2. 将三条命令alias一条简短的快捷命令,在终端上执行。\n   \n    2.1 但是这个并没有想象中那么简单，至少在gitvonfig中是难以实现的。因为 alias 中的快捷命令是需要运行时需要在前面添加 git 才能运行的，比如：<code>alias p=push </code>，那么在命令行运行 <code>git p</code> 就相当于 <code>git push </code>。这就限制了无法用 将这三条命令 缩写成一条命令来运行。\n\n    2.2 但是世上无难事，只要有心人，曲线也是能救国的！不要局限在git的配置中怎么去实现，思维要开阔些！我们可以在当前文件夹下面新建一个bash脚本，把上面三条命令直接写进去，直接运行脚本不就可以了嘛!\n\n    当前文件夹下面创建push.sh,写入文本：\n        \n    ```md\n    git add .\n    echo 成功添加暂存区\n    git commit -am \"change some text\"\n    echo 成功提交到本地仓库\n    git push\n    echo 成功push到远程仓库\n    ```\n\n    在当前文件夹下面的终端运行：\n    > chmod a+x push.sh \n    > \n    > ./push.sh\n\n## 2. git提交码云上没有显示贡献度\n\n  结果竟然是因为我设置的全局邮箱有问题:\n    \n  ```\n  user.email=\"1002860620@qq.com\"\n  user.name=heronwang\n  ```\n  \n  上面所示，邮箱多了一双引号，去掉引号就可以啦\n  `git config --global user.email 1002860620@qq.com`\n  \n  然后再输入`git config -l` 查看配置：\n\n  ```\n  user.email=1002860620@qq.com\n  user.name=heronwang\n  ```\n\n  引号去掉了，然后`git push`提交，在后台查看终于显示我的贡献度了，\n\n  好气哦，ubuntu用了这么长时间，在码云上提交了那么多贡献全是空的！！\n\n\n## 3.怎么给仓库打tag，记录历史中重要的节点\n\n首先`git tag -l` 查看仓库中所有tag \n\nGit 支持两种标签：轻量标签（lightweight）与附注标签（annotated）\n\n- 轻量标签：很像一个不会改变的分支——它只是某个特定提交的引用。\n  \n  `git tag <tagname>` 创建轻量标签\n  `git show <tagname>` 显示出提交信息\n\n- 附注标签：是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。\n  `git tag -a <tagname> -m \"标签信息\"` 创建附注标签\n\n- 后期打标签：你也可以对过去的提交打标签\n  `git log --pretty=oneline` 显示历史提交信息\n  `git tag -a <tagname> <某个提交的哈希码>` 为历史提交打标签\n\n- 共享标签：将标签上传到远程共享\n  `git push origin --tags` 上传所有tags\n  `git push origin <tagname>` 上传某个tag\n\n- 删除标签tag\n  `git tag -d <tagname>` 删除本地tag\n  `git push origin --delete <tagname>`   删除远程tag\n\n- 检出标签：如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用，在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支。\n   `git checkout <tagname>` 查看标签具体内容\n\n   `git checkout -b <branchName> <tagname>` 为某个标签创建分支\n\n","slug":"软件与工具使用/git常见问题","published":1,"date":"2020-06-18T12:37:48.336Z","updated":"2020-06-18T12:37:48.336Z","title":"软件与工具使用/git常见问题","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llqi0009j8g5hw7ybd3z","content":"<h1 id=\"git常见问题汇\"><a class=\"markdownIt-Anchor\" href=\"#git常见问题汇\"></a> git常见问题汇</h1>\n<h2 id=\"1-git怎么快捷提交到远程\"><a class=\"markdownIt-Anchor\" href=\"#1-git怎么快捷提交到远程\"></a> 1. git怎么快捷提交到远程</h2>\n<p>有时候只是修改了一个简单的地方，但是提交却要好几行才能完成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -am <span class=\"string\">\"change some text\"</span></span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n<p>能不能把这几句合并成一句，以后再也不用桥一些繁琐的命令，以提高工作效率<br />\n当然可以，如下：</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>git add . &amp;&amp;  git commit -am “change some text” &amp;&amp; git push</p>\n</blockquote>\n<p>一句搞定！<br />\n但是问题来了，这句命令也太长了吧，做人能不能简单一点，不要搞得那么复杂吗！或者能直接设置快捷键呢？</p>\n<p>好的，满足你，跟着我来一起做，步骤如下：</p>\n<ol>\n<li>\n<p>用vscode打开当前仓库，配置task.json:</p>\n<p>点击vscode界面左下角，打开 command palette… —&gt; 输入task 进行搜索  —&gt;  选择task：configure task -&gt; 选择task 模板 ，新建task.json文件 —&gt; 在task.json文件中修改成以下内容：</p>\n <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">// See https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class=\"line\">// for the documentation about the tasks.json format</span><br><span class=\"line\">\"version\": \"2.0.0\",</span><br><span class=\"line\">\"tasks\": [</span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">        \"label\": \"push code\",</span></span><br><span class=\"line\"><span class=\"code\">        \"type\": \"shell\",</span></span><br><span class=\"line\"><span class=\"code\">        \"command\": \"git add . &amp;  git commit -am 'change something' &amp; git push\"</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\">]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>验证 task是否能运行：</p>\n<p>点击vscode界面左下角，打开 command palette… —&gt; 输入run task 回车 —&gt; 点击 push code看task是否能成功执行</p>\n</li>\n<li>\n<p>配置快捷键：</p>\n<p>file —&gt; preference —&gt; keyboard shortcut —&gt; 打开了快捷键配置文件，点击右上角的 {}，进入文本编辑模式，添加如下内容：</p>\n <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">        // 为git提交代码到远程仓库设置快捷键 </span></span><br><span class=\"line\"><span class=\"code\">        \"key\": \"ctrl+p ctrl+p\",</span></span><br><span class=\"line\"><span class=\"code\">        \"command\": \"workbench.action.tasks.runTask\",</span></span><br><span class=\"line\"><span class=\"code\">        \"args\": \"push code\",</span></span><br><span class=\"line\"><span class=\"code\">        \"when\": \"isLinux\"    </span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用 快捷键&quot;ctrl+p ctrl+p&quot; 验证是否能成功push代码到远程仓库。</p>\n</li>\n</ol>\n<p>原本按照这个想法，我想到了两个思路：</p>\n<ol>\n<li>\n<p>通过vscode的设置task和快捷键完成操作，步骤如上。</p>\n</li>\n<li>\n<p>将三条命令alias一条简短的快捷命令,在终端上执行。</p>\n<p>2.1 但是这个并没有想象中那么简单，至少在gitvonfig中是难以实现的。因为 alias 中的快捷命令是需要运行时需要在前面添加 git 才能运行的，比如：<code>alias p=push </code>，那么在命令行运行 <code>git p</code> 就相当于 <code>git push </code>。这就限制了无法用 将这三条命令 缩写成一条命令来运行。</p>\n<p>2.2 但是世上无难事，只要有心人，曲线也是能救国的！不要局限在git的配置中怎么去实现，思维要开阔些！我们可以在当前文件夹下面新建一个bash脚本，把上面三条命令直接写进去，直接运行脚本不就可以了嘛!</p>\n<p><a href=\"http://xn--push-494fr2cb5kmlat54c6rn21ar85cw26m.sh\" target=\"_blank\" rel=\"noopener\">当前文件夹下面创建push.sh</a>,写入文本：</p>\n <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">echo 成功添加暂存区</span><br><span class=\"line\">git commit -am \"change some text\"</span><br><span class=\"line\">echo 成功提交到本地仓库</span><br><span class=\"line\">git push</span><br><span class=\"line\">echo 成功push到远程仓库</span><br></pre></td></tr></table></figure>\n<p>在当前文件夹下面的终端运行：</p>\n<blockquote>\n<p>chmod a+x <a href=\"http://push.sh\" target=\"_blank\" rel=\"noopener\">push.sh</a></p>\n<p>./push.sh</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"2-git提交码云上没有显示贡献度\"><a class=\"markdownIt-Anchor\" href=\"#2-git提交码云上没有显示贡献度\"></a> 2. git提交码云上没有显示贡献度</h2>\n<p>结果竟然是因为我设置的全局邮箱有问题:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.email&#x3D;&quot;1002860620@qq.com&quot;</span><br><span class=\"line\">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>\n<p>上面所示，邮箱多了一双引号，去掉引号就可以啦<br />\n<code>git config --global user.email 1002860620@qq.com</code></p>\n<p>然后再输入<code>git config -l</code> 查看配置：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.email&#x3D;1002860620@qq.com</span><br><span class=\"line\">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>\n<p>引号去掉了，然后<code>git push</code>提交，在后台查看终于显示我的贡献度了，</p>\n<p>好气哦，ubuntu用了这么长时间，在码云上提交了那么多贡献全是空的！！</p>\n<h2 id=\"3怎么给仓库打tag记录历史中重要的节点\"><a class=\"markdownIt-Anchor\" href=\"#3怎么给仓库打tag记录历史中重要的节点\"></a> 3.怎么给仓库打tag，记录历史中重要的节点</h2>\n<p>首先<code>git tag -l</code> 查看仓库中所有tag</p>\n<p>Git 支持两种标签：轻量标签（lightweight）与附注标签（annotated）</p>\n<ul>\n<li>\n<p>轻量标签：很像一个不会改变的分支——它只是某个特定提交的引用。</p>\n<p><code>git tag &lt;tagname&gt;</code> 创建轻量标签<br />\n<code>git show &lt;tagname&gt;</code> 显示出提交信息</p>\n</li>\n<li>\n<p>附注标签：是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。<br />\n<code>git tag -a &lt;tagname&gt; -m &quot;标签信息&quot;</code> 创建附注标签</p>\n</li>\n<li>\n<p>后期打标签：你也可以对过去的提交打标签<br />\n<code>git log --pretty=oneline</code> 显示历史提交信息<br />\n<code>git tag -a &lt;tagname&gt; &lt;某个提交的哈希码&gt;</code> 为历史提交打标签</p>\n</li>\n<li>\n<p>共享标签：将标签上传到远程共享<br />\n<code>git push origin --tags</code> 上传所有tags<br />\n<code>git push origin &lt;tagname&gt;</code> 上传某个tag</p>\n</li>\n<li>\n<p>删除标签tag<br />\n<code>git tag -d &lt;tagname&gt;</code> 删除本地tag<br />\n<code>git push origin --delete &lt;tagname&gt;</code>   删除远程tag</p>\n</li>\n<li>\n<p>检出标签：如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用，在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支。<br />\n<code>git checkout &lt;tagname&gt;</code> 查看标签具体内容</p>\n<p><code>git checkout -b &lt;branchName&gt; &lt;tagname&gt;</code> 为某个标签创建分支</p>\n</li>\n</ul>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"16MN7J4","length":2701,"excerpt":"<h1 id=\"git常见问题汇\"><a class=\"markdownIt-Anchor\" href=\"#git常见问题汇\"></a> git常见问题汇</h1>\n<h2 id=\"1-git怎么快捷提交到远程\"><a class=\"markdownIt-Anchor\" href=\"#1-git怎么快捷提交到远程\"></a> 1. git怎么快捷提交到远程</h2>\n<p>有时候只是修改了一个简单的地方，但是提交却要好几行才能完成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -am <span class=\"string\">\"change some text\"</span></span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n<p>能不能把这几句合并成一句，以后再也不用桥一些繁琐的命令，以提高工作效率<br />\n当然可以，如下：</p>","more":"<blockquote>\n<p>git add . &amp;&amp;  git commit -am “change some text” &amp;&amp; git push</p>\n</blockquote>\n<p>一句搞定！<br />\n但是问题来了，这句命令也太长了吧，做人能不能简单一点，不要搞得那么复杂吗！或者能直接设置快捷键呢？</p>\n<p>好的，满足你，跟着我来一起做，步骤如下：</p>\n<ol>\n<li>\n<p>用vscode打开当前仓库，配置task.json:</p>\n<p>点击vscode界面左下角，打开 command palette… —&gt; 输入task 进行搜索  —&gt;  选择task：configure task -&gt; 选择task 模板 ，新建task.json文件 —&gt; 在task.json文件中修改成以下内容：</p>\n <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">// See https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class=\"line\">// for the documentation about the tasks.json format</span><br><span class=\"line\">\"version\": \"2.0.0\",</span><br><span class=\"line\">\"tasks\": [</span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">        \"label\": \"push code\",</span></span><br><span class=\"line\"><span class=\"code\">        \"type\": \"shell\",</span></span><br><span class=\"line\"><span class=\"code\">        \"command\": \"git add . &amp;  git commit -am 'change something' &amp; git push\"</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\">]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>验证 task是否能运行：</p>\n<p>点击vscode界面左下角，打开 command palette… —&gt; 输入run task 回车 —&gt; 点击 push code看task是否能成功执行</p>\n</li>\n<li>\n<p>配置快捷键：</p>\n<p>file —&gt; preference —&gt; keyboard shortcut —&gt; 打开了快捷键配置文件，点击右上角的 {}，进入文本编辑模式，添加如下内容：</p>\n <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">        // 为git提交代码到远程仓库设置快捷键 </span></span><br><span class=\"line\"><span class=\"code\">        \"key\": \"ctrl+p ctrl+p\",</span></span><br><span class=\"line\"><span class=\"code\">        \"command\": \"workbench.action.tasks.runTask\",</span></span><br><span class=\"line\"><span class=\"code\">        \"args\": \"push code\",</span></span><br><span class=\"line\"><span class=\"code\">        \"when\": \"isLinux\"    </span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用 快捷键&quot;ctrl+p ctrl+p&quot; 验证是否能成功push代码到远程仓库。</p>\n</li>\n</ol>\n<p>原本按照这个想法，我想到了两个思路：</p>\n<ol>\n<li>\n<p>通过vscode的设置task和快捷键完成操作，步骤如上。</p>\n</li>\n<li>\n<p>将三条命令alias一条简短的快捷命令,在终端上执行。</p>\n<p>2.1 但是这个并没有想象中那么简单，至少在gitvonfig中是难以实现的。因为 alias 中的快捷命令是需要运行时需要在前面添加 git 才能运行的，比如：<code>alias p=push </code>，那么在命令行运行 <code>git p</code> 就相当于 <code>git push </code>。这就限制了无法用 将这三条命令 缩写成一条命令来运行。</p>\n<p>2.2 但是世上无难事，只要有心人，曲线也是能救国的！不要局限在git的配置中怎么去实现，思维要开阔些！我们可以在当前文件夹下面新建一个bash脚本，把上面三条命令直接写进去，直接运行脚本不就可以了嘛!</p>\n<p><a href=\"http://xn--push-494fr2cb5kmlat54c6rn21ar85cw26m.sh\" target=\"_blank\" rel=\"noopener\">当前文件夹下面创建push.sh</a>,写入文本：</p>\n <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">echo 成功添加暂存区</span><br><span class=\"line\">git commit -am \"change some text\"</span><br><span class=\"line\">echo 成功提交到本地仓库</span><br><span class=\"line\">git push</span><br><span class=\"line\">echo 成功push到远程仓库</span><br></pre></td></tr></table></figure>\n<p>在当前文件夹下面的终端运行：</p>\n<blockquote>\n<p>chmod a+x <a href=\"http://push.sh\" target=\"_blank\" rel=\"noopener\">push.sh</a></p>\n<p>./push.sh</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"2-git提交码云上没有显示贡献度\"><a class=\"markdownIt-Anchor\" href=\"#2-git提交码云上没有显示贡献度\"></a> 2. git提交码云上没有显示贡献度</h2>\n<p>结果竟然是因为我设置的全局邮箱有问题:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.email&#x3D;&quot;1002860620@qq.com&quot;</span><br><span class=\"line\">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>\n<p>上面所示，邮箱多了一双引号，去掉引号就可以啦<br />\n<code>git config --global user.email 1002860620@qq.com</code></p>\n<p>然后再输入<code>git config -l</code> 查看配置：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.email&#x3D;1002860620@qq.com</span><br><span class=\"line\">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>\n<p>引号去掉了，然后<code>git push</code>提交，在后台查看终于显示我的贡献度了，</p>\n<p>好气哦，ubuntu用了这么长时间，在码云上提交了那么多贡献全是空的！！</p>\n<h2 id=\"3怎么给仓库打tag记录历史中重要的节点\"><a class=\"markdownIt-Anchor\" href=\"#3怎么给仓库打tag记录历史中重要的节点\"></a> 3.怎么给仓库打tag，记录历史中重要的节点</h2>\n<p>首先<code>git tag -l</code> 查看仓库中所有tag</p>\n<p>Git 支持两种标签：轻量标签（lightweight）与附注标签（annotated）</p>\n<ul>\n<li>\n<p>轻量标签：很像一个不会改变的分支——它只是某个特定提交的引用。</p>\n<p><code>git tag &lt;tagname&gt;</code> 创建轻量标签<br />\n<code>git show &lt;tagname&gt;</code> 显示出提交信息</p>\n</li>\n<li>\n<p>附注标签：是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。<br />\n<code>git tag -a &lt;tagname&gt; -m &quot;标签信息&quot;</code> 创建附注标签</p>\n</li>\n<li>\n<p>后期打标签：你也可以对过去的提交打标签<br />\n<code>git log --pretty=oneline</code> 显示历史提交信息<br />\n<code>git tag -a &lt;tagname&gt; &lt;某个提交的哈希码&gt;</code> 为历史提交打标签</p>\n</li>\n<li>\n<p>共享标签：将标签上传到远程共享<br />\n<code>git push origin --tags</code> 上传所有tags<br />\n<code>git push origin &lt;tagname&gt;</code> 上传某个tag</p>\n</li>\n<li>\n<p>删除标签tag<br />\n<code>git tag -d &lt;tagname&gt;</code> 删除本地tag<br />\n<code>git push origin --delete &lt;tagname&gt;</code>   删除远程tag</p>\n</li>\n<li>\n<p>检出标签：如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用，在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支。<br />\n<code>git checkout &lt;tagname&gt;</code> 查看标签具体内容</p>\n<p><code>git checkout -b &lt;branchName&gt; &lt;tagname&gt;</code> 为某个标签创建分支</p>\n</li>\n</ul>"},{"_content":"# 康托展开和逆康托展开\n\n题目详见：[leetcode060. 第k个排列](https://leetcode-cn.com/problems/permutation-sequence/)\n\n该题就是求n个数全排列中的第k的排序，查看评论区才知道有一个叫做康拓展开的概念，我从来都没有接触过，所以现在做下笔记，学习康拓排序，来解决这个leetcode题。\n\n## 康拓排序\n\n$$\nrank=a_n\\times(n−1)!+a_n−1\\times(n−2)!+⋯+a_1\\times0!\n$$\n\n\n\n其中, a[i]为整数，并且0 <= a[i] <= i, 0 <= i < n,  `rank`   表示当前的序列在全排列中排第几个，这就是康托展开。\n\n康托展开 就是已知序列，求出它的排列名次\n\n## 逆康拓排序\n\n逆康拓排序就是已知排列的名次，求出所对应的序列。\n\n\n\n## 应用\n\n因为序列和名次是一一对应的，所以可以用来压缩 字符串\n\n\n\n\n\n ","source":"_posts/算法笔记/康拓展开与康拓逆展开.md","raw":"# 康托展开和逆康托展开\n\n题目详见：[leetcode060. 第k个排列](https://leetcode-cn.com/problems/permutation-sequence/)\n\n该题就是求n个数全排列中的第k的排序，查看评论区才知道有一个叫做康拓展开的概念，我从来都没有接触过，所以现在做下笔记，学习康拓排序，来解决这个leetcode题。\n\n## 康拓排序\n\n$$\nrank=a_n\\times(n−1)!+a_n−1\\times(n−2)!+⋯+a_1\\times0!\n$$\n\n\n\n其中, a[i]为整数，并且0 <= a[i] <= i, 0 <= i < n,  `rank`   表示当前的序列在全排列中排第几个，这就是康托展开。\n\n康托展开 就是已知序列，求出它的排列名次\n\n## 逆康拓排序\n\n逆康拓排序就是已知排列的名次，求出所对应的序列。\n\n\n\n## 应用\n\n因为序列和名次是一一对应的，所以可以用来压缩 字符串\n\n\n\n\n\n ","slug":"算法笔记/康拓展开与康拓逆展开","published":1,"date":"2020-06-19T15:43:05.396Z","updated":"2020-06-19T16:10:51.988Z","title":"算法笔记/康拓展开与康拓逆展开","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llqj000aj8g50cvm3b4u","content":"<h1 id=\"康托展开和逆康托展开\"><a class=\"markdownIt-Anchor\" href=\"#康托展开和逆康托展开\"></a> 康托展开和逆康托展开</h1>\n<p>题目详见：<a href=\"https://leetcode-cn.com/problems/permutation-sequence/\" target=\"_blank\" rel=\"noopener\">leetcode060. 第k个排列</a></p>\n<p>该题就是求n个数全排列中的第k的排序，查看评论区才知道有一个叫做康拓展开的概念，我从来都没有接触过，所以现在做下笔记，学习康拓排序，来解决这个leetcode题。</p>\n<h2 id=\"康拓排序\"><a class=\"markdownIt-Anchor\" href=\"#康拓排序\"></a> 康拓排序</h2>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo>=</mo><msub><mi>a</mi><mi>n</mi></msub><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mi mathvariant=\"normal\">−</mi><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><mi mathvariant=\"normal\">−</mi><mn>1</mn><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mi mathvariant=\"normal\">−</mi><mn>2</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mo>×</mo><mn>0</mn><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">rank=a_n\\times(n−1)!+a_n−1\\times(n−2)!+⋯+a_1\\times0!\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.79444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">!</span></span></span></span></span></p>\n<p>其中, a[i]为整数，并且0 &lt;= a[i] &lt;= i, 0 &lt;= i &lt; n,  <code>rank</code>   表示当前的序列在全排列中排第几个，这就是康托展开。</p>\n<p>康托展开 就是已知序列，求出它的排列名次</p>\n<h2 id=\"逆康拓排序\"><a class=\"markdownIt-Anchor\" href=\"#逆康拓排序\"></a> 逆康拓排序</h2>\n<p>逆康拓排序就是已知排列的名次，求出所对应的序列。</p>\n<h2 id=\"应用\"><a class=\"markdownIt-Anchor\" href=\"#应用\"></a> 应用</h2>\n<p>因为序列和名次是一一对应的，所以可以用来压缩 字符串</p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"2GNZ5DF","length":387,"excerpt":"","more":"<h1 id=\"康托展开和逆康托展开\"><a class=\"markdownIt-Anchor\" href=\"#康托展开和逆康托展开\"></a> 康托展开和逆康托展开</h1>\n<p>题目详见：<a href=\"https://leetcode-cn.com/problems/permutation-sequence/\" target=\"_blank\" rel=\"noopener\">leetcode060. 第k个排列</a></p>\n<p>该题就是求n个数全排列中的第k的排序，查看评论区才知道有一个叫做康拓展开的概念，我从来都没有接触过，所以现在做下笔记，学习康拓排序，来解决这个leetcode题。</p>\n<h2 id=\"康拓排序\"><a class=\"markdownIt-Anchor\" href=\"#康拓排序\"></a> 康拓排序</h2>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo>=</mo><msub><mi>a</mi><mi>n</mi></msub><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mi mathvariant=\"normal\">−</mi><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><mi mathvariant=\"normal\">−</mi><mn>1</mn><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mi mathvariant=\"normal\">−</mi><mn>2</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mo>×</mo><mn>0</mn><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">rank=a_n\\times(n−1)!+a_n−1\\times(n−2)!+⋯+a_1\\times0!\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.79444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">!</span></span></span></span></span></p>\n<p>其中, a[i]为整数，并且0 &lt;= a[i] &lt;= i, 0 &lt;= i &lt; n,  <code>rank</code>   表示当前的序列在全排列中排第几个，这就是康托展开。</p>\n<p>康托展开 就是已知序列，求出它的排列名次</p>\n<h2 id=\"逆康拓排序\"><a class=\"markdownIt-Anchor\" href=\"#逆康拓排序\"></a> 逆康拓排序</h2>\n<p>逆康拓排序就是已知排列的名次，求出所对应的序列。</p>\n<h2 id=\"应用\"><a class=\"markdownIt-Anchor\" href=\"#应用\"></a> 应用</h2>\n<p>因为序列和名次是一一对应的，所以可以用来压缩 字符串</p>\n"},{"_content":"# linux常见问题总结\n\n    这个是在使用linux/ubuntu 系统过程中，对遇到的问题进行记录总结，以备后用。好记性不如烂键盘！\n\n## 1. 怎么使用管理员权限打开文件夹?\n\n    > sudo natilus\n<!--more-->\n## 2. 浏览器看不了视频?\n\n    安装flash,执行一下命令前先需要设置允许安装未知版权的软件：  system settings -> software&updates -> ubuntu software -> 取消software restricted copyright or legal issues(第四个选项)\n\n    >  sudo apt-get install flashplugin-installer\n\n    安装html5音视频所支持的依赖\n  \n    > sudo apt-get update\n    >\n    > sudo apt-get install ubuntu-restricted-extras\n\n## 3. 多条命令执行区别\n\n    （1） 每个命令之间用;隔开\n\n    说明：各命令的执行给果，不会影响其它命令的执行。换句话说，各个命令都会执行，但不保证每个命令都执行成功。\n\n    （2） 每个命令之间用&&隔开\n\n    说明：若前面的命令执行成功，才会去执行后面的命令。这样可以保证所有的命令执行完毕后，执行过程都是成功的。\n\n    （3）每个命令之间用||隔开\n\n    说明：||是或的意思，只有前面的命令执行失败后才去执行下一条命令，直到成功执行一条命令为止。\n\n    （4）每个命令之间用&隔开\n    说明：&表示and，按顺序执行每条命令，但是前后不影响，也就是无论第一条是否执行失败，后一条总是要执行\n\n    （5）每个命令之间用|隔开\n    说明：管道符|，前一条执行的结果作为后一条执行语句的输入，依次执行。\n\n## 4.Ubuntu安装各种格式软件\n\n    安装.deb格式的软件\n    dpkg -i <package.deb>\n\n## 5. 快速回到桌面快捷键\n\n`ctrl + win + d` 快速回到桌面快捷键","source":"_posts/软件与工具使用/linux命令.md","raw":"# linux常见问题总结\n\n    这个是在使用linux/ubuntu 系统过程中，对遇到的问题进行记录总结，以备后用。好记性不如烂键盘！\n\n## 1. 怎么使用管理员权限打开文件夹?\n\n    > sudo natilus\n<!--more-->\n## 2. 浏览器看不了视频?\n\n    安装flash,执行一下命令前先需要设置允许安装未知版权的软件：  system settings -> software&updates -> ubuntu software -> 取消software restricted copyright or legal issues(第四个选项)\n\n    >  sudo apt-get install flashplugin-installer\n\n    安装html5音视频所支持的依赖\n  \n    > sudo apt-get update\n    >\n    > sudo apt-get install ubuntu-restricted-extras\n\n## 3. 多条命令执行区别\n\n    （1） 每个命令之间用;隔开\n\n    说明：各命令的执行给果，不会影响其它命令的执行。换句话说，各个命令都会执行，但不保证每个命令都执行成功。\n\n    （2） 每个命令之间用&&隔开\n\n    说明：若前面的命令执行成功，才会去执行后面的命令。这样可以保证所有的命令执行完毕后，执行过程都是成功的。\n\n    （3）每个命令之间用||隔开\n\n    说明：||是或的意思，只有前面的命令执行失败后才去执行下一条命令，直到成功执行一条命令为止。\n\n    （4）每个命令之间用&隔开\n    说明：&表示and，按顺序执行每条命令，但是前后不影响，也就是无论第一条是否执行失败，后一条总是要执行\n\n    （5）每个命令之间用|隔开\n    说明：管道符|，前一条执行的结果作为后一条执行语句的输入，依次执行。\n\n## 4.Ubuntu安装各种格式软件\n\n    安装.deb格式的软件\n    dpkg -i <package.deb>\n\n## 5. 快速回到桌面快捷键\n\n`ctrl + win + d` 快速回到桌面快捷键","slug":"软件与工具使用/linux命令","published":1,"date":"2020-06-18T12:37:48.336Z","updated":"2020-06-18T12:37:48.336Z","title":"软件与工具使用/linux命令","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llqk000bj8g55jx84oj8","content":"<h1 id=\"linux常见问题总结\"><a class=\"markdownIt-Anchor\" href=\"#linux常见问题总结\"></a> linux常见问题总结</h1>\n<pre><code>这个是在使用linux/ubuntu 系统过程中，对遇到的问题进行记录总结，以备后用。好记性不如烂键盘！\n</code></pre>\n<h2 id=\"1-怎么使用管理员权限打开文件夹\"><a class=\"markdownIt-Anchor\" href=\"#1-怎么使用管理员权限打开文件夹\"></a> 1. 怎么使用管理员权限打开文件夹?</h2>\n<pre><code>&gt; sudo natilus\n</code></pre>\n<a id=\"more\"></a>\n<h2 id=\"2-浏览器看不了视频\"><a class=\"markdownIt-Anchor\" href=\"#2-浏览器看不了视频\"></a> 2. 浏览器看不了视频?</h2>\n<pre><code>安装flash,执行一下命令前先需要设置允许安装未知版权的软件：  system settings -&gt; software&amp;updates -&gt; ubuntu software -&gt; 取消software restricted copyright or legal issues(第四个选项)\n\n&gt;  sudo apt-get install flashplugin-installer\n\n安装html5音视频所支持的依赖\n\n&gt; sudo apt-get update\n&gt;\n&gt; sudo apt-get install ubuntu-restricted-extras\n</code></pre>\n<h2 id=\"3-多条命令执行区别\"><a class=\"markdownIt-Anchor\" href=\"#3-多条命令执行区别\"></a> 3. 多条命令执行区别</h2>\n<pre><code>（1） 每个命令之间用;隔开\n\n说明：各命令的执行给果，不会影响其它命令的执行。换句话说，各个命令都会执行，但不保证每个命令都执行成功。\n\n（2） 每个命令之间用&amp;&amp;隔开\n\n说明：若前面的命令执行成功，才会去执行后面的命令。这样可以保证所有的命令执行完毕后，执行过程都是成功的。\n\n（3）每个命令之间用||隔开\n\n说明：||是或的意思，只有前面的命令执行失败后才去执行下一条命令，直到成功执行一条命令为止。\n\n（4）每个命令之间用&amp;隔开\n说明：&amp;表示and，按顺序执行每条命令，但是前后不影响，也就是无论第一条是否执行失败，后一条总是要执行\n\n（5）每个命令之间用|隔开\n说明：管道符|，前一条执行的结果作为后一条执行语句的输入，依次执行。\n</code></pre>\n<h2 id=\"4ubuntu安装各种格式软件\"><a class=\"markdownIt-Anchor\" href=\"#4ubuntu安装各种格式软件\"></a> 4.Ubuntu安装各种格式软件</h2>\n<pre><code>安装.deb格式的软件\ndpkg -i &lt;package.deb&gt;\n</code></pre>\n<h2 id=\"5-快速回到桌面快捷键\"><a class=\"markdownIt-Anchor\" href=\"#5-快速回到桌面快捷键\"></a> 5. 快速回到桌面快捷键</h2>\n<p><code>ctrl + win + d</code> 快速回到桌面快捷键</p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"30E5BGT","length":789,"excerpt":"<h1 id=\"linux常见问题总结\"><a class=\"markdownIt-Anchor\" href=\"#linux常见问题总结\"></a> linux常见问题总结</h1>\n<pre><code>这个是在使用linux/ubuntu 系统过程中，对遇到的问题进行记录总结，以备后用。好记性不如烂键盘！\n</code></pre>\n<h2 id=\"1-怎么使用管理员权限打开文件夹\"><a class=\"markdownIt-Anchor\" href=\"#1-怎么使用管理员权限打开文件夹\"></a> 1. 怎么使用管理员权限打开文件夹?</h2>\n<pre><code>&gt; sudo natilus\n</code></pre>","more":"<h2 id=\"2-浏览器看不了视频\"><a class=\"markdownIt-Anchor\" href=\"#2-浏览器看不了视频\"></a> 2. 浏览器看不了视频?</h2>\n<pre><code>安装flash,执行一下命令前先需要设置允许安装未知版权的软件：  system settings -&gt; software&amp;updates -&gt; ubuntu software -&gt; 取消software restricted copyright or legal issues(第四个选项)\n\n&gt;  sudo apt-get install flashplugin-installer\n\n安装html5音视频所支持的依赖\n\n&gt; sudo apt-get update\n&gt;\n&gt; sudo apt-get install ubuntu-restricted-extras\n</code></pre>\n<h2 id=\"3-多条命令执行区别\"><a class=\"markdownIt-Anchor\" href=\"#3-多条命令执行区别\"></a> 3. 多条命令执行区别</h2>\n<pre><code>（1） 每个命令之间用;隔开\n\n说明：各命令的执行给果，不会影响其它命令的执行。换句话说，各个命令都会执行，但不保证每个命令都执行成功。\n\n（2） 每个命令之间用&amp;&amp;隔开\n\n说明：若前面的命令执行成功，才会去执行后面的命令。这样可以保证所有的命令执行完毕后，执行过程都是成功的。\n\n（3）每个命令之间用||隔开\n\n说明：||是或的意思，只有前面的命令执行失败后才去执行下一条命令，直到成功执行一条命令为止。\n\n（4）每个命令之间用&amp;隔开\n说明：&amp;表示and，按顺序执行每条命令，但是前后不影响，也就是无论第一条是否执行失败，后一条总是要执行\n\n（5）每个命令之间用|隔开\n说明：管道符|，前一条执行的结果作为后一条执行语句的输入，依次执行。\n</code></pre>\n<h2 id=\"4ubuntu安装各种格式软件\"><a class=\"markdownIt-Anchor\" href=\"#4ubuntu安装各种格式软件\"></a> 4.Ubuntu安装各种格式软件</h2>\n<pre><code>安装.deb格式的软件\ndpkg -i &lt;package.deb&gt;\n</code></pre>\n<h2 id=\"5-快速回到桌面快捷键\"><a class=\"markdownIt-Anchor\" href=\"#5-快速回到桌面快捷键\"></a> 5. 快速回到桌面快捷键</h2>\n<p><code>ctrl + win + d</code> 快速回到桌面快捷键</p>"},{"_content":"# vscode常见问题\n\n## 1.怎么修改 vscode 主题颜色？\n\n:smile:\n\n新下载的 vscode 默认的都是黑色的主题，颜色太暗看不清怎么办？ 直接修改 vscoe 颜色颜色即可，步骤如下：\n\nfile -> preference -> color theme -> 选择 light 即可\n也可以快捷键 ctrl + K + ctrl + T 直接打开颜色主题进行设置\n<!--more-->\n## 2.设置文件过程中自动保存\n\n对文件的修改每次有需要手动保存 ，有没有觉得好麻烦呀？只需按照下面步骤设置轻松实现 vscode 自动编辑保存功能\n\n    点击 vscode 界面右下角 -> settings -> 搜索框中搜索 auto save ->选择 afterDelay,同时设置延迟保存时间为 1000，大功告成\n\n## 3.设置滚轮可调节编辑区字体大小\n\n    在settings.json 文件中添加配置`\"editor.mouseWheelZoom\": true` 即可\n\n## 4.灵活好用的快捷建\n\n    灵活好用的系统或自定义的常用快捷键，如果系统没有该快捷建可自行配置：\n    \n    vscode界面及编辑区快捷键\n    \n    `ctrl + b` 显示/隐藏左侧状态栏\n    \n    `ctrl + =/-/鼠标滚轮`  调整编辑区的字体大小 ，鼠标滚轮需要进行[问题3](#3设置滚轮可调节编辑区字体大小)所示的设置\n    \n    `crrl + shift + -/=` 调整整个界面大小\n    \n    `crrl + tab` 切换到最近打开文本中\n\n\n    分屏快捷键\n    \n    `ctrl + \\` 拆分窗口组，（默认新建窗口位置在右侧）\n    \n    `ctrl + \\  ctrl + 方向键` 选择新拆分出的窗口位置（自定义）\n    \n    `ctrl + j  a` 将所有其他窗口的分屏关闭，并合并当当前窗口中，可实现当前代码窗口的最大化显示（(自定义)）\n    \n    `ctrl + k  w` 关闭当前分屏及所有打开的文件\n    \n    `ctrl + k o` 关闭其他分组的窗口，保留当前分组的窗口\n    \n    markdown快捷键\n    \n    `alt + m` 激活docs-markdown菜单,实现快捷制表等操作 \n       \n    `ctrl + shift + v` 切换 markdown 的编辑和预览模式\n\n## 5. 实用的扩展插件\n\n    `Markdown All in One` 在vscode中必备的markdown插件，支持预览，基本语法等\n    \n    `markdownlint` markdown 语法智能提示，改善自己的md书写规范\n    \n    `Markdown toc` 自动生成markdown目录树，简单实用\n    \n    `markdown preview Enhancced` 预览增强，可支持显示复杂的公式，流程图，表格等\n    \n    `vscode-icons` 美化文件浏览器中的文件/文件夹图标\n    \n    `terminal` 下面状态栏添加终端快捷按钮\n    \n    `python` python环境必备的插件，识别 .py文件关联到解释器，运行等功能\n\n## 6. 怎么拆分和合并分屏\n\n    见 [4.灵活好用的快捷建](#4灵活好用的快捷建) 中的分屏快捷键\n","source":"_posts/软件与工具使用/vscode笔记.md","raw":"# vscode常见问题\n\n## 1.怎么修改 vscode 主题颜色？\n\n:smile:\n\n新下载的 vscode 默认的都是黑色的主题，颜色太暗看不清怎么办？ 直接修改 vscoe 颜色颜色即可，步骤如下：\n\nfile -> preference -> color theme -> 选择 light 即可\n也可以快捷键 ctrl + K + ctrl + T 直接打开颜色主题进行设置\n<!--more-->\n## 2.设置文件过程中自动保存\n\n对文件的修改每次有需要手动保存 ，有没有觉得好麻烦呀？只需按照下面步骤设置轻松实现 vscode 自动编辑保存功能\n\n    点击 vscode 界面右下角 -> settings -> 搜索框中搜索 auto save ->选择 afterDelay,同时设置延迟保存时间为 1000，大功告成\n\n## 3.设置滚轮可调节编辑区字体大小\n\n    在settings.json 文件中添加配置`\"editor.mouseWheelZoom\": true` 即可\n\n## 4.灵活好用的快捷建\n\n    灵活好用的系统或自定义的常用快捷键，如果系统没有该快捷建可自行配置：\n    \n    vscode界面及编辑区快捷键\n    \n    `ctrl + b` 显示/隐藏左侧状态栏\n    \n    `ctrl + =/-/鼠标滚轮`  调整编辑区的字体大小 ，鼠标滚轮需要进行[问题3](#3设置滚轮可调节编辑区字体大小)所示的设置\n    \n    `crrl + shift + -/=` 调整整个界面大小\n    \n    `crrl + tab` 切换到最近打开文本中\n\n\n    分屏快捷键\n    \n    `ctrl + \\` 拆分窗口组，（默认新建窗口位置在右侧）\n    \n    `ctrl + \\  ctrl + 方向键` 选择新拆分出的窗口位置（自定义）\n    \n    `ctrl + j  a` 将所有其他窗口的分屏关闭，并合并当当前窗口中，可实现当前代码窗口的最大化显示（(自定义)）\n    \n    `ctrl + k  w` 关闭当前分屏及所有打开的文件\n    \n    `ctrl + k o` 关闭其他分组的窗口，保留当前分组的窗口\n    \n    markdown快捷键\n    \n    `alt + m` 激活docs-markdown菜单,实现快捷制表等操作 \n       \n    `ctrl + shift + v` 切换 markdown 的编辑和预览模式\n\n## 5. 实用的扩展插件\n\n    `Markdown All in One` 在vscode中必备的markdown插件，支持预览，基本语法等\n    \n    `markdownlint` markdown 语法智能提示，改善自己的md书写规范\n    \n    `Markdown toc` 自动生成markdown目录树，简单实用\n    \n    `markdown preview Enhancced` 预览增强，可支持显示复杂的公式，流程图，表格等\n    \n    `vscode-icons` 美化文件浏览器中的文件/文件夹图标\n    \n    `terminal` 下面状态栏添加终端快捷按钮\n    \n    `python` python环境必备的插件，识别 .py文件关联到解释器，运行等功能\n\n## 6. 怎么拆分和合并分屏\n\n    见 [4.灵活好用的快捷建](#4灵活好用的快捷建) 中的分屏快捷键\n","slug":"软件与工具使用/vscode笔记","published":1,"date":"2020-06-18T12:37:48.338Z","updated":"2020-08-30T10:04:54.623Z","title":"软件与工具使用/vscode笔记","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llqk000cj8g5b9fx2yof","content":"<h1 id=\"vscode常见问题\"><a class=\"markdownIt-Anchor\" href=\"#vscode常见问题\"></a> vscode常见问题</h1>\n<h2 id=\"1怎么修改-vscode-主题颜色\"><a class=\"markdownIt-Anchor\" href=\"#1怎么修改-vscode-主题颜色\"></a> 1.怎么修改 vscode 主题颜色？</h2>\n<p>😄</p>\n<p>新下载的 vscode 默认的都是黑色的主题，颜色太暗看不清怎么办？ 直接修改 vscoe 颜色颜色即可，步骤如下：</p>\n<p>file -&gt; preference -&gt; color theme -&gt; 选择 light 即可<br />\n也可以快捷键 ctrl + K + ctrl + T 直接打开颜色主题进行设置</p>\n<a id=\"more\"></a>\n<h2 id=\"2设置文件过程中自动保存\"><a class=\"markdownIt-Anchor\" href=\"#2设置文件过程中自动保存\"></a> 2.设置文件过程中自动保存</h2>\n<p>对文件的修改每次有需要手动保存 ，有没有觉得好麻烦呀？只需按照下面步骤设置轻松实现 vscode 自动编辑保存功能</p>\n<pre><code>点击 vscode 界面右下角 -&gt; settings -&gt; 搜索框中搜索 auto save -&gt;选择 afterDelay,同时设置延迟保存时间为 1000，大功告成\n</code></pre>\n<h2 id=\"3设置滚轮可调节编辑区字体大小\"><a class=\"markdownIt-Anchor\" href=\"#3设置滚轮可调节编辑区字体大小\"></a> 3.设置滚轮可调节编辑区字体大小</h2>\n<pre><code>在settings.json 文件中添加配置`&quot;editor.mouseWheelZoom&quot;: true` 即可\n</code></pre>\n<h2 id=\"4灵活好用的快捷建\"><a class=\"markdownIt-Anchor\" href=\"#4灵活好用的快捷建\"></a> 4.灵活好用的快捷建</h2>\n<pre><code>灵活好用的系统或自定义的常用快捷键，如果系统没有该快捷建可自行配置：\n\nvscode界面及编辑区快捷键\n\n`ctrl + b` 显示/隐藏左侧状态栏\n\n`ctrl + =/-/鼠标滚轮`  调整编辑区的字体大小 ，鼠标滚轮需要进行[问题3](#3设置滚轮可调节编辑区字体大小)所示的设置\n\n`crrl + shift + -/=` 调整整个界面大小\n\n`crrl + tab` 切换到最近打开文本中\n\n\n分屏快捷键\n\n`ctrl + \\` 拆分窗口组，（默认新建窗口位置在右侧）\n\n`ctrl + \\  ctrl + 方向键` 选择新拆分出的窗口位置（自定义）\n\n`ctrl + j  a` 将所有其他窗口的分屏关闭，并合并当当前窗口中，可实现当前代码窗口的最大化显示（(自定义)）\n\n`ctrl + k  w` 关闭当前分屏及所有打开的文件\n\n`ctrl + k o` 关闭其他分组的窗口，保留当前分组的窗口\n\nmarkdown快捷键\n\n`alt + m` 激活docs-markdown菜单,实现快捷制表等操作 \n   \n`ctrl + shift + v` 切换 markdown 的编辑和预览模式\n</code></pre>\n<h2 id=\"5-实用的扩展插件\"><a class=\"markdownIt-Anchor\" href=\"#5-实用的扩展插件\"></a> 5. 实用的扩展插件</h2>\n<pre><code>`Markdown All in One` 在vscode中必备的markdown插件，支持预览，基本语法等\n\n`markdownlint` markdown 语法智能提示，改善自己的md书写规范\n\n`Markdown toc` 自动生成markdown目录树，简单实用\n\n`markdown preview Enhancced` 预览增强，可支持显示复杂的公式，流程图，表格等\n\n`vscode-icons` 美化文件浏览器中的文件/文件夹图标\n\n`terminal` 下面状态栏添加终端快捷按钮\n\n`python` python环境必备的插件，识别 .py文件关联到解释器，运行等功能\n</code></pre>\n<h2 id=\"6-怎么拆分和合并分屏\"><a class=\"markdownIt-Anchor\" href=\"#6-怎么拆分和合并分屏\"></a> 6. 怎么拆分和合并分屏</h2>\n<pre><code>见 [4.灵活好用的快捷建](#4灵活好用的快捷建) 中的分屏快捷键\n</code></pre>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"1F79PYZ","length":1138,"excerpt":"<h1 id=\"vscode常见问题\"><a class=\"markdownIt-Anchor\" href=\"#vscode常见问题\"></a> vscode常见问题</h1>\n<h2 id=\"1怎么修改-vscode-主题颜色\"><a class=\"markdownIt-Anchor\" href=\"#1怎么修改-vscode-主题颜色\"></a> 1.怎么修改 vscode 主题颜色？</h2>\n<p>😄</p>\n<p>新下载的 vscode 默认的都是黑色的主题，颜色太暗看不清怎么办？ 直接修改 vscoe 颜色颜色即可，步骤如下：</p>\n<p>file -&gt; preference -&gt; color theme -&gt; 选择 light 即可<br />\n也可以快捷键 ctrl + K + ctrl + T 直接打开颜色主题进行设置</p>","more":"<h2 id=\"2设置文件过程中自动保存\"><a class=\"markdownIt-Anchor\" href=\"#2设置文件过程中自动保存\"></a> 2.设置文件过程中自动保存</h2>\n<p>对文件的修改每次有需要手动保存 ，有没有觉得好麻烦呀？只需按照下面步骤设置轻松实现 vscode 自动编辑保存功能</p>\n<pre><code>点击 vscode 界面右下角 -&gt; settings -&gt; 搜索框中搜索 auto save -&gt;选择 afterDelay,同时设置延迟保存时间为 1000，大功告成\n</code></pre>\n<h2 id=\"3设置滚轮可调节编辑区字体大小\"><a class=\"markdownIt-Anchor\" href=\"#3设置滚轮可调节编辑区字体大小\"></a> 3.设置滚轮可调节编辑区字体大小</h2>\n<pre><code>在settings.json 文件中添加配置`&quot;editor.mouseWheelZoom&quot;: true` 即可\n</code></pre>\n<h2 id=\"4灵活好用的快捷建\"><a class=\"markdownIt-Anchor\" href=\"#4灵活好用的快捷建\"></a> 4.灵活好用的快捷建</h2>\n<pre><code>灵活好用的系统或自定义的常用快捷键，如果系统没有该快捷建可自行配置：\n\nvscode界面及编辑区快捷键\n\n`ctrl + b` 显示/隐藏左侧状态栏\n\n`ctrl + =/-/鼠标滚轮`  调整编辑区的字体大小 ，鼠标滚轮需要进行[问题3](#3设置滚轮可调节编辑区字体大小)所示的设置\n\n`crrl + shift + -/=` 调整整个界面大小\n\n`crrl + tab` 切换到最近打开文本中\n\n\n分屏快捷键\n\n`ctrl + \\` 拆分窗口组，（默认新建窗口位置在右侧）\n\n`ctrl + \\  ctrl + 方向键` 选择新拆分出的窗口位置（自定义）\n\n`ctrl + j  a` 将所有其他窗口的分屏关闭，并合并当当前窗口中，可实现当前代码窗口的最大化显示（(自定义)）\n\n`ctrl + k  w` 关闭当前分屏及所有打开的文件\n\n`ctrl + k o` 关闭其他分组的窗口，保留当前分组的窗口\n\nmarkdown快捷键\n\n`alt + m` 激活docs-markdown菜单,实现快捷制表等操作 \n   \n`ctrl + shift + v` 切换 markdown 的编辑和预览模式\n</code></pre>\n<h2 id=\"5-实用的扩展插件\"><a class=\"markdownIt-Anchor\" href=\"#5-实用的扩展插件\"></a> 5. 实用的扩展插件</h2>\n<pre><code>`Markdown All in One` 在vscode中必备的markdown插件，支持预览，基本语法等\n\n`markdownlint` markdown 语法智能提示，改善自己的md书写规范\n\n`Markdown toc` 自动生成markdown目录树，简单实用\n\n`markdown preview Enhancced` 预览增强，可支持显示复杂的公式，流程图，表格等\n\n`vscode-icons` 美化文件浏览器中的文件/文件夹图标\n\n`terminal` 下面状态栏添加终端快捷按钮\n\n`python` python环境必备的插件，识别 .py文件关联到解释器，运行等功能\n</code></pre>\n<h2 id=\"6-怎么拆分和合并分屏\"><a class=\"markdownIt-Anchor\" href=\"#6-怎么拆分和合并分屏\"></a> 6. 怎么拆分和合并分屏</h2>\n<pre><code>见 [4.灵活好用的快捷建](#4灵活好用的快捷建) 中的分屏快捷键\n</code></pre>"},{"_content":"# markdown疑难杂症\n\n\n## 1. 单文件怎么生成目录，并实现点击即可定位\n\n### 方法1:手动添加\n    \n原始格式如下所示，效果正如当前页面所生成的问题目录格式，原理其实是类似于插入链接的格式。插入链接格式\n\n[点击跳转我的linux笔记](https://gitee.com/heronwang/linux_notes)\n\n这里的链接的原始格式：\n<!--more-->\n```md\n[点击跳转我的linux笔记](https://gitee.com/heronwang/linux_notes)\n```\n\n\n```md\n[点击跳转](#id值)\n```\n\n整个目录模板格式如下：\n\n```md\n# <center> 标题 </center>\n----\n## 目录\n1. [目录1](#jump1)\n2. [目录2](#jump2)\n\n---\n### <a id=\"jump1\">1. 目录1</a>\n---\n### <a id=\"jump2\">2. 目录2</a>\n```\n\n### 方法2:使用vscode插件:Markdown-toc自动生成（简单易用）\n\n- 在vscode扩展中搜索 Markdown-toc,点击安装。\n- 进入vscode的系统设置settings,搜索eol,将换行设置为/n,这里我是linux系统设置为/n,windows系统设置为 /r/n 。\n- 然后回到markdown文档中，右键选择 Markdown toc:insert/update，即可根据标题自动生成目录\n\n### 方法3:使用markdown all in one 支持的toc创建toc\n    \n  打开相应的文件，ctrl +shift+ p 调出命令行，搜索toc，执行Markdown:create content of table\n\n\n## 2. 原始格式输出\n\n使用 ``` （ ` 位于esc的下面一个按键）将代码块包裹起来即可原始格式输出markdown，如下所示：\n\n  ````md\n  ```markdown\n    # 一级标题\n    ## 二级标题\n    ### 三级标题\n  ```\n  ````\n\n## 怎么使用flow流程图\n\n示例：\n````\n```flow    \n//这里定义结构以及节点等\nst=>start: 开始\ne=>end: 结束\nop=>operation: 我的操作\ncond=>condition: 确认？\nop2=>operation: 操作2\n\n//这里写流程\nst->op->cond->op2\ncond(yes)->e\ncond(no)->op2\n\n```\n````\n\n显示如下所示(vscode需要使用MPE插件预览)：\n\n\n```flow    \n//这里定义结构以及节点等\nst=>start: 开始\ne=>end: 结束\nop=>operation: 我的操作\ncond=>condition: 确认？\nop2=>operation: 操作2\n\n//这里写流程\nst->op->cond->op2\ncond(yes)->e\ncond(no)->op2\n```\n\n## 怎么使用math公式\n\n1. 矩阵使用：\n  `$这里单行公式$`\n  \n  ```\n  $$\n  这里添加多行公式\n  $$\n  ```\n\n$$\n  平移矩阵：M=\n  \\left[\\begin{matrix}\n   1 & 0 & 100 \\\\\n   0 & 1 & 100 \\\\\n  \\end{matrix} \\right]\\tag{A}\n$$\n\n## 怎么使用表格\n\n实例如下，3列7行的表格：\n\n```\n| Column1 | Column2 | Column3 |\n|---------|---------|---------|\n| Row1    |         |         |\n| Row2    | dfd     |         |\n| Row3    |         |         |\n| Row4    |         |         |\n| Row5    |         |         |\n| Row6    |         |         |\n| Row7    |         |         |\n```\n\n显示如下：\n\n| Column1 | Column2 | Column3 |\n|---------|---------|---------|\n| Row1    |         |         |\n| Row2    | dfd     |         |\n| Row3    |         |         |\n| Row4    |         |         |\n| Row5    |         |         |\n| Row6    |         |         |\n| Row7    |         |         |\n\n\n相关的快捷键\n`alt + m` 打开生成markdown结构的的菜单，选择table输入要生成的行列\n\n`ctrl + d  t` 均与分布表格单元格（相当于美化表格）\n\n","source":"_posts/软件与工具使用/markdown笔记.md","raw":"# markdown疑难杂症\n\n\n## 1. 单文件怎么生成目录，并实现点击即可定位\n\n### 方法1:手动添加\n    \n原始格式如下所示，效果正如当前页面所生成的问题目录格式，原理其实是类似于插入链接的格式。插入链接格式\n\n[点击跳转我的linux笔记](https://gitee.com/heronwang/linux_notes)\n\n这里的链接的原始格式：\n<!--more-->\n```md\n[点击跳转我的linux笔记](https://gitee.com/heronwang/linux_notes)\n```\n\n\n```md\n[点击跳转](#id值)\n```\n\n整个目录模板格式如下：\n\n```md\n# <center> 标题 </center>\n----\n## 目录\n1. [目录1](#jump1)\n2. [目录2](#jump2)\n\n---\n### <a id=\"jump1\">1. 目录1</a>\n---\n### <a id=\"jump2\">2. 目录2</a>\n```\n\n### 方法2:使用vscode插件:Markdown-toc自动生成（简单易用）\n\n- 在vscode扩展中搜索 Markdown-toc,点击安装。\n- 进入vscode的系统设置settings,搜索eol,将换行设置为/n,这里我是linux系统设置为/n,windows系统设置为 /r/n 。\n- 然后回到markdown文档中，右键选择 Markdown toc:insert/update，即可根据标题自动生成目录\n\n### 方法3:使用markdown all in one 支持的toc创建toc\n    \n  打开相应的文件，ctrl +shift+ p 调出命令行，搜索toc，执行Markdown:create content of table\n\n\n## 2. 原始格式输出\n\n使用 ``` （ ` 位于esc的下面一个按键）将代码块包裹起来即可原始格式输出markdown，如下所示：\n\n  ````md\n  ```markdown\n    # 一级标题\n    ## 二级标题\n    ### 三级标题\n  ```\n  ````\n\n## 怎么使用flow流程图\n\n示例：\n````\n```flow    \n//这里定义结构以及节点等\nst=>start: 开始\ne=>end: 结束\nop=>operation: 我的操作\ncond=>condition: 确认？\nop2=>operation: 操作2\n\n//这里写流程\nst->op->cond->op2\ncond(yes)->e\ncond(no)->op2\n\n```\n````\n\n显示如下所示(vscode需要使用MPE插件预览)：\n\n\n```flow    \n//这里定义结构以及节点等\nst=>start: 开始\ne=>end: 结束\nop=>operation: 我的操作\ncond=>condition: 确认？\nop2=>operation: 操作2\n\n//这里写流程\nst->op->cond->op2\ncond(yes)->e\ncond(no)->op2\n```\n\n## 怎么使用math公式\n\n1. 矩阵使用：\n  `$这里单行公式$`\n  \n  ```\n  $$\n  这里添加多行公式\n  $$\n  ```\n\n$$\n  平移矩阵：M=\n  \\left[\\begin{matrix}\n   1 & 0 & 100 \\\\\n   0 & 1 & 100 \\\\\n  \\end{matrix} \\right]\\tag{A}\n$$\n\n## 怎么使用表格\n\n实例如下，3列7行的表格：\n\n```\n| Column1 | Column2 | Column3 |\n|---------|---------|---------|\n| Row1    |         |         |\n| Row2    | dfd     |         |\n| Row3    |         |         |\n| Row4    |         |         |\n| Row5    |         |         |\n| Row6    |         |         |\n| Row7    |         |         |\n```\n\n显示如下：\n\n| Column1 | Column2 | Column3 |\n|---------|---------|---------|\n| Row1    |         |         |\n| Row2    | dfd     |         |\n| Row3    |         |         |\n| Row4    |         |         |\n| Row5    |         |         |\n| Row6    |         |         |\n| Row7    |         |         |\n\n\n相关的快捷键\n`alt + m` 打开生成markdown结构的的菜单，选择table输入要生成的行列\n\n`ctrl + d  t` 均与分布表格单元格（相当于美化表格）\n\n","slug":"软件与工具使用/markdown笔记","published":1,"date":"2020-06-18T12:37:48.337Z","updated":"2020-06-18T12:37:48.337Z","title":"软件与工具使用/markdown笔记","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llql000dj8g5gmyjhx8a","content":"<h1 id=\"markdown疑难杂症\"><a class=\"markdownIt-Anchor\" href=\"#markdown疑难杂症\"></a> markdown疑难杂症</h1>\n<h2 id=\"1-单文件怎么生成目录并实现点击即可定位\"><a class=\"markdownIt-Anchor\" href=\"#1-单文件怎么生成目录并实现点击即可定位\"></a> 1. 单文件怎么生成目录，并实现点击即可定位</h2>\n<h3 id=\"方法1手动添加\"><a class=\"markdownIt-Anchor\" href=\"#方法1手动添加\"></a> 方法1:手动添加</h3>\n<p>原始格式如下所示，效果正如当前页面所生成的问题目录格式，原理其实是类似于插入链接的格式。插入链接格式</p>\n<p><a href=\"https://gitee.com/heronwang/linux_notes\" target=\"_blank\" rel=\"noopener\">点击跳转我的linux笔记</a></p>\n<p>这里的链接的原始格式：</p>\n<a id=\"more\"></a>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">点击跳转我的linux笔记</span>](<span class=\"link\">https://gitee.com/heronwang/linux_notes</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">点击跳转</span>](<span class=\"link\">#id值</span>)</span><br></pre></td></tr></table></figure>\n<p>整个目录模板格式如下：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># &lt;center&gt; 标题 &lt;/center&gt;</span></span><br><span class=\"line\">----</span><br><span class=\"line\"><span class=\"section\">## 目录</span></span><br><span class=\"line\"><span class=\"bullet\">1. </span>[<span class=\"string\">目录1</span>](<span class=\"link\">#jump1</span>)</span><br><span class=\"line\"><span class=\"bullet\">2. </span>[<span class=\"string\">目录2</span>](<span class=\"link\">#jump2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\">### &lt;a id=\"jump1\"&gt;1. 目录1&lt;/a&gt;</span></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\">### &lt;a id=\"jump2\"&gt;2. 目录2&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"方法2使用vscode插件markdown-toc自动生成简单易用\"><a class=\"markdownIt-Anchor\" href=\"#方法2使用vscode插件markdown-toc自动生成简单易用\"></a> 方法2:使用vscode插件:Markdown-toc自动生成（简单易用）</h3>\n<ul>\n<li>在vscode扩展中搜索 Markdown-toc,点击安装。</li>\n<li>进入vscode的系统设置settings,搜索eol,将换行设置为/n,这里我是linux系统设置为/n,windows系统设置为 /r/n 。</li>\n<li>然后回到markdown文档中，右键选择 Markdown toc:insert/update，即可根据标题自动生成目录</li>\n</ul>\n<h3 id=\"方法3使用markdown-all-in-one-支持的toc创建toc\"><a class=\"markdownIt-Anchor\" href=\"#方法3使用markdown-all-in-one-支持的toc创建toc\"></a> 方法3:使用markdown all in one 支持的toc创建toc</h3>\n<p>打开相应的文件，ctrl +shift+ p 调出命令行，搜索toc，执行Markdown:create content of table</p>\n<h2 id=\"2-原始格式输出\"><a class=\"markdownIt-Anchor\" href=\"#2-原始格式输出\"></a> 2. 原始格式输出</h2>\n<p>使用 ``` （ ` 位于esc的下面一个按键）将代码块包裹起来即可原始格式输出markdown，如下所示：</p>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```markdown</span></span><br><span class=\"line\"><span class=\"code\">  # 一级标题</span></span><br><span class=\"line\"><span class=\"code\">  ## 二级标题</span></span><br><span class=\"line\"><span class=\"code\">  ### 三级标题</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么使用flow流程图\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用flow流程图\"></a> 怎么使用flow流程图</h2>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#96;&#96;&#96;flow    </span><br><span class=\"line\">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 我的操作</span><br><span class=\"line\">cond&#x3D;&gt;condition: 确认？</span><br><span class=\"line\">op2&#x3D;&gt;operation: 操作2</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;这里写流程</span><br><span class=\"line\">st-&gt;op-&gt;cond-&gt;op2</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op2</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure>\n<p>显示如下所示(vscode需要使用MPE插件预览)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 我的操作</span><br><span class=\"line\">cond&#x3D;&gt;condition: 确认？</span><br><span class=\"line\">op2&#x3D;&gt;operation: 操作2</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;这里写流程</span><br><span class=\"line\">st-&gt;op-&gt;cond-&gt;op2</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op2</span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么使用math公式\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用math公式\"></a> 怎么使用math公式</h2>\n<ol>\n<li>矩阵使用：<br />\n<code>$这里单行公式$</code></li>\n</ol>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">这里添加多行公式</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi mathvariant=\"normal\">平</mi><mi mathvariant=\"normal\">移</mi><mi mathvariant=\"normal\">矩</mi><mi mathvariant=\"normal\">阵</mi><mi mathvariant=\"normal\">：</mi><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">  平移矩阵：M=\n  \\left[\\begin{matrix}\n   1 &amp; 0 &amp; 100 \\\\\n   0 &amp; 1 &amp; 100 \\\\\n  \\end{matrix} \\right]\\tag{A}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">平</span><span class=\"mord cjk_fallback\">移</span><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">阵</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">A</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<h2 id=\"怎么使用表格\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用表格\"></a> 怎么使用表格</h2>\n<p>实例如下，3列7行的表格：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| Column1 | Column2 | Column3 |</span><br><span class=\"line\">|---------|---------|---------|</span><br><span class=\"line\">| Row1    |         |         |</span><br><span class=\"line\">| Row2    | dfd     |         |</span><br><span class=\"line\">| Row3    |         |         |</span><br><span class=\"line\">| Row4    |         |         |</span><br><span class=\"line\">| Row5    |         |         |</span><br><span class=\"line\">| Row6    |         |         |</span><br><span class=\"line\">| Row7    |         |         |</span><br></pre></td></tr></table></figure>\n<p>显示如下：</p>\n<table>\n<thead>\n<tr>\n<th>Column1</th>\n<th>Column2</th>\n<th>Column3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Row1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row2</td>\n<td>dfd</td>\n<td></td>\n</tr>\n<tr>\n<td>Row3</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row4</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row5</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row6</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row7</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>相关的快捷键<br />\n<code>alt + m</code> 打开生成markdown结构的的菜单，选择table输入要生成的行列</p>\n<p><code>ctrl + d t</code> 均与分布表格单元格（相当于美化表格）</p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"15ZGB0B","length":1718,"excerpt":"<h1 id=\"markdown疑难杂症\"><a class=\"markdownIt-Anchor\" href=\"#markdown疑难杂症\"></a> markdown疑难杂症</h1>\n<h2 id=\"1-单文件怎么生成目录并实现点击即可定位\"><a class=\"markdownIt-Anchor\" href=\"#1-单文件怎么生成目录并实现点击即可定位\"></a> 1. 单文件怎么生成目录，并实现点击即可定位</h2>\n<h3 id=\"方法1手动添加\"><a class=\"markdownIt-Anchor\" href=\"#方法1手动添加\"></a> 方法1:手动添加</h3>\n<p>原始格式如下所示，效果正如当前页面所生成的问题目录格式，原理其实是类似于插入链接的格式。插入链接格式</p>\n<p><a href=\"https://gitee.com/heronwang/linux_notes\" target=\"_blank\" rel=\"noopener\">点击跳转我的linux笔记</a></p>\n<p>这里的链接的原始格式：</p>","more":"<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">点击跳转我的linux笔记</span>](<span class=\"link\">https://gitee.com/heronwang/linux_notes</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">点击跳转</span>](<span class=\"link\">#id值</span>)</span><br></pre></td></tr></table></figure>\n<p>整个目录模板格式如下：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># &lt;center&gt; 标题 &lt;/center&gt;</span></span><br><span class=\"line\">----</span><br><span class=\"line\"><span class=\"section\">## 目录</span></span><br><span class=\"line\"><span class=\"bullet\">1. </span>[<span class=\"string\">目录1</span>](<span class=\"link\">#jump1</span>)</span><br><span class=\"line\"><span class=\"bullet\">2. </span>[<span class=\"string\">目录2</span>](<span class=\"link\">#jump2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\">### &lt;a id=\"jump1\"&gt;1. 目录1&lt;/a&gt;</span></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\">### &lt;a id=\"jump2\"&gt;2. 目录2&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"方法2使用vscode插件markdown-toc自动生成简单易用\"><a class=\"markdownIt-Anchor\" href=\"#方法2使用vscode插件markdown-toc自动生成简单易用\"></a> 方法2:使用vscode插件:Markdown-toc自动生成（简单易用）</h3>\n<ul>\n<li>在vscode扩展中搜索 Markdown-toc,点击安装。</li>\n<li>进入vscode的系统设置settings,搜索eol,将换行设置为/n,这里我是linux系统设置为/n,windows系统设置为 /r/n 。</li>\n<li>然后回到markdown文档中，右键选择 Markdown toc:insert/update，即可根据标题自动生成目录</li>\n</ul>\n<h3 id=\"方法3使用markdown-all-in-one-支持的toc创建toc\"><a class=\"markdownIt-Anchor\" href=\"#方法3使用markdown-all-in-one-支持的toc创建toc\"></a> 方法3:使用markdown all in one 支持的toc创建toc</h3>\n<p>打开相应的文件，ctrl +shift+ p 调出命令行，搜索toc，执行Markdown:create content of table</p>\n<h2 id=\"2-原始格式输出\"><a class=\"markdownIt-Anchor\" href=\"#2-原始格式输出\"></a> 2. 原始格式输出</h2>\n<p>使用 ``` （ ` 位于esc的下面一个按键）将代码块包裹起来即可原始格式输出markdown，如下所示：</p>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```markdown</span></span><br><span class=\"line\"><span class=\"code\">  # 一级标题</span></span><br><span class=\"line\"><span class=\"code\">  ## 二级标题</span></span><br><span class=\"line\"><span class=\"code\">  ### 三级标题</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么使用flow流程图\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用flow流程图\"></a> 怎么使用flow流程图</h2>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#96;&#96;&#96;flow    </span><br><span class=\"line\">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 我的操作</span><br><span class=\"line\">cond&#x3D;&gt;condition: 确认？</span><br><span class=\"line\">op2&#x3D;&gt;operation: 操作2</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;这里写流程</span><br><span class=\"line\">st-&gt;op-&gt;cond-&gt;op2</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op2</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure>\n<p>显示如下所示(vscode需要使用MPE插件预览)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 我的操作</span><br><span class=\"line\">cond&#x3D;&gt;condition: 确认？</span><br><span class=\"line\">op2&#x3D;&gt;operation: 操作2</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;这里写流程</span><br><span class=\"line\">st-&gt;op-&gt;cond-&gt;op2</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op2</span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么使用math公式\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用math公式\"></a> 怎么使用math公式</h2>\n<ol>\n<li>矩阵使用：<br />\n<code>$这里单行公式$</code></li>\n</ol>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">这里添加多行公式</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi mathvariant=\"normal\">平</mi><mi mathvariant=\"normal\">移</mi><mi mathvariant=\"normal\">矩</mi><mi mathvariant=\"normal\">阵</mi><mi mathvariant=\"normal\">：</mi><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">  平移矩阵：M=\n  \\left[\\begin{matrix}\n   1 &amp; 0 &amp; 100 \\\\\n   0 &amp; 1 &amp; 100 \\\\\n  \\end{matrix} \\right]\\tag{A}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">平</span><span class=\"mord cjk_fallback\">移</span><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">阵</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">A</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<h2 id=\"怎么使用表格\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用表格\"></a> 怎么使用表格</h2>\n<p>实例如下，3列7行的表格：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| Column1 | Column2 | Column3 |</span><br><span class=\"line\">|---------|---------|---------|</span><br><span class=\"line\">| Row1    |         |         |</span><br><span class=\"line\">| Row2    | dfd     |         |</span><br><span class=\"line\">| Row3    |         |         |</span><br><span class=\"line\">| Row4    |         |         |</span><br><span class=\"line\">| Row5    |         |         |</span><br><span class=\"line\">| Row6    |         |         |</span><br><span class=\"line\">| Row7    |         |         |</span><br></pre></td></tr></table></figure>\n<p>显示如下：</p>\n<table>\n<thead>\n<tr>\n<th>Column1</th>\n<th>Column2</th>\n<th>Column3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Row1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row2</td>\n<td>dfd</td>\n<td></td>\n</tr>\n<tr>\n<td>Row3</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row4</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row5</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row6</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row7</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>相关的快捷键<br />\n<code>alt + m</code> 打开生成markdown结构的的菜单，选择table输入要生成的行列</p>\n<p><code>ctrl + d t</code> 均与分布表格单元格（相当于美化表格）</p>"},{"_content":"# windows下面有用的cmd指令\n\n### 1. 临时禁用键盘\n\n说明： 之前键盘坏了，敲键盘的的时候会一直输入字符k，于是使用卸载驱动的形式，将键盘禁用了，现在我只是想临时的想要禁用自己笔记本的键盘，便于在自己的键盘上放书或者本子什么的，方便阅读和外接键盘的输入。于是就搜到了如下的命令，解决自己的燃眉之急\n\n禁用键盘：sc config i8042prt start= disabled，重启\n\n恢复键盘：sc config i8042prt start= auto， 重启\n\n###  2. 将cpp文件编译生成的exe文件放在指定的位置\n\n需求说明：在编译单个cpp文件时，生成的exe文件总是放在当前文件夹下面，我花费了点心思，终于解决了将当前文件夹下面cpp编译生成的exe文件，放在当前文件下下面的build文件夹里面。\n\n修改Setting.json文件里面的\"code-runner.executorMap\".\"cpp\"的值为：\n\n```\n\"code-runner.executorMap\": {\n\t...\n    \"cpp\": \"cd $dir &&  (IF NOT EXIST build (md build) )  && g++ $fileName -o build\\\\$fileNameWithoutExt && $dir\\\\build\\\\$fileNameWithoutExt\",\n    ...\n}\n```\n\n\n\n上面其实就是将四句cmd命令合并成一句执行。\n\n```\ncd $dir     //进入到当前执行文件所在的文件夹\n\n( IF NOT EXIST build (md build)  )  //  当前文件夹下面如果不存在build文件夹就创建build文件夹\n\ng++ $fileName -o build\\\\$fileNameWithoutExt //编译当前文件并将编译结果放置在build文件夹下面\n\n$dir\\\\build\\\\$fileNameWithoutExt //执行已经编译好的可执行文件\n```\n\n\n\n\n\n\n\n","source":"_posts/软件与工具使用/window命令行笔记.md","raw":"# windows下面有用的cmd指令\n\n### 1. 临时禁用键盘\n\n说明： 之前键盘坏了，敲键盘的的时候会一直输入字符k，于是使用卸载驱动的形式，将键盘禁用了，现在我只是想临时的想要禁用自己笔记本的键盘，便于在自己的键盘上放书或者本子什么的，方便阅读和外接键盘的输入。于是就搜到了如下的命令，解决自己的燃眉之急\n\n禁用键盘：sc config i8042prt start= disabled，重启\n\n恢复键盘：sc config i8042prt start= auto， 重启\n\n###  2. 将cpp文件编译生成的exe文件放在指定的位置\n\n需求说明：在编译单个cpp文件时，生成的exe文件总是放在当前文件夹下面，我花费了点心思，终于解决了将当前文件夹下面cpp编译生成的exe文件，放在当前文件下下面的build文件夹里面。\n\n修改Setting.json文件里面的\"code-runner.executorMap\".\"cpp\"的值为：\n\n```\n\"code-runner.executorMap\": {\n\t...\n    \"cpp\": \"cd $dir &&  (IF NOT EXIST build (md build) )  && g++ $fileName -o build\\\\$fileNameWithoutExt && $dir\\\\build\\\\$fileNameWithoutExt\",\n    ...\n}\n```\n\n\n\n上面其实就是将四句cmd命令合并成一句执行。\n\n```\ncd $dir     //进入到当前执行文件所在的文件夹\n\n( IF NOT EXIST build (md build)  )  //  当前文件夹下面如果不存在build文件夹就创建build文件夹\n\ng++ $fileName -o build\\\\$fileNameWithoutExt //编译当前文件并将编译结果放置在build文件夹下面\n\n$dir\\\\build\\\\$fileNameWithoutExt //执行已经编译好的可执行文件\n```\n\n\n\n\n\n\n\n","slug":"软件与工具使用/window命令行笔记","published":1,"date":"2020-08-30T13:59:02.102Z","updated":"2020-08-30T14:21:03.575Z","title":"软件与工具使用/window命令行笔记","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llre000fj8g570h38del","content":"<h1 id=\"windows下面有用的cmd指令\"><a class=\"markdownIt-Anchor\" href=\"#windows下面有用的cmd指令\"></a> windows下面有用的cmd指令</h1>\n<h3 id=\"1-临时禁用键盘\"><a class=\"markdownIt-Anchor\" href=\"#1-临时禁用键盘\"></a> 1. 临时禁用键盘</h3>\n<p>说明： 之前键盘坏了，敲键盘的的时候会一直输入字符k，于是使用卸载驱动的形式，将键盘禁用了，现在我只是想临时的想要禁用自己笔记本的键盘，便于在自己的键盘上放书或者本子什么的，方便阅读和外接键盘的输入。于是就搜到了如下的命令，解决自己的燃眉之急</p>\n<p>禁用键盘：sc config i8042prt start= disabled，重启</p>\n<p>恢复键盘：sc config i8042prt start= auto， 重启</p>\n<h3 id=\"2-将cpp文件编译生成的exe文件放在指定的位置\"><a class=\"markdownIt-Anchor\" href=\"#2-将cpp文件编译生成的exe文件放在指定的位置\"></a> 2. 将cpp文件编译生成的exe文件放在指定的位置</h3>\n<p>需求说明：在编译单个cpp文件时，生成的exe文件总是放在当前文件夹下面，我花费了点心思，终于解决了将当前文件夹下面cpp编译生成的exe文件，放在当前文件下下面的build文件夹里面。</p>\n<p>修改Setting.json文件里面的&quot;code-runner.executorMap&quot;.&quot;cpp&quot;的值为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;code-runner.executorMap&quot;: &#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">    &quot;cpp&quot;: &quot;cd $dir &amp;&amp;  (IF NOT EXIST build (md build) )  &amp;&amp; g++ $fileName -o build\\\\$fileNameWithoutExt &amp;&amp; $dir\\\\build\\\\$fileNameWithoutExt&quot;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面其实就是将四句cmd命令合并成一句执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd $dir     &#x2F;&#x2F;进入到当前执行文件所在的文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">( IF NOT EXIST build (md build)  )  &#x2F;&#x2F;  当前文件夹下面如果不存在build文件夹就创建build文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">g++ $fileName -o build\\\\$fileNameWithoutExt &#x2F;&#x2F;编译当前文件并将编译结果放置在build文件夹下面</span><br><span class=\"line\"></span><br><span class=\"line\">$dir\\\\build\\\\$fileNameWithoutExt &#x2F;&#x2F;执行已经编译好的可执行文件</span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"1H2P0DK","length":896,"excerpt":"","more":"<h1 id=\"windows下面有用的cmd指令\"><a class=\"markdownIt-Anchor\" href=\"#windows下面有用的cmd指令\"></a> windows下面有用的cmd指令</h1>\n<h3 id=\"1-临时禁用键盘\"><a class=\"markdownIt-Anchor\" href=\"#1-临时禁用键盘\"></a> 1. 临时禁用键盘</h3>\n<p>说明： 之前键盘坏了，敲键盘的的时候会一直输入字符k，于是使用卸载驱动的形式，将键盘禁用了，现在我只是想临时的想要禁用自己笔记本的键盘，便于在自己的键盘上放书或者本子什么的，方便阅读和外接键盘的输入。于是就搜到了如下的命令，解决自己的燃眉之急</p>\n<p>禁用键盘：sc config i8042prt start= disabled，重启</p>\n<p>恢复键盘：sc config i8042prt start= auto， 重启</p>\n<h3 id=\"2-将cpp文件编译生成的exe文件放在指定的位置\"><a class=\"markdownIt-Anchor\" href=\"#2-将cpp文件编译生成的exe文件放在指定的位置\"></a> 2. 将cpp文件编译生成的exe文件放在指定的位置</h3>\n<p>需求说明：在编译单个cpp文件时，生成的exe文件总是放在当前文件夹下面，我花费了点心思，终于解决了将当前文件夹下面cpp编译生成的exe文件，放在当前文件下下面的build文件夹里面。</p>\n<p>修改Setting.json文件里面的&quot;code-runner.executorMap&quot;.&quot;cpp&quot;的值为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;code-runner.executorMap&quot;: &#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">    &quot;cpp&quot;: &quot;cd $dir &amp;&amp;  (IF NOT EXIST build (md build) )  &amp;&amp; g++ $fileName -o build\\\\$fileNameWithoutExt &amp;&amp; $dir\\\\build\\\\$fileNameWithoutExt&quot;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面其实就是将四句cmd命令合并成一句执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd $dir     &#x2F;&#x2F;进入到当前执行文件所在的文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">( IF NOT EXIST build (md build)  )  &#x2F;&#x2F;  当前文件夹下面如果不存在build文件夹就创建build文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">g++ $fileName -o build\\\\$fileNameWithoutExt &#x2F;&#x2F;编译当前文件并将编译结果放置在build文件夹下面</span><br><span class=\"line\"></span><br><span class=\"line\">$dir\\\\build\\\\$fileNameWithoutExt &#x2F;&#x2F;执行已经编译好的可执行文件</span><br></pre></td></tr></table></figure>\n"},{"_content":"# opencv基础\n\n[返回readme](../readme.md)\n\n\n## 图像处理基础\n\n### 图像的表示\n\n  二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。\n\n  灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。\n\n  彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反\n<!--more-->\n### 像素处理\n\n  [像素处理代码实现](opencv/像素处理.py)\n\n### 使用numpy.array访问元素\n\n  [代码实现](opencv/numpy.array访问元素.py)\n  \n  函数 item(行，列) 能高效访问图像的像素点\n  itemset(索引值，新值) 用来修改像素值\n\n### 感兴趣区域ROI 和 通道操作\n\n  [代码实现](opencv/ROI.py)\n\n  设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C\n\n  通道拆分 cv.split(img)\n\n  通道合并 cv.merge([b,g,r])\n\n### 获取图像属性\n\n  img.shape 返回包含行数，列数，通道数的数组\n\n  img.size  返回图像的像素数目\n\n  img.dtype 返回图像的数据类型\n\n## 图像运算\n\n### 加法\n\n  img1 + img2 ,遵循规则：\n  a+b = (a+b) % 256,即结果对256取膜\n\n  cv2.add(img1,img2) ,遵循规则：\n  a+b = min(a+b,255), 即和大于255时结果取255\n\n### 图像加权和\n\n  dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略\n  结果就是 dst = src * alpha +src2 *beta +gamma\n\n  加权和超过255，结果同样取255\n\n### 按位逻辑运算\n\n  cv2.bitwise_and() 与\n  cv2.bitwise_or()  或\n  cv2.bitwise_xor() 异或\n  cv2.bitwise_not() 非\n\n  跟 0 位与结果为 0 ，变成黑色\n  跟255位与结果是本身 ，颜色不变\n\n### 掩膜\n\n  使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0\n\n### 图像与数值运算\n\n  cv2.add(img,6) 参与运算的既可以是图片也可以是数值\n\n### 位平面分解\n\n  将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。\n  在8位灰度图中，可以组成8个二进制图像\n  [代码](opencv/位平面.py)\n\n### 图像加密和解密\n\n  通过按位异或运算可以实现图像的加密和解密\n\n  通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密\n\n  [代码实现](opencv/图像加密和解密.py)\n\n### 数字水印\n\n  最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。\n\n  在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。\n  这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能\n\n  分两步：\n    \n    嵌入过程\n      用数字水印信息将图像的最低有效位替换掉\n    \n    提取过程\n      提取出最低有效位的水印信息即可\n\n  [demo](opencv/数字水印.py)\n\n### 脸部打码以及解码\n\n  使用掩码和按位运算方式实现对脸部打码和解码实例\n  [demo](opencv/脸部打码以及解码.py)\n\n## 色彩空间类型转换\n\n  色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像\n\n### 色彩空间基础\n\n  比较常见的色彩空间：\n  \n  - GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： `GRAY =0.299×R +0.587*G +0.114*B`\n  - XYZ色彩空间，一中便于计算的色彩空间\n  - YCrCb色彩空间\n  - HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value\n  - HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation\n\n\n### 类型转换函数、HSV色彩空间讨论、alpha通道\n\n  [demo](oepncv/类型转换.py)\n  \n  dst = cv2.cvtColor(src,code,[,dstcn])\n  \n    code表示色彩空间转换码\n    dstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n\n  alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明\n  \n\n\n## **几何变换**\n\n### **缩放**\n\n  ```md\n  dst = cv.resize(src,dsize , fx,fy,interpolation)\n    src:缩放的原始图像\n    dsize：输出图像大小\n    fx：水平方向的缩放比例\n    fy:垂直方向的缩放比例\n    interpolation：代表插值方式\n      缩放图像时，INTER_AREA能达到最好效果\n      放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果  \n  ```\n  \n\n### **旋转**\n\n  ```\n  dst = cv2.flip(src,flipCode)\n    flipCode 旋转类型：\n    0，绕x轴旋转\n    正数，绕y轴旋转\n    负数，绕x，y同时旋转\n  ```\n\n### **仿射**\n\n  仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作\n\n  该变换能够保持图像的平直性和平行性\n  \n  仿射 = 平移 + 旋转 \n\n```md\n  dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)\n  M:代表一个2x3的变换矩阵\n  dsize:代表输出图像的尺寸大小\n  flags:代表插值方式，默认INTER_LINEAR\n  borderMode:代表边类型\n\n  borderValue:代表边界值，默认0\n  ```\n  \n### **透视**\n\n### **重映射**\n\n## **阈值处理**\n\n### **threldhold函数**\n\n### **自适应阈值处理**\n\n### **otsu处理**\n\n## **图像平滑处理**\n\n### **均值滤  波**\n\n### **方框滤波**\n\n### **高斯滤波**\n\n### **中值滤波**\n\n### **双边滤波**\n\n### **2D 卷积**\n\n## **形态学操作**\n\n### **腐蚀**\n\n### **膨胀**\n\n### **通用形态学函数**\n\n### **开运算**\n\n### **闭运算**\n\n### **形态学梯度运算**\n\n### **礼貌运算**\n\n### **黑帽运算**\n\n### **核函数**\n\n## **图像梯度**\n\n### **sobel 理论基础**\n\n### **sobel算子及函数使用**\n\n### **scharr 算子及函数使用**\n\n### **Laplacian 算子及函数使用**\n\n### **算子总结**\n\n## **canny边缘检测**\n\n### **canny边缘检测理论**\n\n### **canny函数及使用**\n\n## **图像金字塔**\n\n### **理论基础**\n\n### **pyrDown函数及使用**\n\n### **采样可逆行研究**\n\n### **拉普拉斯金字塔**\n\n## **图像轮廓**\n\n### **查找并绘制轮廓**\n\n### **矩特征**\n\n### **hu钜**\n\n### **轮廓拟合**\n\n### **凸包**\n\n### **利用形状场景算法比较轮廓**\n\n### **轮廓的特征值**\n\n## **傅里叶变换**\n\n### **理论基础**\n\n### **实现**\n\n## **模板匹配**\n\n### **模板匹配基础**\n\n### **多模板匹配**\n\n## **霍夫变换**\n\n### 霍夫直线变换\n\n### **霍夫圆形变换**\n\n## **图像分割与提取**\n\n### **用分水岭算法实现图像分割**\n\n### **交互式前景提取**\n\n## **视频处理**\n\n### **VideoCapture类**\n\n### **ViedeoWriter类**\n\n### **视频操作基础**\n\n## **绘图机交互**\n\n### **绘图基础**\n\n### **鼠标交互**\n\n### **滚动条**\n\n## **k近邻算法**\n\n### **理论基础**\n\n### **计算**\n\n### **手写数字识别原理**\n\n### **自定义函数手写数字识别**\n\n### **k近邻模块的基本使用**\n\n### **K 近邻手写板数字的识别**\nK\nK**\nK\nK*\nK\n### **svm案例介绍**\n\n## **k均值聚类**\n\n","source":"_posts/深度学习/opencv.md","raw":"# opencv基础\n\n[返回readme](../readme.md)\n\n\n## 图像处理基础\n\n### 图像的表示\n\n  二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。\n\n  灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。\n\n  彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反\n<!--more-->\n### 像素处理\n\n  [像素处理代码实现](opencv/像素处理.py)\n\n### 使用numpy.array访问元素\n\n  [代码实现](opencv/numpy.array访问元素.py)\n  \n  函数 item(行，列) 能高效访问图像的像素点\n  itemset(索引值，新值) 用来修改像素值\n\n### 感兴趣区域ROI 和 通道操作\n\n  [代码实现](opencv/ROI.py)\n\n  设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C\n\n  通道拆分 cv.split(img)\n\n  通道合并 cv.merge([b,g,r])\n\n### 获取图像属性\n\n  img.shape 返回包含行数，列数，通道数的数组\n\n  img.size  返回图像的像素数目\n\n  img.dtype 返回图像的数据类型\n\n## 图像运算\n\n### 加法\n\n  img1 + img2 ,遵循规则：\n  a+b = (a+b) % 256,即结果对256取膜\n\n  cv2.add(img1,img2) ,遵循规则：\n  a+b = min(a+b,255), 即和大于255时结果取255\n\n### 图像加权和\n\n  dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略\n  结果就是 dst = src * alpha +src2 *beta +gamma\n\n  加权和超过255，结果同样取255\n\n### 按位逻辑运算\n\n  cv2.bitwise_and() 与\n  cv2.bitwise_or()  或\n  cv2.bitwise_xor() 异或\n  cv2.bitwise_not() 非\n\n  跟 0 位与结果为 0 ，变成黑色\n  跟255位与结果是本身 ，颜色不变\n\n### 掩膜\n\n  使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0\n\n### 图像与数值运算\n\n  cv2.add(img,6) 参与运算的既可以是图片也可以是数值\n\n### 位平面分解\n\n  将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。\n  在8位灰度图中，可以组成8个二进制图像\n  [代码](opencv/位平面.py)\n\n### 图像加密和解密\n\n  通过按位异或运算可以实现图像的加密和解密\n\n  通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密\n\n  [代码实现](opencv/图像加密和解密.py)\n\n### 数字水印\n\n  最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。\n\n  在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。\n  这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能\n\n  分两步：\n    \n    嵌入过程\n      用数字水印信息将图像的最低有效位替换掉\n    \n    提取过程\n      提取出最低有效位的水印信息即可\n\n  [demo](opencv/数字水印.py)\n\n### 脸部打码以及解码\n\n  使用掩码和按位运算方式实现对脸部打码和解码实例\n  [demo](opencv/脸部打码以及解码.py)\n\n## 色彩空间类型转换\n\n  色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像\n\n### 色彩空间基础\n\n  比较常见的色彩空间：\n  \n  - GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： `GRAY =0.299×R +0.587*G +0.114*B`\n  - XYZ色彩空间，一中便于计算的色彩空间\n  - YCrCb色彩空间\n  - HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value\n  - HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation\n\n\n### 类型转换函数、HSV色彩空间讨论、alpha通道\n\n  [demo](oepncv/类型转换.py)\n  \n  dst = cv2.cvtColor(src,code,[,dstcn])\n  \n    code表示色彩空间转换码\n    dstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n\n  alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明\n  \n\n\n## **几何变换**\n\n### **缩放**\n\n  ```md\n  dst = cv.resize(src,dsize , fx,fy,interpolation)\n    src:缩放的原始图像\n    dsize：输出图像大小\n    fx：水平方向的缩放比例\n    fy:垂直方向的缩放比例\n    interpolation：代表插值方式\n      缩放图像时，INTER_AREA能达到最好效果\n      放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果  \n  ```\n  \n\n### **旋转**\n\n  ```\n  dst = cv2.flip(src,flipCode)\n    flipCode 旋转类型：\n    0，绕x轴旋转\n    正数，绕y轴旋转\n    负数，绕x，y同时旋转\n  ```\n\n### **仿射**\n\n  仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作\n\n  该变换能够保持图像的平直性和平行性\n  \n  仿射 = 平移 + 旋转 \n\n```md\n  dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)\n  M:代表一个2x3的变换矩阵\n  dsize:代表输出图像的尺寸大小\n  flags:代表插值方式，默认INTER_LINEAR\n  borderMode:代表边类型\n\n  borderValue:代表边界值，默认0\n  ```\n  \n### **透视**\n\n### **重映射**\n\n## **阈值处理**\n\n### **threldhold函数**\n\n### **自适应阈值处理**\n\n### **otsu处理**\n\n## **图像平滑处理**\n\n### **均值滤  波**\n\n### **方框滤波**\n\n### **高斯滤波**\n\n### **中值滤波**\n\n### **双边滤波**\n\n### **2D 卷积**\n\n## **形态学操作**\n\n### **腐蚀**\n\n### **膨胀**\n\n### **通用形态学函数**\n\n### **开运算**\n\n### **闭运算**\n\n### **形态学梯度运算**\n\n### **礼貌运算**\n\n### **黑帽运算**\n\n### **核函数**\n\n## **图像梯度**\n\n### **sobel 理论基础**\n\n### **sobel算子及函数使用**\n\n### **scharr 算子及函数使用**\n\n### **Laplacian 算子及函数使用**\n\n### **算子总结**\n\n## **canny边缘检测**\n\n### **canny边缘检测理论**\n\n### **canny函数及使用**\n\n## **图像金字塔**\n\n### **理论基础**\n\n### **pyrDown函数及使用**\n\n### **采样可逆行研究**\n\n### **拉普拉斯金字塔**\n\n## **图像轮廓**\n\n### **查找并绘制轮廓**\n\n### **矩特征**\n\n### **hu钜**\n\n### **轮廓拟合**\n\n### **凸包**\n\n### **利用形状场景算法比较轮廓**\n\n### **轮廓的特征值**\n\n## **傅里叶变换**\n\n### **理论基础**\n\n### **实现**\n\n## **模板匹配**\n\n### **模板匹配基础**\n\n### **多模板匹配**\n\n## **霍夫变换**\n\n### 霍夫直线变换\n\n### **霍夫圆形变换**\n\n## **图像分割与提取**\n\n### **用分水岭算法实现图像分割**\n\n### **交互式前景提取**\n\n## **视频处理**\n\n### **VideoCapture类**\n\n### **ViedeoWriter类**\n\n### **视频操作基础**\n\n## **绘图机交互**\n\n### **绘图基础**\n\n### **鼠标交互**\n\n### **滚动条**\n\n## **k近邻算法**\n\n### **理论基础**\n\n### **计算**\n\n### **手写数字识别原理**\n\n### **自定义函数手写数字识别**\n\n### **k近邻模块的基本使用**\n\n### **K 近邻手写板数字的识别**\nK\nK**\nK\nK*\nK\n### **svm案例介绍**\n\n## **k均值聚类**\n\n","slug":"深度学习/opencv","published":1,"date":"2020-06-18T12:37:48.335Z","updated":"2020-06-18T12:37:48.335Z","title":"深度学习/opencv","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llre000gj8g5bn5u1osn","content":"<h1 id=\"opencv基础\"><a class=\"markdownIt-Anchor\" href=\"#opencv基础\"></a> opencv基础</h1>\n<p><a href=\"../readme.md\">返回readme</a></p>\n<h2 id=\"图像处理基础\"><a class=\"markdownIt-Anchor\" href=\"#图像处理基础\"></a> 图像处理基础</h2>\n<h3 id=\"图像的表示\"><a class=\"markdownIt-Anchor\" href=\"#图像的表示\"></a> 图像的表示</h3>\n<p>二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。</p>\n<p>灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。</p>\n<p>彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反</p>\n<a id=\"more\"></a>\n<h3 id=\"像素处理\"><a class=\"markdownIt-Anchor\" href=\"#像素处理\"></a> 像素处理</h3>\n<p><a href=\"opencv/%E5%83%8F%E7%B4%A0%E5%A4%84%E7%90%86.py\">像素处理代码实现</a></p>\n<h3 id=\"使用numpyarray访问元素\"><a class=\"markdownIt-Anchor\" href=\"#使用numpyarray访问元素\"></a> 使用numpy.array访问元素</h3>\n<p><a href=\"opencv/numpy.array%E8%AE%BF%E9%97%AE%E5%85%83%E7%B4%A0.py\">代码实现</a></p>\n<p>函数 item(行，列) 能高效访问图像的像素点<br />\nitemset(索引值，新值) 用来修改像素值</p>\n<h3 id=\"感兴趣区域roi-和-通道操作\"><a class=\"markdownIt-Anchor\" href=\"#感兴趣区域roi-和-通道操作\"></a> 感兴趣区域ROI 和 通道操作</h3>\n<p><a href=\"opencv/ROI.py\">代码实现</a></p>\n<p>设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C</p>\n<p>通道拆分 cv.split(img)</p>\n<p>通道合并 cv.merge([b,g,r])</p>\n<h3 id=\"获取图像属性\"><a class=\"markdownIt-Anchor\" href=\"#获取图像属性\"></a> 获取图像属性</h3>\n<p>img.shape 返回包含行数，列数，通道数的数组</p>\n<p>img.size  返回图像的像素数目</p>\n<p>img.dtype 返回图像的数据类型</p>\n<h2 id=\"图像运算\"><a class=\"markdownIt-Anchor\" href=\"#图像运算\"></a> 图像运算</h2>\n<h3 id=\"加法\"><a class=\"markdownIt-Anchor\" href=\"#加法\"></a> 加法</h3>\n<p>img1 + img2 ,遵循规则：<br />\na+b = (a+b) % 256,即结果对256取膜</p>\n<p>cv2.add(img1,img2) ,遵循规则：<br />\na+b = min(a+b,255), 即和大于255时结果取255</p>\n<h3 id=\"图像加权和\"><a class=\"markdownIt-Anchor\" href=\"#图像加权和\"></a> 图像加权和</h3>\n<p>dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略<br />\n结果就是 dst = src * alpha +src2 *beta +gamma</p>\n<p>加权和超过255，结果同样取255</p>\n<h3 id=\"按位逻辑运算\"><a class=\"markdownIt-Anchor\" href=\"#按位逻辑运算\"></a> 按位逻辑运算</h3>\n<p>cv2.bitwise_and() 与<br />\ncv2.bitwise_or()  或<br />\ncv2.bitwise_xor() 异或<br />\ncv2.bitwise_not() 非</p>\n<p>跟 0 位与结果为 0 ，变成黑色<br />\n跟255位与结果是本身 ，颜色不变</p>\n<h3 id=\"掩膜\"><a class=\"markdownIt-Anchor\" href=\"#掩膜\"></a> 掩膜</h3>\n<p>使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0</p>\n<h3 id=\"图像与数值运算\"><a class=\"markdownIt-Anchor\" href=\"#图像与数值运算\"></a> 图像与数值运算</h3>\n<p>cv2.add(img,6) 参与运算的既可以是图片也可以是数值</p>\n<h3 id=\"位平面分解\"><a class=\"markdownIt-Anchor\" href=\"#位平面分解\"></a> 位平面分解</h3>\n<p>将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。<br />\n在8位灰度图中，可以组成8个二进制图像<br />\n<a href=\"opencv/%E4%BD%8D%E5%B9%B3%E9%9D%A2.py\">代码</a></p>\n<h3 id=\"图像加密和解密\"><a class=\"markdownIt-Anchor\" href=\"#图像加密和解密\"></a> 图像加密和解密</h3>\n<p>通过按位异或运算可以实现图像的加密和解密</p>\n<p>通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密</p>\n<p><a href=\"opencv/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86.py\">代码实现</a></p>\n<h3 id=\"数字水印\"><a class=\"markdownIt-Anchor\" href=\"#数字水印\"></a> 数字水印</h3>\n<p>最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。</p>\n<p>在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。<br />\n这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能</p>\n<p>分两步：</p>\n<pre><code>嵌入过程\n  用数字水印信息将图像的最低有效位替换掉\n\n提取过程\n  提取出最低有效位的水印信息即可\n</code></pre>\n<p><a href=\"opencv/%E6%95%B0%E5%AD%97%E6%B0%B4%E5%8D%B0.py\">demo</a></p>\n<h3 id=\"脸部打码以及解码\"><a class=\"markdownIt-Anchor\" href=\"#脸部打码以及解码\"></a> 脸部打码以及解码</h3>\n<p>使用掩码和按位运算方式实现对脸部打码和解码实例<br />\n<a href=\"opencv/%E8%84%B8%E9%83%A8%E6%89%93%E7%A0%81%E4%BB%A5%E5%8F%8A%E8%A7%A3%E7%A0%81.py\">demo</a></p>\n<h2 id=\"色彩空间类型转换\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间类型转换\"></a> 色彩空间类型转换</h2>\n<p>色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像</p>\n<h3 id=\"色彩空间基础\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间基础\"></a> 色彩空间基础</h3>\n<p>比较常见的色彩空间：</p>\n<ul>\n<li>GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： <code>GRAY =0.299×R +0.587*G +0.114*B</code></li>\n<li>XYZ色彩空间，一中便于计算的色彩空间</li>\n<li>YCrCb色彩空间</li>\n<li>HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value</li>\n<li>HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation</li>\n</ul>\n<h3 id=\"类型转换函数-hsv色彩空间讨论-alpha通道\"><a class=\"markdownIt-Anchor\" href=\"#类型转换函数-hsv色彩空间讨论-alpha通道\"></a> 类型转换函数、HSV色彩空间讨论、alpha通道</h3>\n<p><a href=\"oepncv/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.py\">demo</a></p>\n<p>dst = cv2.cvtColor(src,code,[,dstcn])</p>\n<pre><code>code表示色彩空间转换码\ndstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n</code></pre>\n<p>alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明</p>\n<h2 id=\"几何变换\"><a class=\"markdownIt-Anchor\" href=\"#几何变换\"></a> <strong>几何变换</strong></h2>\n<h3 id=\"缩放\"><a class=\"markdownIt-Anchor\" href=\"#缩放\"></a> <strong>缩放</strong></h3>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv.resize(src,dsize , fx,fy,interpolation)</span><br><span class=\"line\">  src:缩放的原始图像</span><br><span class=\"line\">  dsize：输出图像大小</span><br><span class=\"line\">  fx：水平方向的缩放比例</span><br><span class=\"line\">  fy:垂直方向的缩放比例</span><br><span class=\"line\">  interpolation：代表插值方式</span><br><span class=\"line\"><span class=\"code\">    缩放图像时，INTER_AREA能达到最好效果</span></span><br><span class=\"line\"><span class=\"code\">    放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"旋转\"><a class=\"markdownIt-Anchor\" href=\"#旋转\"></a> <strong>旋转</strong></h3>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst &#x3D; cv2.flip(src,flipCode)</span><br><span class=\"line\">  flipCode 旋转类型：</span><br><span class=\"line\">  0，绕x轴旋转</span><br><span class=\"line\">  正数，绕y轴旋转</span><br><span class=\"line\">  负数，绕x，y同时旋转</span><br></pre></td></tr></table></figure>\n<h3 id=\"仿射\"><a class=\"markdownIt-Anchor\" href=\"#仿射\"></a> <strong>仿射</strong></h3>\n<p>仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作</p>\n<p>该变换能够保持图像的平直性和平行性</p>\n<p>仿射 = 平移 + 旋转</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)</span><br><span class=\"line\">M:代表一个2x3的变换矩阵</span><br><span class=\"line\">dsize:代表输出图像的尺寸大小</span><br><span class=\"line\">flags:代表插值方式，默认INTER_LINEAR</span><br><span class=\"line\">borderMode:代表边类型</span><br><span class=\"line\"></span><br><span class=\"line\">borderValue:代表边界值，默认0</span><br></pre></td></tr></table></figure>\n<h3 id=\"透视\"><a class=\"markdownIt-Anchor\" href=\"#透视\"></a> <strong>透视</strong></h3>\n<h3 id=\"重映射\"><a class=\"markdownIt-Anchor\" href=\"#重映射\"></a> <strong>重映射</strong></h3>\n<h2 id=\"阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#阈值处理\"></a> <strong>阈值处理</strong></h2>\n<h3 id=\"threldhold函数\"><a class=\"markdownIt-Anchor\" href=\"#threldhold函数\"></a> <strong>threldhold函数</strong></h3>\n<h3 id=\"自适应阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#自适应阈值处理\"></a> <strong>自适应阈值处理</strong></h3>\n<h3 id=\"otsu处理\"><a class=\"markdownIt-Anchor\" href=\"#otsu处理\"></a> <strong>otsu处理</strong></h3>\n<h2 id=\"图像平滑处理\"><a class=\"markdownIt-Anchor\" href=\"#图像平滑处理\"></a> <strong>图像平滑处理</strong></h2>\n<h3 id=\"均值滤-波\"><a class=\"markdownIt-Anchor\" href=\"#均值滤-波\"></a> <strong>均值滤  波</strong></h3>\n<h3 id=\"方框滤波\"><a class=\"markdownIt-Anchor\" href=\"#方框滤波\"></a> <strong>方框滤波</strong></h3>\n<h3 id=\"高斯滤波\"><a class=\"markdownIt-Anchor\" href=\"#高斯滤波\"></a> <strong>高斯滤波</strong></h3>\n<h3 id=\"中值滤波\"><a class=\"markdownIt-Anchor\" href=\"#中值滤波\"></a> <strong>中值滤波</strong></h3>\n<h3 id=\"双边滤波\"><a class=\"markdownIt-Anchor\" href=\"#双边滤波\"></a> <strong>双边滤波</strong></h3>\n<h3 id=\"2d-卷积\"><a class=\"markdownIt-Anchor\" href=\"#2d-卷积\"></a> <strong>2D 卷积</strong></h3>\n<h2 id=\"形态学操作\"><a class=\"markdownIt-Anchor\" href=\"#形态学操作\"></a> <strong>形态学操作</strong></h2>\n<h3 id=\"腐蚀\"><a class=\"markdownIt-Anchor\" href=\"#腐蚀\"></a> <strong>腐蚀</strong></h3>\n<h3 id=\"膨胀\"><a class=\"markdownIt-Anchor\" href=\"#膨胀\"></a> <strong>膨胀</strong></h3>\n<h3 id=\"通用形态学函数\"><a class=\"markdownIt-Anchor\" href=\"#通用形态学函数\"></a> <strong>通用形态学函数</strong></h3>\n<h3 id=\"开运算\"><a class=\"markdownIt-Anchor\" href=\"#开运算\"></a> <strong>开运算</strong></h3>\n<h3 id=\"闭运算\"><a class=\"markdownIt-Anchor\" href=\"#闭运算\"></a> <strong>闭运算</strong></h3>\n<h3 id=\"形态学梯度运算\"><a class=\"markdownIt-Anchor\" href=\"#形态学梯度运算\"></a> <strong>形态学梯度运算</strong></h3>\n<h3 id=\"礼貌运算\"><a class=\"markdownIt-Anchor\" href=\"#礼貌运算\"></a> <strong>礼貌运算</strong></h3>\n<h3 id=\"黑帽运算\"><a class=\"markdownIt-Anchor\" href=\"#黑帽运算\"></a> <strong>黑帽运算</strong></h3>\n<h3 id=\"核函数\"><a class=\"markdownIt-Anchor\" href=\"#核函数\"></a> <strong>核函数</strong></h3>\n<h2 id=\"图像梯度\"><a class=\"markdownIt-Anchor\" href=\"#图像梯度\"></a> <strong>图像梯度</strong></h2>\n<h3 id=\"sobel-理论基础\"><a class=\"markdownIt-Anchor\" href=\"#sobel-理论基础\"></a> <strong>sobel 理论基础</strong></h3>\n<h3 id=\"sobel算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#sobel算子及函数使用\"></a> <strong>sobel算子及函数使用</strong></h3>\n<h3 id=\"scharr-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#scharr-算子及函数使用\"></a> <strong>scharr 算子及函数使用</strong></h3>\n<h3 id=\"laplacian-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#laplacian-算子及函数使用\"></a> <strong>Laplacian 算子及函数使用</strong></h3>\n<h3 id=\"算子总结\"><a class=\"markdownIt-Anchor\" href=\"#算子总结\"></a> <strong>算子总结</strong></h3>\n<h2 id=\"canny边缘检测\"><a class=\"markdownIt-Anchor\" href=\"#canny边缘检测\"></a> <strong>canny边缘检测</strong></h2>\n<h3 id=\"canny边缘检测理论\"><a class=\"markdownIt-Anchor\" href=\"#canny边缘检测理论\"></a> <strong>canny边缘检测理论</strong></h3>\n<h3 id=\"canny函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#canny函数及使用\"></a> <strong>canny函数及使用</strong></h3>\n<h2 id=\"图像金字塔\"><a class=\"markdownIt-Anchor\" href=\"#图像金字塔\"></a> <strong>图像金字塔</strong></h2>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"pyrdown函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#pyrdown函数及使用\"></a> <strong>pyrDown函数及使用</strong></h3>\n<h3 id=\"采样可逆行研究\"><a class=\"markdownIt-Anchor\" href=\"#采样可逆行研究\"></a> <strong>采样可逆行研究</strong></h3>\n<h3 id=\"拉普拉斯金字塔\"><a class=\"markdownIt-Anchor\" href=\"#拉普拉斯金字塔\"></a> <strong>拉普拉斯金字塔</strong></h3>\n<h2 id=\"图像轮廓\"><a class=\"markdownIt-Anchor\" href=\"#图像轮廓\"></a> <strong>图像轮廓</strong></h2>\n<h3 id=\"查找并绘制轮廓\"><a class=\"markdownIt-Anchor\" href=\"#查找并绘制轮廓\"></a> <strong>查找并绘制轮廓</strong></h3>\n<h3 id=\"矩特征\"><a class=\"markdownIt-Anchor\" href=\"#矩特征\"></a> <strong>矩特征</strong></h3>\n<h3 id=\"hu钜\"><a class=\"markdownIt-Anchor\" href=\"#hu钜\"></a> <strong>hu钜</strong></h3>\n<h3 id=\"轮廓拟合\"><a class=\"markdownIt-Anchor\" href=\"#轮廓拟合\"></a> <strong>轮廓拟合</strong></h3>\n<h3 id=\"凸包\"><a class=\"markdownIt-Anchor\" href=\"#凸包\"></a> <strong>凸包</strong></h3>\n<h3 id=\"利用形状场景算法比较轮廓\"><a class=\"markdownIt-Anchor\" href=\"#利用形状场景算法比较轮廓\"></a> <strong>利用形状场景算法比较轮廓</strong></h3>\n<h3 id=\"轮廓的特征值\"><a class=\"markdownIt-Anchor\" href=\"#轮廓的特征值\"></a> <strong>轮廓的特征值</strong></h3>\n<h2 id=\"傅里叶变换\"><a class=\"markdownIt-Anchor\" href=\"#傅里叶变换\"></a> <strong>傅里叶变换</strong></h2>\n<h3 id=\"理论基础-2\"><a class=\"markdownIt-Anchor\" href=\"#理论基础-2\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\"></a> <strong>实现</strong></h3>\n<h2 id=\"模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配\"></a> <strong>模板匹配</strong></h2>\n<h3 id=\"模板匹配基础\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配基础\"></a> <strong>模板匹配基础</strong></h3>\n<h3 id=\"多模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#多模板匹配\"></a> <strong>多模板匹配</strong></h3>\n<h2 id=\"霍夫变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫变换\"></a> <strong>霍夫变换</strong></h2>\n<h3 id=\"霍夫直线变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫直线变换\"></a> 霍夫直线变换</h3>\n<h3 id=\"霍夫圆形变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫圆形变换\"></a> <strong>霍夫圆形变换</strong></h3>\n<h2 id=\"图像分割与提取\"><a class=\"markdownIt-Anchor\" href=\"#图像分割与提取\"></a> <strong>图像分割与提取</strong></h2>\n<h3 id=\"用分水岭算法实现图像分割\"><a class=\"markdownIt-Anchor\" href=\"#用分水岭算法实现图像分割\"></a> <strong>用分水岭算法实现图像分割</strong></h3>\n<h3 id=\"交互式前景提取\"><a class=\"markdownIt-Anchor\" href=\"#交互式前景提取\"></a> <strong>交互式前景提取</strong></h3>\n<h2 id=\"视频处理\"><a class=\"markdownIt-Anchor\" href=\"#视频处理\"></a> <strong>视频处理</strong></h2>\n<h3 id=\"videocapture类\"><a class=\"markdownIt-Anchor\" href=\"#videocapture类\"></a> <strong>VideoCapture类</strong></h3>\n<h3 id=\"viedeowriter类\"><a class=\"markdownIt-Anchor\" href=\"#viedeowriter类\"></a> <strong>ViedeoWriter类</strong></h3>\n<h3 id=\"视频操作基础\"><a class=\"markdownIt-Anchor\" href=\"#视频操作基础\"></a> <strong>视频操作基础</strong></h3>\n<h2 id=\"绘图机交互\"><a class=\"markdownIt-Anchor\" href=\"#绘图机交互\"></a> <strong>绘图机交互</strong></h2>\n<h3 id=\"绘图基础\"><a class=\"markdownIt-Anchor\" href=\"#绘图基础\"></a> <strong>绘图基础</strong></h3>\n<h3 id=\"鼠标交互\"><a class=\"markdownIt-Anchor\" href=\"#鼠标交互\"></a> <strong>鼠标交互</strong></h3>\n<h3 id=\"滚动条\"><a class=\"markdownIt-Anchor\" href=\"#滚动条\"></a> <strong>滚动条</strong></h3>\n<h2 id=\"k近邻算法\"><a class=\"markdownIt-Anchor\" href=\"#k近邻算法\"></a> <strong>k近邻算法</strong></h2>\n<h3 id=\"理论基础-3\"><a class=\"markdownIt-Anchor\" href=\"#理论基础-3\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"计算\"><a class=\"markdownIt-Anchor\" href=\"#计算\"></a> <strong>计算</strong></h3>\n<h3 id=\"手写数字识别原理\"><a class=\"markdownIt-Anchor\" href=\"#手写数字识别原理\"></a> <strong>手写数字识别原理</strong></h3>\n<h3 id=\"自定义函数手写数字识别\"><a class=\"markdownIt-Anchor\" href=\"#自定义函数手写数字识别\"></a> <strong>自定义函数手写数字识别</strong></h3>\n<h3 id=\"k近邻模块的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#k近邻模块的基本使用\"></a> <strong>k近邻模块的基本使用</strong></h3>\n<h3 id=\"k-近邻手写板数字的识别\"><a class=\"markdownIt-Anchor\" href=\"#k-近邻手写板数字的识别\"></a> <strong>K 近邻手写板数字的识别</strong></h3>\n<p>K<br />\nK**<br />\nK<br />\nK*<br />\nK</p>\n<h3 id=\"svm案例介绍\"><a class=\"markdownIt-Anchor\" href=\"#svm案例介绍\"></a> <strong>svm案例介绍</strong></h3>\n<h2 id=\"k均值聚类\"><a class=\"markdownIt-Anchor\" href=\"#k均值聚类\"></a> <strong>k均值聚类</strong></h2>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"1Z0HGP1","length":2828,"excerpt":"<h1 id=\"opencv基础\"><a class=\"markdownIt-Anchor\" href=\"#opencv基础\"></a> opencv基础</h1>\n<p><a href=\"../readme.md\">返回readme</a></p>\n<h2 id=\"图像处理基础\"><a class=\"markdownIt-Anchor\" href=\"#图像处理基础\"></a> 图像处理基础</h2>\n<h3 id=\"图像的表示\"><a class=\"markdownIt-Anchor\" href=\"#图像的表示\"></a> 图像的表示</h3>\n<p>二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。</p>\n<p>灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。</p>\n<p>彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反</p>","more":"<h3 id=\"像素处理\"><a class=\"markdownIt-Anchor\" href=\"#像素处理\"></a> 像素处理</h3>\n<p><a href=\"opencv/%E5%83%8F%E7%B4%A0%E5%A4%84%E7%90%86.py\">像素处理代码实现</a></p>\n<h3 id=\"使用numpyarray访问元素\"><a class=\"markdownIt-Anchor\" href=\"#使用numpyarray访问元素\"></a> 使用numpy.array访问元素</h3>\n<p><a href=\"opencv/numpy.array%E8%AE%BF%E9%97%AE%E5%85%83%E7%B4%A0.py\">代码实现</a></p>\n<p>函数 item(行，列) 能高效访问图像的像素点<br />\nitemset(索引值，新值) 用来修改像素值</p>\n<h3 id=\"感兴趣区域roi-和-通道操作\"><a class=\"markdownIt-Anchor\" href=\"#感兴趣区域roi-和-通道操作\"></a> 感兴趣区域ROI 和 通道操作</h3>\n<p><a href=\"opencv/ROI.py\">代码实现</a></p>\n<p>设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C</p>\n<p>通道拆分 cv.split(img)</p>\n<p>通道合并 cv.merge([b,g,r])</p>\n<h3 id=\"获取图像属性\"><a class=\"markdownIt-Anchor\" href=\"#获取图像属性\"></a> 获取图像属性</h3>\n<p>img.shape 返回包含行数，列数，通道数的数组</p>\n<p>img.size  返回图像的像素数目</p>\n<p>img.dtype 返回图像的数据类型</p>\n<h2 id=\"图像运算\"><a class=\"markdownIt-Anchor\" href=\"#图像运算\"></a> 图像运算</h2>\n<h3 id=\"加法\"><a class=\"markdownIt-Anchor\" href=\"#加法\"></a> 加法</h3>\n<p>img1 + img2 ,遵循规则：<br />\na+b = (a+b) % 256,即结果对256取膜</p>\n<p>cv2.add(img1,img2) ,遵循规则：<br />\na+b = min(a+b,255), 即和大于255时结果取255</p>\n<h3 id=\"图像加权和\"><a class=\"markdownIt-Anchor\" href=\"#图像加权和\"></a> 图像加权和</h3>\n<p>dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略<br />\n结果就是 dst = src * alpha +src2 *beta +gamma</p>\n<p>加权和超过255，结果同样取255</p>\n<h3 id=\"按位逻辑运算\"><a class=\"markdownIt-Anchor\" href=\"#按位逻辑运算\"></a> 按位逻辑运算</h3>\n<p>cv2.bitwise_and() 与<br />\ncv2.bitwise_or()  或<br />\ncv2.bitwise_xor() 异或<br />\ncv2.bitwise_not() 非</p>\n<p>跟 0 位与结果为 0 ，变成黑色<br />\n跟255位与结果是本身 ，颜色不变</p>\n<h3 id=\"掩膜\"><a class=\"markdownIt-Anchor\" href=\"#掩膜\"></a> 掩膜</h3>\n<p>使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0</p>\n<h3 id=\"图像与数值运算\"><a class=\"markdownIt-Anchor\" href=\"#图像与数值运算\"></a> 图像与数值运算</h3>\n<p>cv2.add(img,6) 参与运算的既可以是图片也可以是数值</p>\n<h3 id=\"位平面分解\"><a class=\"markdownIt-Anchor\" href=\"#位平面分解\"></a> 位平面分解</h3>\n<p>将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。<br />\n在8位灰度图中，可以组成8个二进制图像<br />\n<a href=\"opencv/%E4%BD%8D%E5%B9%B3%E9%9D%A2.py\">代码</a></p>\n<h3 id=\"图像加密和解密\"><a class=\"markdownIt-Anchor\" href=\"#图像加密和解密\"></a> 图像加密和解密</h3>\n<p>通过按位异或运算可以实现图像的加密和解密</p>\n<p>通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密</p>\n<p><a href=\"opencv/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86.py\">代码实现</a></p>\n<h3 id=\"数字水印\"><a class=\"markdownIt-Anchor\" href=\"#数字水印\"></a> 数字水印</h3>\n<p>最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。</p>\n<p>在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。<br />\n这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能</p>\n<p>分两步：</p>\n<pre><code>嵌入过程\n  用数字水印信息将图像的最低有效位替换掉\n\n提取过程\n  提取出最低有效位的水印信息即可\n</code></pre>\n<p><a href=\"opencv/%E6%95%B0%E5%AD%97%E6%B0%B4%E5%8D%B0.py\">demo</a></p>\n<h3 id=\"脸部打码以及解码\"><a class=\"markdownIt-Anchor\" href=\"#脸部打码以及解码\"></a> 脸部打码以及解码</h3>\n<p>使用掩码和按位运算方式实现对脸部打码和解码实例<br />\n<a href=\"opencv/%E8%84%B8%E9%83%A8%E6%89%93%E7%A0%81%E4%BB%A5%E5%8F%8A%E8%A7%A3%E7%A0%81.py\">demo</a></p>\n<h2 id=\"色彩空间类型转换\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间类型转换\"></a> 色彩空间类型转换</h2>\n<p>色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像</p>\n<h3 id=\"色彩空间基础\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间基础\"></a> 色彩空间基础</h3>\n<p>比较常见的色彩空间：</p>\n<ul>\n<li>GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： <code>GRAY =0.299×R +0.587*G +0.114*B</code></li>\n<li>XYZ色彩空间，一中便于计算的色彩空间</li>\n<li>YCrCb色彩空间</li>\n<li>HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value</li>\n<li>HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation</li>\n</ul>\n<h3 id=\"类型转换函数-hsv色彩空间讨论-alpha通道\"><a class=\"markdownIt-Anchor\" href=\"#类型转换函数-hsv色彩空间讨论-alpha通道\"></a> 类型转换函数、HSV色彩空间讨论、alpha通道</h3>\n<p><a href=\"oepncv/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.py\">demo</a></p>\n<p>dst = cv2.cvtColor(src,code,[,dstcn])</p>\n<pre><code>code表示色彩空间转换码\ndstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n</code></pre>\n<p>alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明</p>\n<h2 id=\"几何变换\"><a class=\"markdownIt-Anchor\" href=\"#几何变换\"></a> <strong>几何变换</strong></h2>\n<h3 id=\"缩放\"><a class=\"markdownIt-Anchor\" href=\"#缩放\"></a> <strong>缩放</strong></h3>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv.resize(src,dsize , fx,fy,interpolation)</span><br><span class=\"line\">  src:缩放的原始图像</span><br><span class=\"line\">  dsize：输出图像大小</span><br><span class=\"line\">  fx：水平方向的缩放比例</span><br><span class=\"line\">  fy:垂直方向的缩放比例</span><br><span class=\"line\">  interpolation：代表插值方式</span><br><span class=\"line\"><span class=\"code\">    缩放图像时，INTER_AREA能达到最好效果</span></span><br><span class=\"line\"><span class=\"code\">    放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"旋转\"><a class=\"markdownIt-Anchor\" href=\"#旋转\"></a> <strong>旋转</strong></h3>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst &#x3D; cv2.flip(src,flipCode)</span><br><span class=\"line\">  flipCode 旋转类型：</span><br><span class=\"line\">  0，绕x轴旋转</span><br><span class=\"line\">  正数，绕y轴旋转</span><br><span class=\"line\">  负数，绕x，y同时旋转</span><br></pre></td></tr></table></figure>\n<h3 id=\"仿射\"><a class=\"markdownIt-Anchor\" href=\"#仿射\"></a> <strong>仿射</strong></h3>\n<p>仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作</p>\n<p>该变换能够保持图像的平直性和平行性</p>\n<p>仿射 = 平移 + 旋转</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)</span><br><span class=\"line\">M:代表一个2x3的变换矩阵</span><br><span class=\"line\">dsize:代表输出图像的尺寸大小</span><br><span class=\"line\">flags:代表插值方式，默认INTER_LINEAR</span><br><span class=\"line\">borderMode:代表边类型</span><br><span class=\"line\"></span><br><span class=\"line\">borderValue:代表边界值，默认0</span><br></pre></td></tr></table></figure>\n<h3 id=\"透视\"><a class=\"markdownIt-Anchor\" href=\"#透视\"></a> <strong>透视</strong></h3>\n<h3 id=\"重映射\"><a class=\"markdownIt-Anchor\" href=\"#重映射\"></a> <strong>重映射</strong></h3>\n<h2 id=\"阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#阈值处理\"></a> <strong>阈值处理</strong></h2>\n<h3 id=\"threldhold函数\"><a class=\"markdownIt-Anchor\" href=\"#threldhold函数\"></a> <strong>threldhold函数</strong></h3>\n<h3 id=\"自适应阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#自适应阈值处理\"></a> <strong>自适应阈值处理</strong></h3>\n<h3 id=\"otsu处理\"><a class=\"markdownIt-Anchor\" href=\"#otsu处理\"></a> <strong>otsu处理</strong></h3>\n<h2 id=\"图像平滑处理\"><a class=\"markdownIt-Anchor\" href=\"#图像平滑处理\"></a> <strong>图像平滑处理</strong></h2>\n<h3 id=\"均值滤-波\"><a class=\"markdownIt-Anchor\" href=\"#均值滤-波\"></a> <strong>均值滤  波</strong></h3>\n<h3 id=\"方框滤波\"><a class=\"markdownIt-Anchor\" href=\"#方框滤波\"></a> <strong>方框滤波</strong></h3>\n<h3 id=\"高斯滤波\"><a class=\"markdownIt-Anchor\" href=\"#高斯滤波\"></a> <strong>高斯滤波</strong></h3>\n<h3 id=\"中值滤波\"><a class=\"markdownIt-Anchor\" href=\"#中值滤波\"></a> <strong>中值滤波</strong></h3>\n<h3 id=\"双边滤波\"><a class=\"markdownIt-Anchor\" href=\"#双边滤波\"></a> <strong>双边滤波</strong></h3>\n<h3 id=\"2d-卷积\"><a class=\"markdownIt-Anchor\" href=\"#2d-卷积\"></a> <strong>2D 卷积</strong></h3>\n<h2 id=\"形态学操作\"><a class=\"markdownIt-Anchor\" href=\"#形态学操作\"></a> <strong>形态学操作</strong></h2>\n<h3 id=\"腐蚀\"><a class=\"markdownIt-Anchor\" href=\"#腐蚀\"></a> <strong>腐蚀</strong></h3>\n<h3 id=\"膨胀\"><a class=\"markdownIt-Anchor\" href=\"#膨胀\"></a> <strong>膨胀</strong></h3>\n<h3 id=\"通用形态学函数\"><a class=\"markdownIt-Anchor\" href=\"#通用形态学函数\"></a> <strong>通用形态学函数</strong></h3>\n<h3 id=\"开运算\"><a class=\"markdownIt-Anchor\" href=\"#开运算\"></a> <strong>开运算</strong></h3>\n<h3 id=\"闭运算\"><a class=\"markdownIt-Anchor\" href=\"#闭运算\"></a> <strong>闭运算</strong></h3>\n<h3 id=\"形态学梯度运算\"><a class=\"markdownIt-Anchor\" href=\"#形态学梯度运算\"></a> <strong>形态学梯度运算</strong></h3>\n<h3 id=\"礼貌运算\"><a class=\"markdownIt-Anchor\" href=\"#礼貌运算\"></a> <strong>礼貌运算</strong></h3>\n<h3 id=\"黑帽运算\"><a class=\"markdownIt-Anchor\" href=\"#黑帽运算\"></a> <strong>黑帽运算</strong></h3>\n<h3 id=\"核函数\"><a class=\"markdownIt-Anchor\" href=\"#核函数\"></a> <strong>核函数</strong></h3>\n<h2 id=\"图像梯度\"><a class=\"markdownIt-Anchor\" href=\"#图像梯度\"></a> <strong>图像梯度</strong></h2>\n<h3 id=\"sobel-理论基础\"><a class=\"markdownIt-Anchor\" href=\"#sobel-理论基础\"></a> <strong>sobel 理论基础</strong></h3>\n<h3 id=\"sobel算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#sobel算子及函数使用\"></a> <strong>sobel算子及函数使用</strong></h3>\n<h3 id=\"scharr-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#scharr-算子及函数使用\"></a> <strong>scharr 算子及函数使用</strong></h3>\n<h3 id=\"laplacian-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#laplacian-算子及函数使用\"></a> <strong>Laplacian 算子及函数使用</strong></h3>\n<h3 id=\"算子总结\"><a class=\"markdownIt-Anchor\" href=\"#算子总结\"></a> <strong>算子总结</strong></h3>\n<h2 id=\"canny边缘检测\"><a class=\"markdownIt-Anchor\" href=\"#canny边缘检测\"></a> <strong>canny边缘检测</strong></h2>\n<h3 id=\"canny边缘检测理论\"><a class=\"markdownIt-Anchor\" href=\"#canny边缘检测理论\"></a> <strong>canny边缘检测理论</strong></h3>\n<h3 id=\"canny函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#canny函数及使用\"></a> <strong>canny函数及使用</strong></h3>\n<h2 id=\"图像金字塔\"><a class=\"markdownIt-Anchor\" href=\"#图像金字塔\"></a> <strong>图像金字塔</strong></h2>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"pyrdown函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#pyrdown函数及使用\"></a> <strong>pyrDown函数及使用</strong></h3>\n<h3 id=\"采样可逆行研究\"><a class=\"markdownIt-Anchor\" href=\"#采样可逆行研究\"></a> <strong>采样可逆行研究</strong></h3>\n<h3 id=\"拉普拉斯金字塔\"><a class=\"markdownIt-Anchor\" href=\"#拉普拉斯金字塔\"></a> <strong>拉普拉斯金字塔</strong></h3>\n<h2 id=\"图像轮廓\"><a class=\"markdownIt-Anchor\" href=\"#图像轮廓\"></a> <strong>图像轮廓</strong></h2>\n<h3 id=\"查找并绘制轮廓\"><a class=\"markdownIt-Anchor\" href=\"#查找并绘制轮廓\"></a> <strong>查找并绘制轮廓</strong></h3>\n<h3 id=\"矩特征\"><a class=\"markdownIt-Anchor\" href=\"#矩特征\"></a> <strong>矩特征</strong></h3>\n<h3 id=\"hu钜\"><a class=\"markdownIt-Anchor\" href=\"#hu钜\"></a> <strong>hu钜</strong></h3>\n<h3 id=\"轮廓拟合\"><a class=\"markdownIt-Anchor\" href=\"#轮廓拟合\"></a> <strong>轮廓拟合</strong></h3>\n<h3 id=\"凸包\"><a class=\"markdownIt-Anchor\" href=\"#凸包\"></a> <strong>凸包</strong></h3>\n<h3 id=\"利用形状场景算法比较轮廓\"><a class=\"markdownIt-Anchor\" href=\"#利用形状场景算法比较轮廓\"></a> <strong>利用形状场景算法比较轮廓</strong></h3>\n<h3 id=\"轮廓的特征值\"><a class=\"markdownIt-Anchor\" href=\"#轮廓的特征值\"></a> <strong>轮廓的特征值</strong></h3>\n<h2 id=\"傅里叶变换\"><a class=\"markdownIt-Anchor\" href=\"#傅里叶变换\"></a> <strong>傅里叶变换</strong></h2>\n<h3 id=\"理论基础-2\"><a class=\"markdownIt-Anchor\" href=\"#理论基础-2\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\"></a> <strong>实现</strong></h3>\n<h2 id=\"模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配\"></a> <strong>模板匹配</strong></h2>\n<h3 id=\"模板匹配基础\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配基础\"></a> <strong>模板匹配基础</strong></h3>\n<h3 id=\"多模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#多模板匹配\"></a> <strong>多模板匹配</strong></h3>\n<h2 id=\"霍夫变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫变换\"></a> <strong>霍夫变换</strong></h2>\n<h3 id=\"霍夫直线变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫直线变换\"></a> 霍夫直线变换</h3>\n<h3 id=\"霍夫圆形变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫圆形变换\"></a> <strong>霍夫圆形变换</strong></h3>\n<h2 id=\"图像分割与提取\"><a class=\"markdownIt-Anchor\" href=\"#图像分割与提取\"></a> <strong>图像分割与提取</strong></h2>\n<h3 id=\"用分水岭算法实现图像分割\"><a class=\"markdownIt-Anchor\" href=\"#用分水岭算法实现图像分割\"></a> <strong>用分水岭算法实现图像分割</strong></h3>\n<h3 id=\"交互式前景提取\"><a class=\"markdownIt-Anchor\" href=\"#交互式前景提取\"></a> <strong>交互式前景提取</strong></h3>\n<h2 id=\"视频处理\"><a class=\"markdownIt-Anchor\" href=\"#视频处理\"></a> <strong>视频处理</strong></h2>\n<h3 id=\"videocapture类\"><a class=\"markdownIt-Anchor\" href=\"#videocapture类\"></a> <strong>VideoCapture类</strong></h3>\n<h3 id=\"viedeowriter类\"><a class=\"markdownIt-Anchor\" href=\"#viedeowriter类\"></a> <strong>ViedeoWriter类</strong></h3>\n<h3 id=\"视频操作基础\"><a class=\"markdownIt-Anchor\" href=\"#视频操作基础\"></a> <strong>视频操作基础</strong></h3>\n<h2 id=\"绘图机交互\"><a class=\"markdownIt-Anchor\" href=\"#绘图机交互\"></a> <strong>绘图机交互</strong></h2>\n<h3 id=\"绘图基础\"><a class=\"markdownIt-Anchor\" href=\"#绘图基础\"></a> <strong>绘图基础</strong></h3>\n<h3 id=\"鼠标交互\"><a class=\"markdownIt-Anchor\" href=\"#鼠标交互\"></a> <strong>鼠标交互</strong></h3>\n<h3 id=\"滚动条\"><a class=\"markdownIt-Anchor\" href=\"#滚动条\"></a> <strong>滚动条</strong></h3>\n<h2 id=\"k近邻算法\"><a class=\"markdownIt-Anchor\" href=\"#k近邻算法\"></a> <strong>k近邻算法</strong></h2>\n<h3 id=\"理论基础-3\"><a class=\"markdownIt-Anchor\" href=\"#理论基础-3\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"计算\"><a class=\"markdownIt-Anchor\" href=\"#计算\"></a> <strong>计算</strong></h3>\n<h3 id=\"手写数字识别原理\"><a class=\"markdownIt-Anchor\" href=\"#手写数字识别原理\"></a> <strong>手写数字识别原理</strong></h3>\n<h3 id=\"自定义函数手写数字识别\"><a class=\"markdownIt-Anchor\" href=\"#自定义函数手写数字识别\"></a> <strong>自定义函数手写数字识别</strong></h3>\n<h3 id=\"k近邻模块的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#k近邻模块的基本使用\"></a> <strong>k近邻模块的基本使用</strong></h3>\n<h3 id=\"k-近邻手写板数字的识别\"><a class=\"markdownIt-Anchor\" href=\"#k-近邻手写板数字的识别\"></a> <strong>K 近邻手写板数字的识别</strong></h3>\n<p>K<br />\nK**<br />\nK<br />\nK*<br />\nK</p>\n<h3 id=\"svm案例介绍\"><a class=\"markdownIt-Anchor\" href=\"#svm案例介绍\"></a> <strong>svm案例介绍</strong></h3>\n<h2 id=\"k均值聚类\"><a class=\"markdownIt-Anchor\" href=\"#k均值聚类\"></a> <strong>k均值聚类</strong></h2>"},{"_content":"\n## 1，图像处理基础\n\n\n\n### 图像的表示\n\n  二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。\n\n  灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。\n\n  彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反\n\n### 像素处理\n\n  [像素处理代码实现](opencv/像素处理.py)\n\n### 使用numpy.array访问元素\n\n  [代码实现](opencv/numpy.array访问元素.py)\n  \n  函数 item(行，列) 能高效访问图像的像素点\n  itemset(索引值，新值) 用来修改像素值\n\n### 感兴趣区域ROI 和 通道操作\n\n  [代码实现](opencv/ROI.py)\n\n  设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C\n\n  通道拆分 cv.split(img)\n\n  通道合并 cv.merge([b,g,r])\n\n### 获取图像属性\n\n  img.shape 返回包含行数，列数，通道数的数组\n\n  img.size  返回图像的像素数目\n\n  img.dtype 返回图像的数据类型\n","source":"_posts/深度学习/opencv笔记/oepncv01.md","raw":"\n## 1，图像处理基础\n\n\n\n### 图像的表示\n\n  二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。\n\n  灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。\n\n  彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反\n\n### 像素处理\n\n  [像素处理代码实现](opencv/像素处理.py)\n\n### 使用numpy.array访问元素\n\n  [代码实现](opencv/numpy.array访问元素.py)\n  \n  函数 item(行，列) 能高效访问图像的像素点\n  itemset(索引值，新值) 用来修改像素值\n\n### 感兴趣区域ROI 和 通道操作\n\n  [代码实现](opencv/ROI.py)\n\n  设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C\n\n  通道拆分 cv.split(img)\n\n  通道合并 cv.merge([b,g,r])\n\n### 获取图像属性\n\n  img.shape 返回包含行数，列数，通道数的数组\n\n  img.size  返回图像的像素数目\n\n  img.dtype 返回图像的数据类型\n","slug":"深度学习/opencv笔记/oepncv01","published":1,"date":"2020-06-18T18:56:25.272Z","updated":"2020-06-18T18:56:25.272Z","title":"深度学习/opencv笔记/oepncv01","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llrs000hj8g5h0mb7ps5","content":"<h2 id=\"1图像处理基础\"><a class=\"markdownIt-Anchor\" href=\"#1图像处理基础\"></a> 1，图像处理基础</h2>\n<h3 id=\"图像的表示\"><a class=\"markdownIt-Anchor\" href=\"#图像的表示\"></a> 图像的表示</h3>\n<p>二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。</p>\n<p>灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。</p>\n<p>彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反</p>\n<h3 id=\"像素处理\"><a class=\"markdownIt-Anchor\" href=\"#像素处理\"></a> 像素处理</h3>\n<p><a href=\"opencv/%E5%83%8F%E7%B4%A0%E5%A4%84%E7%90%86.py\">像素处理代码实现</a></p>\n<h3 id=\"使用numpyarray访问元素\"><a class=\"markdownIt-Anchor\" href=\"#使用numpyarray访问元素\"></a> 使用numpy.array访问元素</h3>\n<p><a href=\"opencv/numpy.array%E8%AE%BF%E9%97%AE%E5%85%83%E7%B4%A0.py\">代码实现</a></p>\n<p>函数 item(行，列) 能高效访问图像的像素点<br />\nitemset(索引值，新值) 用来修改像素值</p>\n<h3 id=\"感兴趣区域roi-和-通道操作\"><a class=\"markdownIt-Anchor\" href=\"#感兴趣区域roi-和-通道操作\"></a> 感兴趣区域ROI 和 通道操作</h3>\n<p><a href=\"opencv/ROI.py\">代码实现</a></p>\n<p>设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C</p>\n<p>通道拆分 cv.split(img)</p>\n<p>通道合并 cv.merge([b,g,r])</p>\n<h3 id=\"获取图像属性\"><a class=\"markdownIt-Anchor\" href=\"#获取图像属性\"></a> 获取图像属性</h3>\n<p>img.shape 返回包含行数，列数，通道数的数组</p>\n<p>img.size  返回图像的像素数目</p>\n<p>img.dtype 返回图像的数据类型</p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"16KG5MK","length":440,"excerpt":"","more":"<h2 id=\"1图像处理基础\"><a class=\"markdownIt-Anchor\" href=\"#1图像处理基础\"></a> 1，图像处理基础</h2>\n<h3 id=\"图像的表示\"><a class=\"markdownIt-Anchor\" href=\"#图像的表示\"></a> 图像的表示</h3>\n<p>二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。</p>\n<p>灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。</p>\n<p>彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反</p>\n<h3 id=\"像素处理\"><a class=\"markdownIt-Anchor\" href=\"#像素处理\"></a> 像素处理</h3>\n<p><a href=\"opencv/%E5%83%8F%E7%B4%A0%E5%A4%84%E7%90%86.py\">像素处理代码实现</a></p>\n<h3 id=\"使用numpyarray访问元素\"><a class=\"markdownIt-Anchor\" href=\"#使用numpyarray访问元素\"></a> 使用numpy.array访问元素</h3>\n<p><a href=\"opencv/numpy.array%E8%AE%BF%E9%97%AE%E5%85%83%E7%B4%A0.py\">代码实现</a></p>\n<p>函数 item(行，列) 能高效访问图像的像素点<br />\nitemset(索引值，新值) 用来修改像素值</p>\n<h3 id=\"感兴趣区域roi-和-通道操作\"><a class=\"markdownIt-Anchor\" href=\"#感兴趣区域roi-和-通道操作\"></a> 感兴趣区域ROI 和 通道操作</h3>\n<p><a href=\"opencv/ROI.py\">代码实现</a></p>\n<p>设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C</p>\n<p>通道拆分 cv.split(img)</p>\n<p>通道合并 cv.merge([b,g,r])</p>\n<h3 id=\"获取图像属性\"><a class=\"markdownIt-Anchor\" href=\"#获取图像属性\"></a> 获取图像属性</h3>\n<p>img.shape 返回包含行数，列数，通道数的数组</p>\n<p>img.size  返回图像的像素数目</p>\n<p>img.dtype 返回图像的数据类型</p>\n"},{"_content":"\n## 2，图像运算\n\n### 加法\n\n  img1 + img2 ,遵循规则：\n  a+b = (a+b) % 256,即结果对256取膜\n\n  cv2.add(img1,img2) ,遵循规则：\n  a+b = min(a+b,255), 即和大于255时结果取255\n\n### 图像加权和\n\n  dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略\n  结果就是 dst = src * alpha +src2 *beta +gamma\n\n  加权和超过255，结果同样取255\n\n### 按位逻辑运算\n\n  cv2.bitwise_and() 与\n  cv2.bitwise_or()  或\n  cv2.bitwise_xor() 异或\n  cv2.bitwise_not() 非\n\n  跟 0 位与结果为 0 ，变成黑色\n  跟255位与结果是本身 ，颜色不变\n\n### 掩膜\n\n  使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0\n\n### 图像与数值运算\n\n  cv2.add(img,6) 参与运算的既可以是图片也可以是数值\n\n### 位平面分解\n\n  将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。\n  在8位灰度图中，可以组成8个二进制图像\n  [代码](opencv/位平面.py)\n\n### 图像加密和解密\n\n  通过按位异或运算可以实现图像的加密和解密\n\n  通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密\n\n  [代码实现](opencv/图像加密和解密.py)\n\n### 数字水印\n\n  最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。\n\n  在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。\n  这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能\n\n  分两步：\n    \n    嵌入过程\n      用数字水印信息将图像的最低有效位替换掉\n    \n    提取过程\n      提取出最低有效位的水印信息即可\n\n  [demo](opencv/数字水印.py)\n\n### 脸部打码以及解码\n\n  使用掩码和按位运算方式实现对脸部打码和解码实例\n  [demo](opencv/脸部打码以及解码.py)\n","source":"_posts/深度学习/opencv笔记/opencv02.md","raw":"\n## 2，图像运算\n\n### 加法\n\n  img1 + img2 ,遵循规则：\n  a+b = (a+b) % 256,即结果对256取膜\n\n  cv2.add(img1,img2) ,遵循规则：\n  a+b = min(a+b,255), 即和大于255时结果取255\n\n### 图像加权和\n\n  dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略\n  结果就是 dst = src * alpha +src2 *beta +gamma\n\n  加权和超过255，结果同样取255\n\n### 按位逻辑运算\n\n  cv2.bitwise_and() 与\n  cv2.bitwise_or()  或\n  cv2.bitwise_xor() 异或\n  cv2.bitwise_not() 非\n\n  跟 0 位与结果为 0 ，变成黑色\n  跟255位与结果是本身 ，颜色不变\n\n### 掩膜\n\n  使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0\n\n### 图像与数值运算\n\n  cv2.add(img,6) 参与运算的既可以是图片也可以是数值\n\n### 位平面分解\n\n  将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。\n  在8位灰度图中，可以组成8个二进制图像\n  [代码](opencv/位平面.py)\n\n### 图像加密和解密\n\n  通过按位异或运算可以实现图像的加密和解密\n\n  通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密\n\n  [代码实现](opencv/图像加密和解密.py)\n\n### 数字水印\n\n  最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。\n\n  在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。\n  这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能\n\n  分两步：\n    \n    嵌入过程\n      用数字水印信息将图像的最低有效位替换掉\n    \n    提取过程\n      提取出最低有效位的水印信息即可\n\n  [demo](opencv/数字水印.py)\n\n### 脸部打码以及解码\n\n  使用掩码和按位运算方式实现对脸部打码和解码实例\n  [demo](opencv/脸部打码以及解码.py)\n","slug":"深度学习/opencv笔记/opencv02","published":1,"date":"2020-06-18T18:56:25.273Z","updated":"2020-06-18T18:56:25.273Z","title":"深度学习/opencv笔记/opencv02","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llrs000ij8g58gn2239v","content":"<h2 id=\"2图像运算\"><a class=\"markdownIt-Anchor\" href=\"#2图像运算\"></a> 2，图像运算</h2>\n<h3 id=\"加法\"><a class=\"markdownIt-Anchor\" href=\"#加法\"></a> 加法</h3>\n<p>img1 + img2 ,遵循规则：<br />\na+b = (a+b) % 256,即结果对256取膜</p>\n<p>cv2.add(img1,img2) ,遵循规则：<br />\na+b = min(a+b,255), 即和大于255时结果取255</p>\n<h3 id=\"图像加权和\"><a class=\"markdownIt-Anchor\" href=\"#图像加权和\"></a> 图像加权和</h3>\n<p>dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略<br />\n结果就是 dst = src * alpha +src2 *beta +gamma</p>\n<p>加权和超过255，结果同样取255</p>\n<h3 id=\"按位逻辑运算\"><a class=\"markdownIt-Anchor\" href=\"#按位逻辑运算\"></a> 按位逻辑运算</h3>\n<p>cv2.bitwise_and() 与<br />\ncv2.bitwise_or()  或<br />\ncv2.bitwise_xor() 异或<br />\ncv2.bitwise_not() 非</p>\n<p>跟 0 位与结果为 0 ，变成黑色<br />\n跟255位与结果是本身 ，颜色不变</p>\n<h3 id=\"掩膜\"><a class=\"markdownIt-Anchor\" href=\"#掩膜\"></a> 掩膜</h3>\n<p>使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0</p>\n<h3 id=\"图像与数值运算\"><a class=\"markdownIt-Anchor\" href=\"#图像与数值运算\"></a> 图像与数值运算</h3>\n<p>cv2.add(img,6) 参与运算的既可以是图片也可以是数值</p>\n<h3 id=\"位平面分解\"><a class=\"markdownIt-Anchor\" href=\"#位平面分解\"></a> 位平面分解</h3>\n<p>将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。<br />\n在8位灰度图中，可以组成8个二进制图像<br />\n<a href=\"opencv/%E4%BD%8D%E5%B9%B3%E9%9D%A2.py\">代码</a></p>\n<h3 id=\"图像加密和解密\"><a class=\"markdownIt-Anchor\" href=\"#图像加密和解密\"></a> 图像加密和解密</h3>\n<p>通过按位异或运算可以实现图像的加密和解密</p>\n<p>通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密</p>\n<p><a href=\"opencv/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86.py\">代码实现</a></p>\n<h3 id=\"数字水印\"><a class=\"markdownIt-Anchor\" href=\"#数字水印\"></a> 数字水印</h3>\n<p>最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。</p>\n<p>在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。<br />\n这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能</p>\n<p>分两步：</p>\n<pre><code>嵌入过程\n  用数字水印信息将图像的最低有效位替换掉\n\n提取过程\n  提取出最低有效位的水印信息即可\n</code></pre>\n<p><a href=\"opencv/%E6%95%B0%E5%AD%97%E6%B0%B4%E5%8D%B0.py\">demo</a></p>\n<h3 id=\"脸部打码以及解码\"><a class=\"markdownIt-Anchor\" href=\"#脸部打码以及解码\"></a> 脸部打码以及解码</h3>\n<p>使用掩码和按位运算方式实现对脸部打码和解码实例<br />\n<a href=\"opencv/%E8%84%B8%E9%83%A8%E6%89%93%E7%A0%81%E4%BB%A5%E5%8F%8A%E8%A7%A3%E7%A0%81.py\">demo</a></p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"2SCRSV8","length":816,"excerpt":"","more":"<h2 id=\"2图像运算\"><a class=\"markdownIt-Anchor\" href=\"#2图像运算\"></a> 2，图像运算</h2>\n<h3 id=\"加法\"><a class=\"markdownIt-Anchor\" href=\"#加法\"></a> 加法</h3>\n<p>img1 + img2 ,遵循规则：<br />\na+b = (a+b) % 256,即结果对256取膜</p>\n<p>cv2.add(img1,img2) ,遵循规则：<br />\na+b = min(a+b,255), 即和大于255时结果取255</p>\n<h3 id=\"图像加权和\"><a class=\"markdownIt-Anchor\" href=\"#图像加权和\"></a> 图像加权和</h3>\n<p>dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略<br />\n结果就是 dst = src * alpha +src2 *beta +gamma</p>\n<p>加权和超过255，结果同样取255</p>\n<h3 id=\"按位逻辑运算\"><a class=\"markdownIt-Anchor\" href=\"#按位逻辑运算\"></a> 按位逻辑运算</h3>\n<p>cv2.bitwise_and() 与<br />\ncv2.bitwise_or()  或<br />\ncv2.bitwise_xor() 异或<br />\ncv2.bitwise_not() 非</p>\n<p>跟 0 位与结果为 0 ，变成黑色<br />\n跟255位与结果是本身 ，颜色不变</p>\n<h3 id=\"掩膜\"><a class=\"markdownIt-Anchor\" href=\"#掩膜\"></a> 掩膜</h3>\n<p>使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0</p>\n<h3 id=\"图像与数值运算\"><a class=\"markdownIt-Anchor\" href=\"#图像与数值运算\"></a> 图像与数值运算</h3>\n<p>cv2.add(img,6) 参与运算的既可以是图片也可以是数值</p>\n<h3 id=\"位平面分解\"><a class=\"markdownIt-Anchor\" href=\"#位平面分解\"></a> 位平面分解</h3>\n<p>将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。<br />\n在8位灰度图中，可以组成8个二进制图像<br />\n<a href=\"opencv/%E4%BD%8D%E5%B9%B3%E9%9D%A2.py\">代码</a></p>\n<h3 id=\"图像加密和解密\"><a class=\"markdownIt-Anchor\" href=\"#图像加密和解密\"></a> 图像加密和解密</h3>\n<p>通过按位异或运算可以实现图像的加密和解密</p>\n<p>通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密</p>\n<p><a href=\"opencv/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86.py\">代码实现</a></p>\n<h3 id=\"数字水印\"><a class=\"markdownIt-Anchor\" href=\"#数字水印\"></a> 数字水印</h3>\n<p>最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。</p>\n<p>在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。<br />\n这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能</p>\n<p>分两步：</p>\n<pre><code>嵌入过程\n  用数字水印信息将图像的最低有效位替换掉\n\n提取过程\n  提取出最低有效位的水印信息即可\n</code></pre>\n<p><a href=\"opencv/%E6%95%B0%E5%AD%97%E6%B0%B4%E5%8D%B0.py\">demo</a></p>\n<h3 id=\"脸部打码以及解码\"><a class=\"markdownIt-Anchor\" href=\"#脸部打码以及解码\"></a> 脸部打码以及解码</h3>\n<p>使用掩码和按位运算方式实现对脸部打码和解码实例<br />\n<a href=\"opencv/%E8%84%B8%E9%83%A8%E6%89%93%E7%A0%81%E4%BB%A5%E5%8F%8A%E8%A7%A3%E7%A0%81.py\">demo</a></p>\n"},{"_content":"\n## 3，色彩空间类型转换\n\n  色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像\n\n### 色彩空间基础\n\n  比较常见的色彩空间：\n  \n  - GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： `GRAY =0.299×R +0.587*G +0.114*B`\n  - XYZ色彩空间，一中便于计算的色彩空间\n  - YCrCb色彩空间\n  - HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value\n  - HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation\n\n\n### 类型转换函数、HSV色彩空间讨论、alpha通道\n\n  [demo](oepncv/类型转换.py)\n  \n  dst = cv2.cvtColor(src,code,[,dstcn])\n  \n    code表示色彩空间转换码\n    dstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n\n  alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明\n  \n\n","source":"_posts/深度学习/opencv笔记/opencv03.md","raw":"\n## 3，色彩空间类型转换\n\n  色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像\n\n### 色彩空间基础\n\n  比较常见的色彩空间：\n  \n  - GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： `GRAY =0.299×R +0.587*G +0.114*B`\n  - XYZ色彩空间，一中便于计算的色彩空间\n  - YCrCb色彩空间\n  - HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value\n  - HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation\n\n\n### 类型转换函数、HSV色彩空间讨论、alpha通道\n\n  [demo](oepncv/类型转换.py)\n  \n  dst = cv2.cvtColor(src,code,[,dstcn])\n  \n    code表示色彩空间转换码\n    dstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n\n  alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明\n  \n\n","slug":"深度学习/opencv笔记/opencv03","published":1,"date":"2020-06-18T18:56:25.274Z","updated":"2020-06-18T18:56:25.274Z","title":"深度学习/opencv笔记/opencv03","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llrt000jj8g5fv6pbeob","content":"<h2 id=\"3色彩空间类型转换\"><a class=\"markdownIt-Anchor\" href=\"#3色彩空间类型转换\"></a> 3，色彩空间类型转换</h2>\n<p>色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像</p>\n<h3 id=\"色彩空间基础\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间基础\"></a> 色彩空间基础</h3>\n<p>比较常见的色彩空间：</p>\n<ul>\n<li>GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： <code>GRAY =0.299×R +0.587*G +0.114*B</code></li>\n<li>XYZ色彩空间，一中便于计算的色彩空间</li>\n<li>YCrCb色彩空间</li>\n<li>HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value</li>\n<li>HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation</li>\n</ul>\n<h3 id=\"类型转换函数-hsv色彩空间讨论-alpha通道\"><a class=\"markdownIt-Anchor\" href=\"#类型转换函数-hsv色彩空间讨论-alpha通道\"></a> 类型转换函数、HSV色彩空间讨论、alpha通道</h3>\n<p><a href=\"oepncv/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.py\">demo</a></p>\n<p>dst = cv2.cvtColor(src,code,[,dstcn])</p>\n<pre><code>code表示色彩空间转换码\ndstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n</code></pre>\n<p>alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明</p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"32WPNZY","length":617,"excerpt":"","more":"<h2 id=\"3色彩空间类型转换\"><a class=\"markdownIt-Anchor\" href=\"#3色彩空间类型转换\"></a> 3，色彩空间类型转换</h2>\n<p>色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像</p>\n<h3 id=\"色彩空间基础\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间基础\"></a> 色彩空间基础</h3>\n<p>比较常见的色彩空间：</p>\n<ul>\n<li>GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： <code>GRAY =0.299×R +0.587*G +0.114*B</code></li>\n<li>XYZ色彩空间，一中便于计算的色彩空间</li>\n<li>YCrCb色彩空间</li>\n<li>HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value</li>\n<li>HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation</li>\n</ul>\n<h3 id=\"类型转换函数-hsv色彩空间讨论-alpha通道\"><a class=\"markdownIt-Anchor\" href=\"#类型转换函数-hsv色彩空间讨论-alpha通道\"></a> 类型转换函数、HSV色彩空间讨论、alpha通道</h3>\n<p><a href=\"oepncv/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.py\">demo</a></p>\n<p>dst = cv2.cvtColor(src,code,[,dstcn])</p>\n<pre><code>code表示色彩空间转换码\ndstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n</code></pre>\n<p>alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明</p>\n"},{"_content":"\n## 4，**几何变换**\n\n### **缩放**\n\n  ```md\n  dst = cv.resize(src,dsize , fx,fy,interpolation)\n    src:缩放的原始图像\n    dsize：输出图像大小\n    fx：水平方向的缩放比例\n    fy:垂直方向的缩放比例\n    interpolation：代表插值方式\n      缩放图像时，INTER_AREA能达到最好效果\n      放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果  \n  ```\n  \n\n### **旋转**\n\n  ```\n  dst = cv2.flip(src,flipCode)\n    flipCode 旋转类型：\n    0，绕x轴旋转\n    正数，绕y轴旋转\n    负数，绕x，y同时旋转\n  ```\n\n### **仿射**\n\n  仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作\n\n  该变换能够保持图像的平直性和平行性\n  \n  仿射 = 平移 + 旋转 \n\n```md\n  dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)\n  M:代表一个2x3的变换矩阵\n  dsize:代表输出图像的尺寸大小\n  flags:代表插值方式，默认INTER_LINEAR\n  borderMode:代表边类型\n\n  borderValue:代表边界值，默认0\n  ```\n  \n### **透视**\n\n仿射可以将矩阵映射成任意平行四边形\n透视变换可以将矩形映射成任意四边形\n\n透视函数：`dst = cv2.warpPerspective(src,M,dsize,flags,borderMode,borderValue)`\n  - M 代表一个3*3的变换矩阵\n  - dsize代表输出图像的尺寸\n  - flags代表插值方式\n  - borderMode代表变类型\n  - borderValue代表边界值\n\n生成转换举矩阵：`retval = cv2.getPerspectiveTransform(src,dst)`\n\n\n### **重映射**\n\n把一副图像内像素点放置到另一幅图像内的指定位置，这个过程被称为重映射\n\n映射函数：`dst = cv2.remap(src,map1,map2,interpolation,borderMode,borderValue)`\n\n映射就是通过修改图像像素点的位置一副新的图像，在构建新图像时，需要确定新图像中的每个像素点在原图中的位置，因此，映射函数的作用就是查找新图像像素点在原始图像内的位置。该过程就是将新图像像素映射到原始图像的过程，因此被称为反向映射。\n\n\n","source":"_posts/深度学习/opencv笔记/opencv04.md","raw":"\n## 4，**几何变换**\n\n### **缩放**\n\n  ```md\n  dst = cv.resize(src,dsize , fx,fy,interpolation)\n    src:缩放的原始图像\n    dsize：输出图像大小\n    fx：水平方向的缩放比例\n    fy:垂直方向的缩放比例\n    interpolation：代表插值方式\n      缩放图像时，INTER_AREA能达到最好效果\n      放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果  \n  ```\n  \n\n### **旋转**\n\n  ```\n  dst = cv2.flip(src,flipCode)\n    flipCode 旋转类型：\n    0，绕x轴旋转\n    正数，绕y轴旋转\n    负数，绕x，y同时旋转\n  ```\n\n### **仿射**\n\n  仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作\n\n  该变换能够保持图像的平直性和平行性\n  \n  仿射 = 平移 + 旋转 \n\n```md\n  dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)\n  M:代表一个2x3的变换矩阵\n  dsize:代表输出图像的尺寸大小\n  flags:代表插值方式，默认INTER_LINEAR\n  borderMode:代表边类型\n\n  borderValue:代表边界值，默认0\n  ```\n  \n### **透视**\n\n仿射可以将矩阵映射成任意平行四边形\n透视变换可以将矩形映射成任意四边形\n\n透视函数：`dst = cv2.warpPerspective(src,M,dsize,flags,borderMode,borderValue)`\n  - M 代表一个3*3的变换矩阵\n  - dsize代表输出图像的尺寸\n  - flags代表插值方式\n  - borderMode代表变类型\n  - borderValue代表边界值\n\n生成转换举矩阵：`retval = cv2.getPerspectiveTransform(src,dst)`\n\n\n### **重映射**\n\n把一副图像内像素点放置到另一幅图像内的指定位置，这个过程被称为重映射\n\n映射函数：`dst = cv2.remap(src,map1,map2,interpolation,borderMode,borderValue)`\n\n映射就是通过修改图像像素点的位置一副新的图像，在构建新图像时，需要确定新图像中的每个像素点在原图中的位置，因此，映射函数的作用就是查找新图像像素点在原始图像内的位置。该过程就是将新图像像素映射到原始图像的过程，因此被称为反向映射。\n\n\n","slug":"深度学习/opencv笔记/opencv04","published":1,"date":"2020-06-18T18:56:25.275Z","updated":"2020-06-18T18:56:25.275Z","title":"深度学习/opencv笔记/opencv04","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llru000kj8g5cavadw9b","content":"<h2 id=\"4几何变换\"><a class=\"markdownIt-Anchor\" href=\"#4几何变换\"></a> 4，<strong>几何变换</strong></h2>\n<h3 id=\"缩放\"><a class=\"markdownIt-Anchor\" href=\"#缩放\"></a> <strong>缩放</strong></h3>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv.resize(src,dsize , fx,fy,interpolation)</span><br><span class=\"line\">  src:缩放的原始图像</span><br><span class=\"line\">  dsize：输出图像大小</span><br><span class=\"line\">  fx：水平方向的缩放比例</span><br><span class=\"line\">  fy:垂直方向的缩放比例</span><br><span class=\"line\">  interpolation：代表插值方式</span><br><span class=\"line\"><span class=\"code\">    缩放图像时，INTER_AREA能达到最好效果</span></span><br><span class=\"line\"><span class=\"code\">    放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"旋转\"><a class=\"markdownIt-Anchor\" href=\"#旋转\"></a> <strong>旋转</strong></h3>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst &#x3D; cv2.flip(src,flipCode)</span><br><span class=\"line\">  flipCode 旋转类型：</span><br><span class=\"line\">  0，绕x轴旋转</span><br><span class=\"line\">  正数，绕y轴旋转</span><br><span class=\"line\">  负数，绕x，y同时旋转</span><br></pre></td></tr></table></figure>\n<h3 id=\"仿射\"><a class=\"markdownIt-Anchor\" href=\"#仿射\"></a> <strong>仿射</strong></h3>\n<p>仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作</p>\n<p>该变换能够保持图像的平直性和平行性</p>\n<p>仿射 = 平移 + 旋转</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)</span><br><span class=\"line\">M:代表一个2x3的变换矩阵</span><br><span class=\"line\">dsize:代表输出图像的尺寸大小</span><br><span class=\"line\">flags:代表插值方式，默认INTER_LINEAR</span><br><span class=\"line\">borderMode:代表边类型</span><br><span class=\"line\"></span><br><span class=\"line\">borderValue:代表边界值，默认0</span><br></pre></td></tr></table></figure>\n<h3 id=\"透视\"><a class=\"markdownIt-Anchor\" href=\"#透视\"></a> <strong>透视</strong></h3>\n<p>仿射可以将矩阵映射成任意平行四边形<br />\n透视变换可以将矩形映射成任意四边形</p>\n<p>透视函数：<code>dst = cv2.warpPerspective(src,M,dsize,flags,borderMode,borderValue)</code></p>\n<ul>\n<li>M 代表一个3*3的变换矩阵</li>\n<li>dsize代表输出图像的尺寸</li>\n<li>flags代表插值方式</li>\n<li>borderMode代表变类型</li>\n<li>borderValue代表边界值</li>\n</ul>\n<p>生成转换举矩阵：<code>retval = cv2.getPerspectiveTransform(src,dst)</code></p>\n<h3 id=\"重映射\"><a class=\"markdownIt-Anchor\" href=\"#重映射\"></a> <strong>重映射</strong></h3>\n<p>把一副图像内像素点放置到另一幅图像内的指定位置，这个过程被称为重映射</p>\n<p>映射函数：<code>dst = cv2.remap(src,map1,map2,interpolation,borderMode,borderValue)</code></p>\n<p>映射就是通过修改图像像素点的位置一副新的图像，在构建新图像时，需要确定新图像中的每个像素点在原图中的位置，因此，映射函数的作用就是查找新图像像素点在原始图像内的位置。该过程就是将新图像像素映射到原始图像的过程，因此被称为反向映射。</p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"1DTZGJX","length":936,"excerpt":"","more":"<h2 id=\"4几何变换\"><a class=\"markdownIt-Anchor\" href=\"#4几何变换\"></a> 4，<strong>几何变换</strong></h2>\n<h3 id=\"缩放\"><a class=\"markdownIt-Anchor\" href=\"#缩放\"></a> <strong>缩放</strong></h3>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv.resize(src,dsize , fx,fy,interpolation)</span><br><span class=\"line\">  src:缩放的原始图像</span><br><span class=\"line\">  dsize：输出图像大小</span><br><span class=\"line\">  fx：水平方向的缩放比例</span><br><span class=\"line\">  fy:垂直方向的缩放比例</span><br><span class=\"line\">  interpolation：代表插值方式</span><br><span class=\"line\"><span class=\"code\">    缩放图像时，INTER_AREA能达到最好效果</span></span><br><span class=\"line\"><span class=\"code\">    放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"旋转\"><a class=\"markdownIt-Anchor\" href=\"#旋转\"></a> <strong>旋转</strong></h3>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst &#x3D; cv2.flip(src,flipCode)</span><br><span class=\"line\">  flipCode 旋转类型：</span><br><span class=\"line\">  0，绕x轴旋转</span><br><span class=\"line\">  正数，绕y轴旋转</span><br><span class=\"line\">  负数，绕x，y同时旋转</span><br></pre></td></tr></table></figure>\n<h3 id=\"仿射\"><a class=\"markdownIt-Anchor\" href=\"#仿射\"></a> <strong>仿射</strong></h3>\n<p>仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作</p>\n<p>该变换能够保持图像的平直性和平行性</p>\n<p>仿射 = 平移 + 旋转</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)</span><br><span class=\"line\">M:代表一个2x3的变换矩阵</span><br><span class=\"line\">dsize:代表输出图像的尺寸大小</span><br><span class=\"line\">flags:代表插值方式，默认INTER_LINEAR</span><br><span class=\"line\">borderMode:代表边类型</span><br><span class=\"line\"></span><br><span class=\"line\">borderValue:代表边界值，默认0</span><br></pre></td></tr></table></figure>\n<h3 id=\"透视\"><a class=\"markdownIt-Anchor\" href=\"#透视\"></a> <strong>透视</strong></h3>\n<p>仿射可以将矩阵映射成任意平行四边形<br />\n透视变换可以将矩形映射成任意四边形</p>\n<p>透视函数：<code>dst = cv2.warpPerspective(src,M,dsize,flags,borderMode,borderValue)</code></p>\n<ul>\n<li>M 代表一个3*3的变换矩阵</li>\n<li>dsize代表输出图像的尺寸</li>\n<li>flags代表插值方式</li>\n<li>borderMode代表变类型</li>\n<li>borderValue代表边界值</li>\n</ul>\n<p>生成转换举矩阵：<code>retval = cv2.getPerspectiveTransform(src,dst)</code></p>\n<h3 id=\"重映射\"><a class=\"markdownIt-Anchor\" href=\"#重映射\"></a> <strong>重映射</strong></h3>\n<p>把一副图像内像素点放置到另一幅图像内的指定位置，这个过程被称为重映射</p>\n<p>映射函数：<code>dst = cv2.remap(src,map1,map2,interpolation,borderMode,borderValue)</code></p>\n<p>映射就是通过修改图像像素点的位置一副新的图像，在构建新图像时，需要确定新图像中的每个像素点在原图中的位置，因此，映射函数的作用就是查找新图像像素点在原始图像内的位置。该过程就是将新图像像素映射到原始图像的过程，因此被称为反向映射。</p>\n"},{"_content":"\n## 5，**阈值处理**\n\n阈值处理就是剔除图像中像素值高于一定值或者低于一定值的像素点，比如设定阈值为127，然后：\n- 将图像内所有像素值大于127的像素点设置为255\n- 将图像内像素值小于或等于127的像素点设置为0\n  \nopencv提供`cv2.threshold()`和`cv.adaptiveThreshold`\n\n### **threldhold函数**\n\n`retval, dst = cv2.threshold(src,thresh,maxval,type) `\n\n  - retval返回的阈值\n  - dst代表阈值分割结果图像，与原始图像具有相同的大小和类型\n  - src代表进行阈值阈值分割的图像\n  - thresh 代表设定的阈值\n  - maxval代表当type参数为thresh——binarry或者THRESH_BINARY_INV 类型时，需要设定的最大值\n  - type代表阈值分割的类型：\n    - cv2.THRESH_BINARY       二值化阈值处理\n    - cv2.THRESH_BINARY_INV反 二值化阈值处理\n    - cv2.THRESH_TRUNC        截断阈值化处理\n    - cv2.THRESH_TOZERO_INV   超阈值零处理\n    - CV2.THRESH_TOZERO       低阈值零处理   \n\n### **自适应阈值处理**\n\n也就是变化的阈值完成对图像的阈值处理\n\n`dst = cv.adaptiveThreshold(src, maxval,adaptiveMethod, thresholdType ,blockSize, C)`\n\n  - adaptiveMethod  表示自适应方法有以下两个自适应阈值方法，都是逐个像素的计算自适应阈值，自适应阈值等于每个像素由参数blocksize所指定领域的加权平均值减去常量C\n    - cv2.ADAPTIVE_THRESH_MEAN_C      领域内所有像素点权重值都是一样的\n    - CV2.ADAPTIVE_THRESH_GAUSSIAN_C  与领域各个像素点到中心点的距离相关，通过高斯方程得到各个点的权重值\n  \n  - thresholdType   代表阈值处理方式\n  - blockSize       代表块大小\n \n\n### **otsu处理**\n\n在使用cv2.threshold()进行阈值处理时，需要定义一个阈值，并以此阈值作为阈值处理的依据，通常情况下，图像都是色彩均匀的，这时直接将阈值处理成127比较合适\n\n但是有时图像灰度级分布是不均匀的，如果此时还将阈值设置为127，就不合适。\n\notsu方法能够根据当前图像给出的最佳的类间分隔阈值，简而言之，otsu方法会遍历所有可能的阈值，从而找到最佳的阈值\n\n`t, otsu = cv2.threshold(img,,0,255,cv2.THRESH_BINARY+cv.THRESH_OTSU)`\n\n\n\n##,6，**图像平滑处理**\n\n在尽量保留图像原有信息的情况下，过滤掉图像内部的噪声，这一过程称为 图像平滑处理，也叫 图像模糊处理，也叫做去噪\n\n图像平滑处理的基本原理就是，将噪声所在像素点的值处理为其周围临近像素点的值的近似值，取近似值的方式有如下：\n  - 均值滤波\n  - 方框滤波\n  - 高斯滤波\n  - 中值滤波\n  - 双边滤波\n  - 2D卷积（自定义滤波）\n\n### **均值滤波**\n\n均值滤波是指用当前像素点周围N×N个像素点的滤波来代替当前像素值。\n\n均值滤波函数`dst = cv2.blur(src,ksize,anchor,borderType)`\n  - ksize是滤波核的大小，滤波核大小是指在均值处理中，其邻域图像的高度和宽度。核越大，去噪效果越好，但是越失真\n  - anchor是锚点，默认（-1，-1），表示当前计算均值的点位于核的中心点的位置\n  - bordertype 是边界样式，该值决定以何种方式处理边界\n  - \n### **方框滤波**\n\n方框滤波中，不会计算像素均值，可以自由选择是否对均值滤波的结果进行归一化，即可以自由选择滤波结果是邻域像素之和的平均值，还是邻域像素值之和。\n\n`dst = cv2.boxFilter( src,ddepth,ksize,anvhor,normalize,borderType)`\n  - ddepth 处理结果图像深度，一般使用-1表示与原始图像使用相同的图像深度\n  - ksize 是滤波核的大小，滤波核大小是指滤波处理过程中所选择的邻域图像的高度和深度\n  - anchor 锚点，其默认值是（-1，-1）表示当前计算均值的点位于核中心点位置，该值使用默认值即可\n  - normalize 表示在滤波时是否进行归一化\n    - =1 要进行归一化\n    - =0 不进行归一化\n\n\n### **高斯滤波**\n\n进行均值滤波和方框滤波时，其邻域内每个像素的权重都是相等的，在高斯滤波中，会将中心点的权重加大，远离中心点的权重减小\n\n核的宽高可以不同，但必须是奇数\n\n`dst = cv2.GaussianBlur(src,ksize,sigmaX,sigmaY,borderType)`\n  - sigmaX 卷积核在水平方向上的标准差\n  - sigmaX 卷积核在垂直方向上的标准差\n- \n\n### **中值滤波**\n\n中值滤波用邻域内所有像素点的中间值来代替当前像素点的像素值\n\n原理，将邻域内所有像素点像素值排序，取得中间位置的像素值作为当前像素点的像素值\n\n`dst= cv2.medianBlur(src, ksize)`\n\n### **双边滤波**\n\n双边滤波是综合考虑空间信息和色彩信息的滤波方式，在滤波过程中能够有效的保护图像类的边缘信息\n\n原理：双边滤波在计算某一个像素点的新值时，不仅考虑距离信息（距离越远，权重越小），还考虑色彩距离（色彩差别越大，权重越小）\n\n作用：保护边缘信息\n\n函数：`dst = cv2.bilateralFilter(src,d,sigmaColor,sigmaSpace,borderType)`\n  - d是选取空间距离的参数\n  - sigmaColor是滤波处理时选取的颜色差值范围\n  - sigmaSpace是坐标空间中的sigma值\n  - borderType边界样式，决定以何种方式处理边界\n\n\n### **2D 卷积**\n\n使用自定义卷积核实现卷积操作：\n`dst= cv2.filter(src,ddepth,kernal,anchor,delta,borderType)`\n","source":"_posts/深度学习/opencv笔记/opencv05.md","raw":"\n## 5，**阈值处理**\n\n阈值处理就是剔除图像中像素值高于一定值或者低于一定值的像素点，比如设定阈值为127，然后：\n- 将图像内所有像素值大于127的像素点设置为255\n- 将图像内像素值小于或等于127的像素点设置为0\n  \nopencv提供`cv2.threshold()`和`cv.adaptiveThreshold`\n\n### **threldhold函数**\n\n`retval, dst = cv2.threshold(src,thresh,maxval,type) `\n\n  - retval返回的阈值\n  - dst代表阈值分割结果图像，与原始图像具有相同的大小和类型\n  - src代表进行阈值阈值分割的图像\n  - thresh 代表设定的阈值\n  - maxval代表当type参数为thresh——binarry或者THRESH_BINARY_INV 类型时，需要设定的最大值\n  - type代表阈值分割的类型：\n    - cv2.THRESH_BINARY       二值化阈值处理\n    - cv2.THRESH_BINARY_INV反 二值化阈值处理\n    - cv2.THRESH_TRUNC        截断阈值化处理\n    - cv2.THRESH_TOZERO_INV   超阈值零处理\n    - CV2.THRESH_TOZERO       低阈值零处理   \n\n### **自适应阈值处理**\n\n也就是变化的阈值完成对图像的阈值处理\n\n`dst = cv.adaptiveThreshold(src, maxval,adaptiveMethod, thresholdType ,blockSize, C)`\n\n  - adaptiveMethod  表示自适应方法有以下两个自适应阈值方法，都是逐个像素的计算自适应阈值，自适应阈值等于每个像素由参数blocksize所指定领域的加权平均值减去常量C\n    - cv2.ADAPTIVE_THRESH_MEAN_C      领域内所有像素点权重值都是一样的\n    - CV2.ADAPTIVE_THRESH_GAUSSIAN_C  与领域各个像素点到中心点的距离相关，通过高斯方程得到各个点的权重值\n  \n  - thresholdType   代表阈值处理方式\n  - blockSize       代表块大小\n \n\n### **otsu处理**\n\n在使用cv2.threshold()进行阈值处理时，需要定义一个阈值，并以此阈值作为阈值处理的依据，通常情况下，图像都是色彩均匀的，这时直接将阈值处理成127比较合适\n\n但是有时图像灰度级分布是不均匀的，如果此时还将阈值设置为127，就不合适。\n\notsu方法能够根据当前图像给出的最佳的类间分隔阈值，简而言之，otsu方法会遍历所有可能的阈值，从而找到最佳的阈值\n\n`t, otsu = cv2.threshold(img,,0,255,cv2.THRESH_BINARY+cv.THRESH_OTSU)`\n\n\n\n##,6，**图像平滑处理**\n\n在尽量保留图像原有信息的情况下，过滤掉图像内部的噪声，这一过程称为 图像平滑处理，也叫 图像模糊处理，也叫做去噪\n\n图像平滑处理的基本原理就是，将噪声所在像素点的值处理为其周围临近像素点的值的近似值，取近似值的方式有如下：\n  - 均值滤波\n  - 方框滤波\n  - 高斯滤波\n  - 中值滤波\n  - 双边滤波\n  - 2D卷积（自定义滤波）\n\n### **均值滤波**\n\n均值滤波是指用当前像素点周围N×N个像素点的滤波来代替当前像素值。\n\n均值滤波函数`dst = cv2.blur(src,ksize,anchor,borderType)`\n  - ksize是滤波核的大小，滤波核大小是指在均值处理中，其邻域图像的高度和宽度。核越大，去噪效果越好，但是越失真\n  - anchor是锚点，默认（-1，-1），表示当前计算均值的点位于核的中心点的位置\n  - bordertype 是边界样式，该值决定以何种方式处理边界\n  - \n### **方框滤波**\n\n方框滤波中，不会计算像素均值，可以自由选择是否对均值滤波的结果进行归一化，即可以自由选择滤波结果是邻域像素之和的平均值，还是邻域像素值之和。\n\n`dst = cv2.boxFilter( src,ddepth,ksize,anvhor,normalize,borderType)`\n  - ddepth 处理结果图像深度，一般使用-1表示与原始图像使用相同的图像深度\n  - ksize 是滤波核的大小，滤波核大小是指滤波处理过程中所选择的邻域图像的高度和深度\n  - anchor 锚点，其默认值是（-1，-1）表示当前计算均值的点位于核中心点位置，该值使用默认值即可\n  - normalize 表示在滤波时是否进行归一化\n    - =1 要进行归一化\n    - =0 不进行归一化\n\n\n### **高斯滤波**\n\n进行均值滤波和方框滤波时，其邻域内每个像素的权重都是相等的，在高斯滤波中，会将中心点的权重加大，远离中心点的权重减小\n\n核的宽高可以不同，但必须是奇数\n\n`dst = cv2.GaussianBlur(src,ksize,sigmaX,sigmaY,borderType)`\n  - sigmaX 卷积核在水平方向上的标准差\n  - sigmaX 卷积核在垂直方向上的标准差\n- \n\n### **中值滤波**\n\n中值滤波用邻域内所有像素点的中间值来代替当前像素点的像素值\n\n原理，将邻域内所有像素点像素值排序，取得中间位置的像素值作为当前像素点的像素值\n\n`dst= cv2.medianBlur(src, ksize)`\n\n### **双边滤波**\n\n双边滤波是综合考虑空间信息和色彩信息的滤波方式，在滤波过程中能够有效的保护图像类的边缘信息\n\n原理：双边滤波在计算某一个像素点的新值时，不仅考虑距离信息（距离越远，权重越小），还考虑色彩距离（色彩差别越大，权重越小）\n\n作用：保护边缘信息\n\n函数：`dst = cv2.bilateralFilter(src,d,sigmaColor,sigmaSpace,borderType)`\n  - d是选取空间距离的参数\n  - sigmaColor是滤波处理时选取的颜色差值范围\n  - sigmaSpace是坐标空间中的sigma值\n  - borderType边界样式，决定以何种方式处理边界\n\n\n### **2D 卷积**\n\n使用自定义卷积核实现卷积操作：\n`dst= cv2.filter(src,ddepth,kernal,anchor,delta,borderType)`\n","slug":"深度学习/opencv笔记/opencv05","published":1,"date":"2020-06-18T18:56:25.276Z","updated":"2020-06-18T18:56:25.276Z","title":"深度学习/opencv笔记/opencv05","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llrv000lj8g54vsl6l8d","content":"<h2 id=\"5阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#5阈值处理\"></a> 5，<strong>阈值处理</strong></h2>\n<p>阈值处理就是剔除图像中像素值高于一定值或者低于一定值的像素点，比如设定阈值为127，然后：</p>\n<ul>\n<li>将图像内所有像素值大于127的像素点设置为255</li>\n<li>将图像内像素值小于或等于127的像素点设置为0</li>\n</ul>\n<p>opencv提供<code>cv2.threshold()</code>和<code>cv.adaptiveThreshold</code></p>\n<h3 id=\"threldhold函数\"><a class=\"markdownIt-Anchor\" href=\"#threldhold函数\"></a> <strong>threldhold函数</strong></h3>\n<p><code>retval, dst = cv2.threshold(src,thresh,maxval,type)</code></p>\n<ul>\n<li>retval返回的阈值</li>\n<li>dst代表阈值分割结果图像，与原始图像具有相同的大小和类型</li>\n<li>src代表进行阈值阈值分割的图像</li>\n<li>thresh 代表设定的阈值</li>\n<li>maxval代表当type参数为thresh——binarry或者THRESH_BINARY_INV 类型时，需要设定的最大值</li>\n<li>type代表阈值分割的类型：\n<ul>\n<li>cv2.THRESH_BINARY       二值化阈值处理</li>\n<li>cv2.THRESH_BINARY_INV反 二值化阈值处理</li>\n<li>cv2.THRESH_TRUNC        截断阈值化处理</li>\n<li>cv2.THRESH_TOZERO_INV   超阈值零处理</li>\n<li>CV2.THRESH_TOZERO       低阈值零处理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"自适应阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#自适应阈值处理\"></a> <strong>自适应阈值处理</strong></h3>\n<p>也就是变化的阈值完成对图像的阈值处理</p>\n<p><code>dst = cv.adaptiveThreshold(src, maxval,adaptiveMethod, thresholdType ,blockSize, C)</code></p>\n<ul>\n<li>\n<p>adaptiveMethod  表示自适应方法有以下两个自适应阈值方法，都是逐个像素的计算自适应阈值，自适应阈值等于每个像素由参数blocksize所指定领域的加权平均值减去常量C</p>\n<ul>\n<li>cv2.ADAPTIVE_THRESH_MEAN_C      领域内所有像素点权重值都是一样的</li>\n<li>CV2.ADAPTIVE_THRESH_GAUSSIAN_C  与领域各个像素点到中心点的距离相关，通过高斯方程得到各个点的权重值</li>\n</ul>\n</li>\n<li>\n<p>thresholdType   代表阈值处理方式</p>\n</li>\n<li>\n<p>blockSize       代表块大小</p>\n</li>\n</ul>\n<h3 id=\"otsu处理\"><a class=\"markdownIt-Anchor\" href=\"#otsu处理\"></a> <strong>otsu处理</strong></h3>\n<p>在使用cv2.threshold()进行阈值处理时，需要定义一个阈值，并以此阈值作为阈值处理的依据，通常情况下，图像都是色彩均匀的，这时直接将阈值处理成127比较合适</p>\n<p>但是有时图像灰度级分布是不均匀的，如果此时还将阈值设置为127，就不合适。</p>\n<p>otsu方法能够根据当前图像给出的最佳的类间分隔阈值，简而言之，otsu方法会遍历所有可能的阈值，从而找到最佳的阈值</p>\n<p><code>t, otsu = cv2.threshold(img,,0,255,cv2.THRESH_BINARY+cv.THRESH_OTSU)</code></p>\n<p>##,6，<strong>图像平滑处理</strong></p>\n<p>在尽量保留图像原有信息的情况下，过滤掉图像内部的噪声，这一过程称为 图像平滑处理，也叫 图像模糊处理，也叫做去噪</p>\n<p>图像平滑处理的基本原理就是，将噪声所在像素点的值处理为其周围临近像素点的值的近似值，取近似值的方式有如下：</p>\n<ul>\n<li>均值滤波</li>\n<li>方框滤波</li>\n<li>高斯滤波</li>\n<li>中值滤波</li>\n<li>双边滤波</li>\n<li>2D卷积（自定义滤波）</li>\n</ul>\n<h3 id=\"均值滤波\"><a class=\"markdownIt-Anchor\" href=\"#均值滤波\"></a> <strong>均值滤波</strong></h3>\n<p>均值滤波是指用当前像素点周围N×N个像素点的滤波来代替当前像素值。</p>\n<p>均值滤波函数<code>dst = cv2.blur(src,ksize,anchor,borderType)</code></p>\n<ul>\n<li>ksize是滤波核的大小，滤波核大小是指在均值处理中，其邻域图像的高度和宽度。核越大，去噪效果越好，但是越失真</li>\n<li>anchor是锚点，默认（-1，-1），表示当前计算均值的点位于核的中心点的位置</li>\n<li>bordertype 是边界样式，该值决定以何种方式处理边界</li>\n<li></li>\n</ul>\n<h3 id=\"方框滤波\"><a class=\"markdownIt-Anchor\" href=\"#方框滤波\"></a> <strong>方框滤波</strong></h3>\n<p>方框滤波中，不会计算像素均值，可以自由选择是否对均值滤波的结果进行归一化，即可以自由选择滤波结果是邻域像素之和的平均值，还是邻域像素值之和。</p>\n<p><code>dst = cv2.boxFilter( src,ddepth,ksize,anvhor,normalize,borderType)</code></p>\n<ul>\n<li>ddepth 处理结果图像深度，一般使用-1表示与原始图像使用相同的图像深度</li>\n<li>ksize 是滤波核的大小，滤波核大小是指滤波处理过程中所选择的邻域图像的高度和深度</li>\n<li>anchor 锚点，其默认值是（-1，-1）表示当前计算均值的点位于核中心点位置，该值使用默认值即可</li>\n<li>normalize 表示在滤波时是否进行归一化\n<ul>\n<li>=1 要进行归一化</li>\n<li>=0 不进行归一化</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"高斯滤波\"><a class=\"markdownIt-Anchor\" href=\"#高斯滤波\"></a> <strong>高斯滤波</strong></h3>\n<p>进行均值滤波和方框滤波时，其邻域内每个像素的权重都是相等的，在高斯滤波中，会将中心点的权重加大，远离中心点的权重减小</p>\n<p>核的宽高可以不同，但必须是奇数</p>\n<p><code>dst = cv2.GaussianBlur(src,ksize,sigmaX,sigmaY,borderType)</code></p>\n<ul>\n<li>sigmaX 卷积核在水平方向上的标准差</li>\n<li>sigmaX 卷积核在垂直方向上的标准差</li>\n<li></li>\n</ul>\n<h3 id=\"中值滤波\"><a class=\"markdownIt-Anchor\" href=\"#中值滤波\"></a> <strong>中值滤波</strong></h3>\n<p>中值滤波用邻域内所有像素点的中间值来代替当前像素点的像素值</p>\n<p>原理，将邻域内所有像素点像素值排序，取得中间位置的像素值作为当前像素点的像素值</p>\n<p><code>dst= cv2.medianBlur(src, ksize)</code></p>\n<h3 id=\"双边滤波\"><a class=\"markdownIt-Anchor\" href=\"#双边滤波\"></a> <strong>双边滤波</strong></h3>\n<p>双边滤波是综合考虑空间信息和色彩信息的滤波方式，在滤波过程中能够有效的保护图像类的边缘信息</p>\n<p>原理：双边滤波在计算某一个像素点的新值时，不仅考虑距离信息（距离越远，权重越小），还考虑色彩距离（色彩差别越大，权重越小）</p>\n<p>作用：保护边缘信息</p>\n<p>函数：<code>dst = cv2.bilateralFilter(src,d,sigmaColor,sigmaSpace,borderType)</code></p>\n<ul>\n<li>d是选取空间距离的参数</li>\n<li>sigmaColor是滤波处理时选取的颜色差值范围</li>\n<li>sigmaSpace是坐标空间中的sigma值</li>\n<li>borderType边界样式，决定以何种方式处理边界</li>\n</ul>\n<h3 id=\"2d-卷积\"><a class=\"markdownIt-Anchor\" href=\"#2d-卷积\"></a> <strong>2D 卷积</strong></h3>\n<p>使用自定义卷积核实现卷积操作：<br />\n<code>dst= cv2.filter(src,ddepth,kernal,anchor,delta,borderType)</code></p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"PAHWPB","length":2329,"excerpt":"","more":"<h2 id=\"5阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#5阈值处理\"></a> 5，<strong>阈值处理</strong></h2>\n<p>阈值处理就是剔除图像中像素值高于一定值或者低于一定值的像素点，比如设定阈值为127，然后：</p>\n<ul>\n<li>将图像内所有像素值大于127的像素点设置为255</li>\n<li>将图像内像素值小于或等于127的像素点设置为0</li>\n</ul>\n<p>opencv提供<code>cv2.threshold()</code>和<code>cv.adaptiveThreshold</code></p>\n<h3 id=\"threldhold函数\"><a class=\"markdownIt-Anchor\" href=\"#threldhold函数\"></a> <strong>threldhold函数</strong></h3>\n<p><code>retval, dst = cv2.threshold(src,thresh,maxval,type)</code></p>\n<ul>\n<li>retval返回的阈值</li>\n<li>dst代表阈值分割结果图像，与原始图像具有相同的大小和类型</li>\n<li>src代表进行阈值阈值分割的图像</li>\n<li>thresh 代表设定的阈值</li>\n<li>maxval代表当type参数为thresh——binarry或者THRESH_BINARY_INV 类型时，需要设定的最大值</li>\n<li>type代表阈值分割的类型：\n<ul>\n<li>cv2.THRESH_BINARY       二值化阈值处理</li>\n<li>cv2.THRESH_BINARY_INV反 二值化阈值处理</li>\n<li>cv2.THRESH_TRUNC        截断阈值化处理</li>\n<li>cv2.THRESH_TOZERO_INV   超阈值零处理</li>\n<li>CV2.THRESH_TOZERO       低阈值零处理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"自适应阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#自适应阈值处理\"></a> <strong>自适应阈值处理</strong></h3>\n<p>也就是变化的阈值完成对图像的阈值处理</p>\n<p><code>dst = cv.adaptiveThreshold(src, maxval,adaptiveMethod, thresholdType ,blockSize, C)</code></p>\n<ul>\n<li>\n<p>adaptiveMethod  表示自适应方法有以下两个自适应阈值方法，都是逐个像素的计算自适应阈值，自适应阈值等于每个像素由参数blocksize所指定领域的加权平均值减去常量C</p>\n<ul>\n<li>cv2.ADAPTIVE_THRESH_MEAN_C      领域内所有像素点权重值都是一样的</li>\n<li>CV2.ADAPTIVE_THRESH_GAUSSIAN_C  与领域各个像素点到中心点的距离相关，通过高斯方程得到各个点的权重值</li>\n</ul>\n</li>\n<li>\n<p>thresholdType   代表阈值处理方式</p>\n</li>\n<li>\n<p>blockSize       代表块大小</p>\n</li>\n</ul>\n<h3 id=\"otsu处理\"><a class=\"markdownIt-Anchor\" href=\"#otsu处理\"></a> <strong>otsu处理</strong></h3>\n<p>在使用cv2.threshold()进行阈值处理时，需要定义一个阈值，并以此阈值作为阈值处理的依据，通常情况下，图像都是色彩均匀的，这时直接将阈值处理成127比较合适</p>\n<p>但是有时图像灰度级分布是不均匀的，如果此时还将阈值设置为127，就不合适。</p>\n<p>otsu方法能够根据当前图像给出的最佳的类间分隔阈值，简而言之，otsu方法会遍历所有可能的阈值，从而找到最佳的阈值</p>\n<p><code>t, otsu = cv2.threshold(img,,0,255,cv2.THRESH_BINARY+cv.THRESH_OTSU)</code></p>\n<p>##,6，<strong>图像平滑处理</strong></p>\n<p>在尽量保留图像原有信息的情况下，过滤掉图像内部的噪声，这一过程称为 图像平滑处理，也叫 图像模糊处理，也叫做去噪</p>\n<p>图像平滑处理的基本原理就是，将噪声所在像素点的值处理为其周围临近像素点的值的近似值，取近似值的方式有如下：</p>\n<ul>\n<li>均值滤波</li>\n<li>方框滤波</li>\n<li>高斯滤波</li>\n<li>中值滤波</li>\n<li>双边滤波</li>\n<li>2D卷积（自定义滤波）</li>\n</ul>\n<h3 id=\"均值滤波\"><a class=\"markdownIt-Anchor\" href=\"#均值滤波\"></a> <strong>均值滤波</strong></h3>\n<p>均值滤波是指用当前像素点周围N×N个像素点的滤波来代替当前像素值。</p>\n<p>均值滤波函数<code>dst = cv2.blur(src,ksize,anchor,borderType)</code></p>\n<ul>\n<li>ksize是滤波核的大小，滤波核大小是指在均值处理中，其邻域图像的高度和宽度。核越大，去噪效果越好，但是越失真</li>\n<li>anchor是锚点，默认（-1，-1），表示当前计算均值的点位于核的中心点的位置</li>\n<li>bordertype 是边界样式，该值决定以何种方式处理边界</li>\n<li></li>\n</ul>\n<h3 id=\"方框滤波\"><a class=\"markdownIt-Anchor\" href=\"#方框滤波\"></a> <strong>方框滤波</strong></h3>\n<p>方框滤波中，不会计算像素均值，可以自由选择是否对均值滤波的结果进行归一化，即可以自由选择滤波结果是邻域像素之和的平均值，还是邻域像素值之和。</p>\n<p><code>dst = cv2.boxFilter( src,ddepth,ksize,anvhor,normalize,borderType)</code></p>\n<ul>\n<li>ddepth 处理结果图像深度，一般使用-1表示与原始图像使用相同的图像深度</li>\n<li>ksize 是滤波核的大小，滤波核大小是指滤波处理过程中所选择的邻域图像的高度和深度</li>\n<li>anchor 锚点，其默认值是（-1，-1）表示当前计算均值的点位于核中心点位置，该值使用默认值即可</li>\n<li>normalize 表示在滤波时是否进行归一化\n<ul>\n<li>=1 要进行归一化</li>\n<li>=0 不进行归一化</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"高斯滤波\"><a class=\"markdownIt-Anchor\" href=\"#高斯滤波\"></a> <strong>高斯滤波</strong></h3>\n<p>进行均值滤波和方框滤波时，其邻域内每个像素的权重都是相等的，在高斯滤波中，会将中心点的权重加大，远离中心点的权重减小</p>\n<p>核的宽高可以不同，但必须是奇数</p>\n<p><code>dst = cv2.GaussianBlur(src,ksize,sigmaX,sigmaY,borderType)</code></p>\n<ul>\n<li>sigmaX 卷积核在水平方向上的标准差</li>\n<li>sigmaX 卷积核在垂直方向上的标准差</li>\n<li></li>\n</ul>\n<h3 id=\"中值滤波\"><a class=\"markdownIt-Anchor\" href=\"#中值滤波\"></a> <strong>中值滤波</strong></h3>\n<p>中值滤波用邻域内所有像素点的中间值来代替当前像素点的像素值</p>\n<p>原理，将邻域内所有像素点像素值排序，取得中间位置的像素值作为当前像素点的像素值</p>\n<p><code>dst= cv2.medianBlur(src, ksize)</code></p>\n<h3 id=\"双边滤波\"><a class=\"markdownIt-Anchor\" href=\"#双边滤波\"></a> <strong>双边滤波</strong></h3>\n<p>双边滤波是综合考虑空间信息和色彩信息的滤波方式，在滤波过程中能够有效的保护图像类的边缘信息</p>\n<p>原理：双边滤波在计算某一个像素点的新值时，不仅考虑距离信息（距离越远，权重越小），还考虑色彩距离（色彩差别越大，权重越小）</p>\n<p>作用：保护边缘信息</p>\n<p>函数：<code>dst = cv2.bilateralFilter(src,d,sigmaColor,sigmaSpace,borderType)</code></p>\n<ul>\n<li>d是选取空间距离的参数</li>\n<li>sigmaColor是滤波处理时选取的颜色差值范围</li>\n<li>sigmaSpace是坐标空间中的sigma值</li>\n<li>borderType边界样式，决定以何种方式处理边界</li>\n</ul>\n<h3 id=\"2d-卷积\"><a class=\"markdownIt-Anchor\" href=\"#2d-卷积\"></a> <strong>2D 卷积</strong></h3>\n<p>使用自定义卷积核实现卷积操作：<br />\n<code>dst= cv2.filter(src,ddepth,kernal,anchor,delta,borderType)</code></p>\n"},{"_content":"\n## 7，**图像梯度**\n\n图像梯度的计算就是图像变化的速度，对于图像的边缘部分，其灰度值变化较大，梯度值也较大，相反，对于图像中比较平滑的部分，其灰度值较小，相应的梯度值也较小\n\n### **sobel 理论基础**\n\n利用局部差分寻找边缘，一般有水平方向的Gx和垂直方向的Gy两个分量\n\n水平方向的分量等于，像素点的左侧像素值减去右侧像素值\n\n垂直方向的分量等于，像素点的上方像素值减去下方像素值\n\nsobel核的算子一般如下：\n$$\nGx=  \n\\left[\\begin{matrix}\n   -1 & 0 & 1 \\\\\n   -2 & 0 & 2 \\\\\n   -1 & 0 & 1 \\\\\n  \\end{matrix} \\right]\\tag{A}\n$$\n\n$$\nGy=\n\\left[\\begin{matrix}\n   -1 & -2 & -1 \\\\\n   0 & 0 & 0 \\\\\n   1 & 2 & 1 \\\\\n  \\end{matrix} \\right]\\tag{B}\n$$ \n\n### **sobel算子及函数使用**\n\n`cv2.Sobel(src,ddepth,dx,dy,ksize,scale,delta,borderType)`\n  - dx：表示x方向上的求导阶数\n  - dy：表示y方向上的求导阶数\n  - ksize；表示核大小\n  - scale：表示计算导数值采用的缩放因子\n  - delta：表示加在目标图像dst上的值\n  \n### **scharr 算子及函数使用**\n\nscharr和sobel计算流程是一样的，只是核不一样，scharr的核如下\n\n$$\nGx=  \n\\left[\\begin{matrix}\n   -3 & 0 & 3 \\\\\n   -10 & 0 & 10 \\\\\n   -3 & 0 & 3 \\\\\n  \\end{matrix} \\right]\\tag{A}\n$$\n\n$$\nGy=\n\\left[\\begin{matrix}\n   -3 & -10 & -3 \\\\\n   0 & 0 & 0 \\\\\n   3 & 10 & 3 \\\\\n  \\end{matrix} \\right]\\tag{B}\n$$\n\n### **Laplacian 算子及函数使用**\n\nLaplacian是一种二阶导数算子，其具有旋转不变性，可以满足不同方向上的图像边缘锐化（边缘检测）的要求，通常情况下，其算子的系数之和需要为0\n算子核如下：\n$$\n\\left[\\begin{matrix}\n   0 & 1 & 0 \\\\\n   1 & -4 & 1 \\\\\n   0 & 1 & 0 \\\\\n  \\end{matrix} \\right]\n$$\n\n\n### **算子总结**\n\nsobel算子：\n$$\nGx=  \n\\left[\\begin{matrix}\n   -3 & 0 & 3 \\\\\n   -10 & 0 & 10 \\\\\n   -3 & 0 & 3 \\\\\n  \\end{matrix} \\right]\n  ，\n  Gy=\n\\left[\\begin{matrix}\n   -3 & -10 & -3 \\\\\n   0 & 0 & 0 \\\\\n   3 & 10 & 3 \\\\\n  \\end{matrix} \\right]\n$$\n\nscharr算子：\n$$\nGx=  \n\\left[\\begin{matrix}\n   -3 & 0 & 3 \\\\\n   -10 & 0 & 10 \\\\\n   -3 & 0 & 3 \\\\\n  \\end{matrix} \\right]\n，\nGy=\n\\left[\\begin{matrix}\n   -3 & -10 & -3 \\\\\n   0 & 0 & 0 \\\\\n   3 & 10 & 3 \\\\\n  \\end{matrix} \\right]\n$$\nlaplacian算子：\n$$\n\\left[\\begin{matrix}\n   0 & 1 & 0 \\\\\n   1 & -4 & 1 \\\\\n   0 & 1 & 0 \\\\\n  \\end{matrix} \\right]\n$$\n","source":"_posts/深度学习/opencv笔记/opencv07.md","raw":"\n## 7，**图像梯度**\n\n图像梯度的计算就是图像变化的速度，对于图像的边缘部分，其灰度值变化较大，梯度值也较大，相反，对于图像中比较平滑的部分，其灰度值较小，相应的梯度值也较小\n\n### **sobel 理论基础**\n\n利用局部差分寻找边缘，一般有水平方向的Gx和垂直方向的Gy两个分量\n\n水平方向的分量等于，像素点的左侧像素值减去右侧像素值\n\n垂直方向的分量等于，像素点的上方像素值减去下方像素值\n\nsobel核的算子一般如下：\n$$\nGx=  \n\\left[\\begin{matrix}\n   -1 & 0 & 1 \\\\\n   -2 & 0 & 2 \\\\\n   -1 & 0 & 1 \\\\\n  \\end{matrix} \\right]\\tag{A}\n$$\n\n$$\nGy=\n\\left[\\begin{matrix}\n   -1 & -2 & -1 \\\\\n   0 & 0 & 0 \\\\\n   1 & 2 & 1 \\\\\n  \\end{matrix} \\right]\\tag{B}\n$$ \n\n### **sobel算子及函数使用**\n\n`cv2.Sobel(src,ddepth,dx,dy,ksize,scale,delta,borderType)`\n  - dx：表示x方向上的求导阶数\n  - dy：表示y方向上的求导阶数\n  - ksize；表示核大小\n  - scale：表示计算导数值采用的缩放因子\n  - delta：表示加在目标图像dst上的值\n  \n### **scharr 算子及函数使用**\n\nscharr和sobel计算流程是一样的，只是核不一样，scharr的核如下\n\n$$\nGx=  \n\\left[\\begin{matrix}\n   -3 & 0 & 3 \\\\\n   -10 & 0 & 10 \\\\\n   -3 & 0 & 3 \\\\\n  \\end{matrix} \\right]\\tag{A}\n$$\n\n$$\nGy=\n\\left[\\begin{matrix}\n   -3 & -10 & -3 \\\\\n   0 & 0 & 0 \\\\\n   3 & 10 & 3 \\\\\n  \\end{matrix} \\right]\\tag{B}\n$$\n\n### **Laplacian 算子及函数使用**\n\nLaplacian是一种二阶导数算子，其具有旋转不变性，可以满足不同方向上的图像边缘锐化（边缘检测）的要求，通常情况下，其算子的系数之和需要为0\n算子核如下：\n$$\n\\left[\\begin{matrix}\n   0 & 1 & 0 \\\\\n   1 & -4 & 1 \\\\\n   0 & 1 & 0 \\\\\n  \\end{matrix} \\right]\n$$\n\n\n### **算子总结**\n\nsobel算子：\n$$\nGx=  \n\\left[\\begin{matrix}\n   -3 & 0 & 3 \\\\\n   -10 & 0 & 10 \\\\\n   -3 & 0 & 3 \\\\\n  \\end{matrix} \\right]\n  ，\n  Gy=\n\\left[\\begin{matrix}\n   -3 & -10 & -3 \\\\\n   0 & 0 & 0 \\\\\n   3 & 10 & 3 \\\\\n  \\end{matrix} \\right]\n$$\n\nscharr算子：\n$$\nGx=  \n\\left[\\begin{matrix}\n   -3 & 0 & 3 \\\\\n   -10 & 0 & 10 \\\\\n   -3 & 0 & 3 \\\\\n  \\end{matrix} \\right]\n，\nGy=\n\\left[\\begin{matrix}\n   -3 & -10 & -3 \\\\\n   0 & 0 & 0 \\\\\n   3 & 10 & 3 \\\\\n  \\end{matrix} \\right]\n$$\nlaplacian算子：\n$$\n\\left[\\begin{matrix}\n   0 & 1 & 0 \\\\\n   1 & -4 & 1 \\\\\n   0 & 1 & 0 \\\\\n  \\end{matrix} \\right]\n$$\n","slug":"深度学习/opencv笔记/opencv07","published":1,"date":"2020-06-18T18:56:25.277Z","updated":"2020-06-18T18:56:25.278Z","title":"深度学习/opencv笔记/opencv07","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llrv000mj8g574a92gx2","content":"<h2 id=\"7图像梯度\"><a class=\"markdownIt-Anchor\" href=\"#7图像梯度\"></a> 7，<strong>图像梯度</strong></h2>\n<p>图像梯度的计算就是图像变化的速度，对于图像的边缘部分，其灰度值变化较大，梯度值也较大，相反，对于图像中比较平滑的部分，其灰度值较小，相应的梯度值也较小</p>\n<h3 id=\"sobel-理论基础\"><a class=\"markdownIt-Anchor\" href=\"#sobel-理论基础\"></a> <strong>sobel 理论基础</strong></h3>\n<p>利用局部差分寻找边缘，一般有水平方向的Gx和垂直方向的Gy两个分量</p>\n<p>水平方向的分量等于，像素点的左侧像素值减去右侧像素值</p>\n<p>垂直方向的分量等于，像素点的上方像素值减去下方像素值</p>\n<p>sobel核的算子一般如下：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">Gx=  \n\\left[\\begin{matrix}\n   -1 &amp; 0 &amp; 1 \\\\\n   -2 &amp; 0 &amp; 2 \\\\\n   -1 &amp; 0 &amp; 1 \\\\\n  \\end{matrix} \\right]\\tag{A}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">2</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">A</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(B)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">Gy=\n\\left[\\begin{matrix}\n   -1 &amp; -2 &amp; -1 \\\\\n   0 &amp; 0 &amp; 0 \\\\\n   1 &amp; 2 &amp; 1 \\\\\n  \\end{matrix} \\right]\\tag{B}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">2</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">B</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<h3 id=\"sobel算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#sobel算子及函数使用\"></a> <strong>sobel算子及函数使用</strong></h3>\n<p><code>cv2.Sobel(src,ddepth,dx,dy,ksize,scale,delta,borderType)</code></p>\n<ul>\n<li>dx：表示x方向上的求导阶数</li>\n<li>dy：表示y方向上的求导阶数</li>\n<li>ksize；表示核大小</li>\n<li>scale：表示计算导数值采用的缩放因子</li>\n<li>delta：表示加在目标图像dst上的值</li>\n</ul>\n<h3 id=\"scharr-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#scharr-算子及函数使用\"></a> <strong>scharr 算子及函数使用</strong></h3>\n<p>scharr和sobel计算流程是一样的，只是核不一样，scharr的核如下</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">Gx=  \n\\left[\\begin{matrix}\n   -3 &amp; 0 &amp; 3 \\\\\n   -10 &amp; 0 &amp; 10 \\\\\n   -3 &amp; 0 &amp; 3 \\\\\n  \\end{matrix} \\right]\\tag{A}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">A</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(B)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">Gy=\n\\left[\\begin{matrix}\n   -3 &amp; -10 &amp; -3 \\\\\n   0 &amp; 0 &amp; 0 \\\\\n   3 &amp; 10 &amp; 3 \\\\\n  \\end{matrix} \\right]\\tag{B}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">B</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<h3 id=\"laplacian-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#laplacian-算子及函数使用\"></a> <strong>Laplacian 算子及函数使用</strong></h3>\n<p>Laplacian是一种二阶导数算子，其具有旋转不变性，可以满足不同方向上的图像边缘锐化（边缘检测）的要求，通常情况下，其算子的系数之和需要为0<br />\n算子核如下：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\left[\\begin{matrix}\n   0 &amp; 1 &amp; 0 \\\\\n   1 &amp; -4 &amp; 1 \\\\\n   0 &amp; 1 &amp; 0 \\\\\n  \\end{matrix} \\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">4</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"算子总结\"><a class=\"markdownIt-Anchor\" href=\"#算子总结\"></a> <strong>算子总结</strong></h3>\n<p>sobel算子：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mi mathvariant=\"normal\">，</mi><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">Gx=  \n\\left[\\begin{matrix}\n   -3 &amp; 0 &amp; 3 \\\\\n   -10 &amp; 0 &amp; 10 \\\\\n   -3 &amp; 0 &amp; 3 \\\\\n  \\end{matrix} \\right]\n  ，\n  Gy=\n\\left[\\begin{matrix}\n   -3 &amp; -10 &amp; -3 \\\\\n   0 &amp; 0 &amp; 0 \\\\\n   3 &amp; 10 &amp; 3 \\\\\n  \\end{matrix} \\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>scharr算子：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mi mathvariant=\"normal\">，</mi><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">Gx=  \n\\left[\\begin{matrix}\n   -3 &amp; 0 &amp; 3 \\\\\n   -10 &amp; 0 &amp; 10 \\\\\n   -3 &amp; 0 &amp; 3 \\\\\n  \\end{matrix} \\right]\n，\nGy=\n\\left[\\begin{matrix}\n   -3 &amp; -10 &amp; -3 \\\\\n   0 &amp; 0 &amp; 0 \\\\\n   3 &amp; 10 &amp; 3 \\\\\n  \\end{matrix} \\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>laplacian算子：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\left[\\begin{matrix}\n   0 &amp; 1 &amp; 0 \\\\\n   1 &amp; -4 &amp; 1 \\\\\n   0 &amp; 1 &amp; 0 \\\\\n  \\end{matrix} \\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">4</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"31AD4Z7","length":1888,"excerpt":"","more":"<h2 id=\"7图像梯度\"><a class=\"markdownIt-Anchor\" href=\"#7图像梯度\"></a> 7，<strong>图像梯度</strong></h2>\n<p>图像梯度的计算就是图像变化的速度，对于图像的边缘部分，其灰度值变化较大，梯度值也较大，相反，对于图像中比较平滑的部分，其灰度值较小，相应的梯度值也较小</p>\n<h3 id=\"sobel-理论基础\"><a class=\"markdownIt-Anchor\" href=\"#sobel-理论基础\"></a> <strong>sobel 理论基础</strong></h3>\n<p>利用局部差分寻找边缘，一般有水平方向的Gx和垂直方向的Gy两个分量</p>\n<p>水平方向的分量等于，像素点的左侧像素值减去右侧像素值</p>\n<p>垂直方向的分量等于，像素点的上方像素值减去下方像素值</p>\n<p>sobel核的算子一般如下：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">Gx=  \n\\left[\\begin{matrix}\n   -1 &amp; 0 &amp; 1 \\\\\n   -2 &amp; 0 &amp; 2 \\\\\n   -1 &amp; 0 &amp; 1 \\\\\n  \\end{matrix} \\right]\\tag{A}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">2</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">A</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(B)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">Gy=\n\\left[\\begin{matrix}\n   -1 &amp; -2 &amp; -1 \\\\\n   0 &amp; 0 &amp; 0 \\\\\n   1 &amp; 2 &amp; 1 \\\\\n  \\end{matrix} \\right]\\tag{B}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">2</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">B</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<h3 id=\"sobel算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#sobel算子及函数使用\"></a> <strong>sobel算子及函数使用</strong></h3>\n<p><code>cv2.Sobel(src,ddepth,dx,dy,ksize,scale,delta,borderType)</code></p>\n<ul>\n<li>dx：表示x方向上的求导阶数</li>\n<li>dy：表示y方向上的求导阶数</li>\n<li>ksize；表示核大小</li>\n<li>scale：表示计算导数值采用的缩放因子</li>\n<li>delta：表示加在目标图像dst上的值</li>\n</ul>\n<h3 id=\"scharr-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#scharr-算子及函数使用\"></a> <strong>scharr 算子及函数使用</strong></h3>\n<p>scharr和sobel计算流程是一样的，只是核不一样，scharr的核如下</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">Gx=  \n\\left[\\begin{matrix}\n   -3 &amp; 0 &amp; 3 \\\\\n   -10 &amp; 0 &amp; 10 \\\\\n   -3 &amp; 0 &amp; 3 \\\\\n  \\end{matrix} \\right]\\tag{A}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">A</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(B)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">Gy=\n\\left[\\begin{matrix}\n   -3 &amp; -10 &amp; -3 \\\\\n   0 &amp; 0 &amp; 0 \\\\\n   3 &amp; 10 &amp; 3 \\\\\n  \\end{matrix} \\right]\\tag{B}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">B</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<h3 id=\"laplacian-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#laplacian-算子及函数使用\"></a> <strong>Laplacian 算子及函数使用</strong></h3>\n<p>Laplacian是一种二阶导数算子，其具有旋转不变性，可以满足不同方向上的图像边缘锐化（边缘检测）的要求，通常情况下，其算子的系数之和需要为0<br />\n算子核如下：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\left[\\begin{matrix}\n   0 &amp; 1 &amp; 0 \\\\\n   1 &amp; -4 &amp; 1 \\\\\n   0 &amp; 1 &amp; 0 \\\\\n  \\end{matrix} \\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">4</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"算子总结\"><a class=\"markdownIt-Anchor\" href=\"#算子总结\"></a> <strong>算子总结</strong></h3>\n<p>sobel算子：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mi mathvariant=\"normal\">，</mi><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">Gx=  \n\\left[\\begin{matrix}\n   -3 &amp; 0 &amp; 3 \\\\\n   -10 &amp; 0 &amp; 10 \\\\\n   -3 &amp; 0 &amp; 3 \\\\\n  \\end{matrix} \\right]\n  ，\n  Gy=\n\\left[\\begin{matrix}\n   -3 &amp; -10 &amp; -3 \\\\\n   0 &amp; 0 &amp; 0 \\\\\n   3 &amp; 10 &amp; 3 \\\\\n  \\end{matrix} \\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>scharr算子：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mi mathvariant=\"normal\">，</mi><mi>G</mi><mi>y</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>10</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">Gx=  \n\\left[\\begin{matrix}\n   -3 &amp; 0 &amp; 3 \\\\\n   -10 &amp; 0 &amp; 10 \\\\\n   -3 &amp; 0 &amp; 3 \\\\\n  \\end{matrix} \\right]\n，\nGy=\n\\left[\\begin{matrix}\n   -3 &amp; -10 &amp; -3 \\\\\n   0 &amp; 0 &amp; 0 \\\\\n   3 &amp; 10 &amp; 3 \\\\\n  \\end{matrix} \\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>laplacian算子：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\left[\\begin{matrix}\n   0 &amp; 1 &amp; 0 \\\\\n   1 &amp; -4 &amp; 1 \\\\\n   0 &amp; 1 &amp; 0 \\\\\n  \\end{matrix} \\right]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">4</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n"},{"_content":"\n## 8，**canny边缘检测**\n\ncanny检测步骤：\n1. 去噪，噪声会影响边缘检测的准确性\n    - 应用高斯滤波器去噪，一般采用5*5的核\n    - 高斯滤波的特点，离中心越远权值越小\n2. 计算梯度的幅度和方向\n     - 梯度的方向和边缘方向是垂直的\n    - 根据边缘检测算子得出的水平和垂直方向的分量，计算出梯度的幅度和方向\n$$\n梯度的幅度：G = \\sqrt{G_x^2} +\\sqrt{G_y^2}  \n$$\n$$\n梯度的方向：\\theta = arctan( \\sqrt{G_x^2} ,\\sqrt{G_y^2})\n$$\n\n3. 极非大值抑制，即适当的让边缘变瘦\n     - 如果该点是正负梯度上的局部最大值，保留该点\n     - 如果不是，则抑制该点（归零）\n\n4. 确定边缘，使用双阈值算法确定最终的边缘信息\n     - 设置两个阈值，一个为高阈值maxval,一个为低阈值minval\n     - 如果当前边缘像素的梯度值大于maxval，则将当前边缘标记为强边缘\n     - 如果当前边缘像素梯度值介于maxval和minval之间，则将当前边缘像素标记为虚边缘\n     - 如果小于minval，则抑制但钱边缘像素\n     - 与强边缘相连，则将该边缘标记为边缘\n     - 与强边缘无连接，则将该边缘抑制\n\n### **canny函数及使用**\n  \n`edges = cv.Canny(image ,threshold1, threshold2, apertureSize, L2gradient)`\n     - threshold1第一个阈值\n     - threshold2第二个阈值\n     - apertureSize表示sobel孔径的大小\n     - L2gradient计算梯度幅度的标识\n\n","source":"_posts/深度学习/opencv笔记/opencv08.md","raw":"\n## 8，**canny边缘检测**\n\ncanny检测步骤：\n1. 去噪，噪声会影响边缘检测的准确性\n    - 应用高斯滤波器去噪，一般采用5*5的核\n    - 高斯滤波的特点，离中心越远权值越小\n2. 计算梯度的幅度和方向\n     - 梯度的方向和边缘方向是垂直的\n    - 根据边缘检测算子得出的水平和垂直方向的分量，计算出梯度的幅度和方向\n$$\n梯度的幅度：G = \\sqrt{G_x^2} +\\sqrt{G_y^2}  \n$$\n$$\n梯度的方向：\\theta = arctan( \\sqrt{G_x^2} ,\\sqrt{G_y^2})\n$$\n\n3. 极非大值抑制，即适当的让边缘变瘦\n     - 如果该点是正负梯度上的局部最大值，保留该点\n     - 如果不是，则抑制该点（归零）\n\n4. 确定边缘，使用双阈值算法确定最终的边缘信息\n     - 设置两个阈值，一个为高阈值maxval,一个为低阈值minval\n     - 如果当前边缘像素的梯度值大于maxval，则将当前边缘标记为强边缘\n     - 如果当前边缘像素梯度值介于maxval和minval之间，则将当前边缘像素标记为虚边缘\n     - 如果小于minval，则抑制但钱边缘像素\n     - 与强边缘相连，则将该边缘标记为边缘\n     - 与强边缘无连接，则将该边缘抑制\n\n### **canny函数及使用**\n  \n`edges = cv.Canny(image ,threshold1, threshold2, apertureSize, L2gradient)`\n     - threshold1第一个阈值\n     - threshold2第二个阈值\n     - apertureSize表示sobel孔径的大小\n     - L2gradient计算梯度幅度的标识\n\n","slug":"深度学习/opencv笔记/opencv08","published":1,"date":"2020-06-18T18:56:25.278Z","updated":"2020-06-18T18:56:25.278Z","title":"深度学习/opencv笔记/opencv08","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llrw000nj8g5946z1pbr","content":"<h2 id=\"8canny边缘检测\"><a class=\"markdownIt-Anchor\" href=\"#8canny边缘检测\"></a> 8，<strong>canny边缘检测</strong></h2>\n<p>canny检测步骤：</p>\n<ol>\n<li>去噪，噪声会影响边缘检测的准确性\n<ul>\n<li>应用高斯滤波器去噪，一般采用5*5的核</li>\n<li>高斯滤波的特点，离中心越远权值越小</li>\n</ul>\n</li>\n<li>计算梯度的幅度和方向\n<ul>\n<li>梯度的方向和边缘方向是垂直的</li>\n<li>根据边缘检测算子得出的水平和垂直方向的分量，计算出梯度的幅度和方向</li>\n</ul>\n</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">梯</mi><mi mathvariant=\"normal\">度</mi><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">幅</mi><mi mathvariant=\"normal\">度</mi><mi mathvariant=\"normal\">：</mi><mi>G</mi><mo>=</mo><msqrt><msubsup><mi>G</mi><mi>x</mi><mn>2</mn></msubsup></msqrt><mo>+</mo><msqrt><msubsup><mi>G</mi><mi>y</mi><mn>2</mn></msubsup></msqrt></mrow><annotation encoding=\"application/x-tex\">梯度的幅度：G = \\sqrt{G_x^2} +\\sqrt{G_y^2}  \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">梯</span><span class=\"mord cjk_fallback\">度</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">幅</span><span class=\"mord cjk_fallback\">度</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord mathdefault\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.259571em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.980429em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathdefault\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.940429em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\ns76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.259571em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.84em;vertical-align:-0.6276250000000001em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.212375em;\"><span class=\"svg-align\" style=\"top:-3.8em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathdefault\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401079999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.383108em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.1723749999999997em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.8800000000000001em;\"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\nM1001 80H400000v40H1013z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6276250000000001em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">梯</mi><mi mathvariant=\"normal\">度</mi><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">方</mi><mi mathvariant=\"normal\">向</mi><mi mathvariant=\"normal\">：</mi><mi>θ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msqrt><msubsup><mi>G</mi><mi>x</mi><mn>2</mn></msubsup></msqrt><mo separator=\"true\">,</mo><msqrt><msubsup><mi>G</mi><mi>y</mi><mn>2</mn></msubsup></msqrt><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">梯度的方向：\\theta = arctan( \\sqrt{G_x^2} ,\\sqrt{G_y^2})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">梯</span><span class=\"mord cjk_fallback\">度</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">方</span><span class=\"mord cjk_fallback\">向</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.84em;vertical-align:-0.6276250000000001em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">(</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.980429em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathdefault\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.940429em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\ns76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.259571em;\"><span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.212375em;\"><span class=\"svg-align\" style=\"top:-3.8em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathdefault\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401079999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.383108em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.1723749999999997em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.8800000000000001em;\"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\nM1001 80H400000v40H1013z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6276250000000001em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ol start=\"3\">\n<li>\n<p>极非大值抑制，即适当的让边缘变瘦</p>\n<ul>\n<li>如果该点是正负梯度上的局部最大值，保留该点</li>\n<li>如果不是，则抑制该点（归零）</li>\n</ul>\n</li>\n<li>\n<p>确定边缘，使用双阈值算法确定最终的边缘信息</p>\n<ul>\n<li>设置两个阈值，一个为高阈值maxval,一个为低阈值minval</li>\n<li>如果当前边缘像素的梯度值大于maxval，则将当前边缘标记为强边缘</li>\n<li>如果当前边缘像素梯度值介于maxval和minval之间，则将当前边缘像素标记为虚边缘</li>\n<li>如果小于minval，则抑制但钱边缘像素</li>\n<li>与强边缘相连，则将该边缘标记为边缘</li>\n<li>与强边缘无连接，则将该边缘抑制</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"canny函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#canny函数及使用\"></a> <strong>canny函数及使用</strong></h3>\n<p><code>edges = cv.Canny(image ,threshold1, threshold2, apertureSize, L2gradient)</code><br />\n- threshold1第一个阈值<br />\n- threshold2第二个阈值<br />\n- apertureSize表示sobel孔径的大小<br />\n- L2gradient计算梯度幅度的标识</p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"191K3KP","length":679,"excerpt":"","more":"<h2 id=\"8canny边缘检测\"><a class=\"markdownIt-Anchor\" href=\"#8canny边缘检测\"></a> 8，<strong>canny边缘检测</strong></h2>\n<p>canny检测步骤：</p>\n<ol>\n<li>去噪，噪声会影响边缘检测的准确性\n<ul>\n<li>应用高斯滤波器去噪，一般采用5*5的核</li>\n<li>高斯滤波的特点，离中心越远权值越小</li>\n</ul>\n</li>\n<li>计算梯度的幅度和方向\n<ul>\n<li>梯度的方向和边缘方向是垂直的</li>\n<li>根据边缘检测算子得出的水平和垂直方向的分量，计算出梯度的幅度和方向</li>\n</ul>\n</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">梯</mi><mi mathvariant=\"normal\">度</mi><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">幅</mi><mi mathvariant=\"normal\">度</mi><mi mathvariant=\"normal\">：</mi><mi>G</mi><mo>=</mo><msqrt><msubsup><mi>G</mi><mi>x</mi><mn>2</mn></msubsup></msqrt><mo>+</mo><msqrt><msubsup><mi>G</mi><mi>y</mi><mn>2</mn></msubsup></msqrt></mrow><annotation encoding=\"application/x-tex\">梯度的幅度：G = \\sqrt{G_x^2} +\\sqrt{G_y^2}  \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">梯</span><span class=\"mord cjk_fallback\">度</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">幅</span><span class=\"mord cjk_fallback\">度</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord mathdefault\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.259571em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.980429em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathdefault\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.940429em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\ns76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.259571em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.84em;vertical-align:-0.6276250000000001em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.212375em;\"><span class=\"svg-align\" style=\"top:-3.8em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathdefault\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401079999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.383108em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.1723749999999997em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.8800000000000001em;\"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\nM1001 80H400000v40H1013z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6276250000000001em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">梯</mi><mi mathvariant=\"normal\">度</mi><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">方</mi><mi mathvariant=\"normal\">向</mi><mi mathvariant=\"normal\">：</mi><mi>θ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msqrt><msubsup><mi>G</mi><mi>x</mi><mn>2</mn></msubsup></msqrt><mo separator=\"true\">,</mo><msqrt><msubsup><mi>G</mi><mi>y</mi><mn>2</mn></msubsup></msqrt><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">梯度的方向：\\theta = arctan( \\sqrt{G_x^2} ,\\sqrt{G_y^2})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">梯</span><span class=\"mord cjk_fallback\">度</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">方</span><span class=\"mord cjk_fallback\">向</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.84em;vertical-align:-0.6276250000000001em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">(</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.980429em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathdefault\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.940429em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\ns76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.259571em;\"><span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.212375em;\"><span class=\"svg-align\" style=\"top:-3.8em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathdefault\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401079999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.383108em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.1723749999999997em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.8800000000000001em;\"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\nM1001 80H400000v40H1013z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6276250000000001em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ol start=\"3\">\n<li>\n<p>极非大值抑制，即适当的让边缘变瘦</p>\n<ul>\n<li>如果该点是正负梯度上的局部最大值，保留该点</li>\n<li>如果不是，则抑制该点（归零）</li>\n</ul>\n</li>\n<li>\n<p>确定边缘，使用双阈值算法确定最终的边缘信息</p>\n<ul>\n<li>设置两个阈值，一个为高阈值maxval,一个为低阈值minval</li>\n<li>如果当前边缘像素的梯度值大于maxval，则将当前边缘标记为强边缘</li>\n<li>如果当前边缘像素梯度值介于maxval和minval之间，则将当前边缘像素标记为虚边缘</li>\n<li>如果小于minval，则抑制但钱边缘像素</li>\n<li>与强边缘相连，则将该边缘标记为边缘</li>\n<li>与强边缘无连接，则将该边缘抑制</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"canny函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#canny函数及使用\"></a> <strong>canny函数及使用</strong></h3>\n<p><code>edges = cv.Canny(image ,threshold1, threshold2, apertureSize, L2gradient)</code><br />\n- threshold1第一个阈值<br />\n- threshold2第二个阈值<br />\n- apertureSize表示sobel孔径的大小<br />\n- L2gradient计算梯度幅度的标识</p>\n"},{"_content":"\n## 6，**形态学操作**\n\n形态学，即数学形态学,图像处理中一个非常重要分操作，形态学主要从图像内提取分量信息，该分量信息通常对于表达和描绘图像时所使用的最本质的形状特征。\n\n### **腐蚀**\n\n简介：腐蚀是形态学的最基本的形态学操作之一，它能够将图像的边界点消除，使图像沿着边界向内收缩，也可以将小于指定结构体元素的部分去除\n\n作用：腐蚀用来**收缩**或者**细化**二值图像中的前景，借此实现去除噪声、元素分割等操作\n\n原理：取局部最小值来实现\n\n`dst= cv2.erode( src, kernal, anchor, iterations, borderType )`\n  \n\n### **膨胀**\n\n原理类似**腐蚀**,取局部最大值\n\n膨胀就是求局部最大值的操作，核B与图形卷积，即计算核B覆盖的区域（体现局部）的像素点的最大值，并把这个最大值赋值给参考点指定的像素。这样就会使图像中的高亮区域逐渐增长\n\n`dst = cv2.dilate(src,kernal, anchor, iterations, borderType, borderValue )`\n\n\n\n### **通用形态学函数**\n\n\n形态学函数\n`dst = cv2.morphologyEx( src, kernal , anchor, iterations, borderType)`\n\n### **开运算**\n\n先腐蚀，后膨胀，这一过程称为开运算 \n\n### **闭运算**\n\n先膨胀，后腐蚀，这一过程称为闭运算\n\n### **形态学梯度运算**\n\n形态学梯度运算 是用图像膨胀 减去 图像腐蚀的操作，该操作可以获得原始图像的前景图像的边缘\n\n### **礼帽运算**\n\n礼帽运算是用原始图像减去开运算图像的操作，\n\n礼貌运算能够获得图像的噪声信息\n\n### **黑帽运算**\n\n黑帽运算是用闭运算图像减去原始图像的操作\n\n闭运算能够获得图像内部的小孔，或者前景中的小黑点，或者得到比原始图像的边缘更暗的边缘部分\n\n### **核函数**\n\n在进行形态学操作时，必须使用一个特定的核（结构单元）。该核能够自定义生成，也可以通过函数cv2.getStructuringElement()构造，它能够返回一个用于形态学处理的结构单元\n\n","source":"_posts/深度学习/opencv笔记/opencv06.md","raw":"\n## 6，**形态学操作**\n\n形态学，即数学形态学,图像处理中一个非常重要分操作，形态学主要从图像内提取分量信息，该分量信息通常对于表达和描绘图像时所使用的最本质的形状特征。\n\n### **腐蚀**\n\n简介：腐蚀是形态学的最基本的形态学操作之一，它能够将图像的边界点消除，使图像沿着边界向内收缩，也可以将小于指定结构体元素的部分去除\n\n作用：腐蚀用来**收缩**或者**细化**二值图像中的前景，借此实现去除噪声、元素分割等操作\n\n原理：取局部最小值来实现\n\n`dst= cv2.erode( src, kernal, anchor, iterations, borderType )`\n  \n\n### **膨胀**\n\n原理类似**腐蚀**,取局部最大值\n\n膨胀就是求局部最大值的操作，核B与图形卷积，即计算核B覆盖的区域（体现局部）的像素点的最大值，并把这个最大值赋值给参考点指定的像素。这样就会使图像中的高亮区域逐渐增长\n\n`dst = cv2.dilate(src,kernal, anchor, iterations, borderType, borderValue )`\n\n\n\n### **通用形态学函数**\n\n\n形态学函数\n`dst = cv2.morphologyEx( src, kernal , anchor, iterations, borderType)`\n\n### **开运算**\n\n先腐蚀，后膨胀，这一过程称为开运算 \n\n### **闭运算**\n\n先膨胀，后腐蚀，这一过程称为闭运算\n\n### **形态学梯度运算**\n\n形态学梯度运算 是用图像膨胀 减去 图像腐蚀的操作，该操作可以获得原始图像的前景图像的边缘\n\n### **礼帽运算**\n\n礼帽运算是用原始图像减去开运算图像的操作，\n\n礼貌运算能够获得图像的噪声信息\n\n### **黑帽运算**\n\n黑帽运算是用闭运算图像减去原始图像的操作\n\n闭运算能够获得图像内部的小孔，或者前景中的小黑点，或者得到比原始图像的边缘更暗的边缘部分\n\n### **核函数**\n\n在进行形态学操作时，必须使用一个特定的核（结构单元）。该核能够自定义生成，也可以通过函数cv2.getStructuringElement()构造，它能够返回一个用于形态学处理的结构单元\n\n","slug":"深度学习/opencv笔记/opencv06","published":1,"date":"2020-06-18T18:56:25.276Z","updated":"2020-06-18T18:56:25.277Z","title":"深度学习/opencv笔记/opencv06","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llrx000oj8g5b747edim","content":"<h2 id=\"6形态学操作\"><a class=\"markdownIt-Anchor\" href=\"#6形态学操作\"></a> 6，<strong>形态学操作</strong></h2>\n<p>形态学，即数学形态学,图像处理中一个非常重要分操作，形态学主要从图像内提取分量信息，该分量信息通常对于表达和描绘图像时所使用的最本质的形状特征。</p>\n<h3 id=\"腐蚀\"><a class=\"markdownIt-Anchor\" href=\"#腐蚀\"></a> <strong>腐蚀</strong></h3>\n<p>简介：腐蚀是形态学的最基本的形态学操作之一，它能够将图像的边界点消除，使图像沿着边界向内收缩，也可以将小于指定结构体元素的部分去除</p>\n<p>作用：腐蚀用来<strong>收缩</strong>或者<strong>细化</strong>二值图像中的前景，借此实现去除噪声、元素分割等操作</p>\n<p>原理：取局部最小值来实现</p>\n<p><code>dst= cv2.erode( src, kernal, anchor, iterations, borderType )</code></p>\n<h3 id=\"膨胀\"><a class=\"markdownIt-Anchor\" href=\"#膨胀\"></a> <strong>膨胀</strong></h3>\n<p>原理类似<strong>腐蚀</strong>,取局部最大值</p>\n<p>膨胀就是求局部最大值的操作，核B与图形卷积，即计算核B覆盖的区域（体现局部）的像素点的最大值，并把这个最大值赋值给参考点指定的像素。这样就会使图像中的高亮区域逐渐增长</p>\n<p><code>dst = cv2.dilate(src,kernal, anchor, iterations, borderType, borderValue )</code></p>\n<h3 id=\"通用形态学函数\"><a class=\"markdownIt-Anchor\" href=\"#通用形态学函数\"></a> <strong>通用形态学函数</strong></h3>\n<p>形态学函数<br />\n<code>dst = cv2.morphologyEx( src, kernal , anchor, iterations, borderType)</code></p>\n<h3 id=\"开运算\"><a class=\"markdownIt-Anchor\" href=\"#开运算\"></a> <strong>开运算</strong></h3>\n<p>先腐蚀，后膨胀，这一过程称为开运算</p>\n<h3 id=\"闭运算\"><a class=\"markdownIt-Anchor\" href=\"#闭运算\"></a> <strong>闭运算</strong></h3>\n<p>先膨胀，后腐蚀，这一过程称为闭运算</p>\n<h3 id=\"形态学梯度运算\"><a class=\"markdownIt-Anchor\" href=\"#形态学梯度运算\"></a> <strong>形态学梯度运算</strong></h3>\n<p>形态学梯度运算 是用图像膨胀 减去 图像腐蚀的操作，该操作可以获得原始图像的前景图像的边缘</p>\n<h3 id=\"礼帽运算\"><a class=\"markdownIt-Anchor\" href=\"#礼帽运算\"></a> <strong>礼帽运算</strong></h3>\n<p>礼帽运算是用原始图像减去开运算图像的操作，</p>\n<p>礼貌运算能够获得图像的噪声信息</p>\n<h3 id=\"黑帽运算\"><a class=\"markdownIt-Anchor\" href=\"#黑帽运算\"></a> <strong>黑帽运算</strong></h3>\n<p>黑帽运算是用闭运算图像减去原始图像的操作</p>\n<p>闭运算能够获得图像内部的小孔，或者前景中的小黑点，或者得到比原始图像的边缘更暗的边缘部分</p>\n<h3 id=\"核函数\"><a class=\"markdownIt-Anchor\" href=\"#核函数\"></a> <strong>核函数</strong></h3>\n<p>在进行形态学操作时，必须使用一个特定的核（结构单元）。该核能够自定义生成，也可以通过函数cv2.getStructuringElement()构造，它能够返回一个用于形态学处理的结构单元</p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"2TT38VH","length":781,"excerpt":"","more":"<h2 id=\"6形态学操作\"><a class=\"markdownIt-Anchor\" href=\"#6形态学操作\"></a> 6，<strong>形态学操作</strong></h2>\n<p>形态学，即数学形态学,图像处理中一个非常重要分操作，形态学主要从图像内提取分量信息，该分量信息通常对于表达和描绘图像时所使用的最本质的形状特征。</p>\n<h3 id=\"腐蚀\"><a class=\"markdownIt-Anchor\" href=\"#腐蚀\"></a> <strong>腐蚀</strong></h3>\n<p>简介：腐蚀是形态学的最基本的形态学操作之一，它能够将图像的边界点消除，使图像沿着边界向内收缩，也可以将小于指定结构体元素的部分去除</p>\n<p>作用：腐蚀用来<strong>收缩</strong>或者<strong>细化</strong>二值图像中的前景，借此实现去除噪声、元素分割等操作</p>\n<p>原理：取局部最小值来实现</p>\n<p><code>dst= cv2.erode( src, kernal, anchor, iterations, borderType )</code></p>\n<h3 id=\"膨胀\"><a class=\"markdownIt-Anchor\" href=\"#膨胀\"></a> <strong>膨胀</strong></h3>\n<p>原理类似<strong>腐蚀</strong>,取局部最大值</p>\n<p>膨胀就是求局部最大值的操作，核B与图形卷积，即计算核B覆盖的区域（体现局部）的像素点的最大值，并把这个最大值赋值给参考点指定的像素。这样就会使图像中的高亮区域逐渐增长</p>\n<p><code>dst = cv2.dilate(src,kernal, anchor, iterations, borderType, borderValue )</code></p>\n<h3 id=\"通用形态学函数\"><a class=\"markdownIt-Anchor\" href=\"#通用形态学函数\"></a> <strong>通用形态学函数</strong></h3>\n<p>形态学函数<br />\n<code>dst = cv2.morphologyEx( src, kernal , anchor, iterations, borderType)</code></p>\n<h3 id=\"开运算\"><a class=\"markdownIt-Anchor\" href=\"#开运算\"></a> <strong>开运算</strong></h3>\n<p>先腐蚀，后膨胀，这一过程称为开运算</p>\n<h3 id=\"闭运算\"><a class=\"markdownIt-Anchor\" href=\"#闭运算\"></a> <strong>闭运算</strong></h3>\n<p>先膨胀，后腐蚀，这一过程称为闭运算</p>\n<h3 id=\"形态学梯度运算\"><a class=\"markdownIt-Anchor\" href=\"#形态学梯度运算\"></a> <strong>形态学梯度运算</strong></h3>\n<p>形态学梯度运算 是用图像膨胀 减去 图像腐蚀的操作，该操作可以获得原始图像的前景图像的边缘</p>\n<h3 id=\"礼帽运算\"><a class=\"markdownIt-Anchor\" href=\"#礼帽运算\"></a> <strong>礼帽运算</strong></h3>\n<p>礼帽运算是用原始图像减去开运算图像的操作，</p>\n<p>礼貌运算能够获得图像的噪声信息</p>\n<h3 id=\"黑帽运算\"><a class=\"markdownIt-Anchor\" href=\"#黑帽运算\"></a> <strong>黑帽运算</strong></h3>\n<p>黑帽运算是用闭运算图像减去原始图像的操作</p>\n<p>闭运算能够获得图像内部的小孔，或者前景中的小黑点，或者得到比原始图像的边缘更暗的边缘部分</p>\n<h3 id=\"核函数\"><a class=\"markdownIt-Anchor\" href=\"#核函数\"></a> <strong>核函数</strong></h3>\n<p>在进行形态学操作时，必须使用一个特定的核（结构单元）。该核能够自定义生成，也可以通过函数cv2.getStructuringElement()构造，它能够返回一个用于形态学处理的结构单元</p>\n"},{"_content":"\n## 9，**图像金字塔**\n\n图像金字塔是由一副图像的多个不同分辨率的子图所构成的图像集合，该组图像由单个图像通过不断地降采样所产生的，最小的图像可能仅仅有一个像素点\n\n### **理论基础**\n\n图像金字塔是同一图像不同分辨率的子图的集合，是通过对原图像不断的向下采样产生的，即由高分辨率的图像（大尺寸）产生低分辨率的图像（小尺寸）\n\n1. 下采样：图像宽高变成原来的一半\n   1. 简单采样：删除偶数行和欧数列\n   2. 滤波器采样：\n      1. 邻域滤波器：邻域内求平均值\n      2. 高斯滤波器：像素点越远权值越小 \n\n2. 上采样：图像宽高是原来2倍\n   1. 补0插值：对像素点以补0完成插值\n   2. 临近插值：用最邻近的点给没有值的像素点赋值\n\n\n### **pyrDown函数及使用**\n\n下采样函数`dst = pyrDown(src, dstsize,borderType)`\n  - dssize目标图像的大小\n   \n### **pyrUp函数及使用**\n\n上采样函数`dst = pyrUp(src, dstsize,borderType)`\n\n### **采样可逆行研究**\n\n下采样会丢失信息，所以下采样和上采样不是可逆的\n\n\n### **拉普拉斯金字塔**\n\n我们希望通过对金字塔中的小图像进行上采样以获得完整的大尺寸高分辨率图像，这时就需要用到拉普拉斯金字塔\n\n为了在向上采样时能够恢复具有较高分辨率的原始图像，就要获取在采样过程中所丢失的信息，这些丢失的信息就构成了拉普拉斯金字塔\n\n拉普拉斯金字塔的第i层，等于 高斯金字塔中的第i层 与 高斯金字塔第i+1层上采样结果 之差\n\n","source":"_posts/深度学习/opencv笔记/opencv09.md","raw":"\n## 9，**图像金字塔**\n\n图像金字塔是由一副图像的多个不同分辨率的子图所构成的图像集合，该组图像由单个图像通过不断地降采样所产生的，最小的图像可能仅仅有一个像素点\n\n### **理论基础**\n\n图像金字塔是同一图像不同分辨率的子图的集合，是通过对原图像不断的向下采样产生的，即由高分辨率的图像（大尺寸）产生低分辨率的图像（小尺寸）\n\n1. 下采样：图像宽高变成原来的一半\n   1. 简单采样：删除偶数行和欧数列\n   2. 滤波器采样：\n      1. 邻域滤波器：邻域内求平均值\n      2. 高斯滤波器：像素点越远权值越小 \n\n2. 上采样：图像宽高是原来2倍\n   1. 补0插值：对像素点以补0完成插值\n   2. 临近插值：用最邻近的点给没有值的像素点赋值\n\n\n### **pyrDown函数及使用**\n\n下采样函数`dst = pyrDown(src, dstsize,borderType)`\n  - dssize目标图像的大小\n   \n### **pyrUp函数及使用**\n\n上采样函数`dst = pyrUp(src, dstsize,borderType)`\n\n### **采样可逆行研究**\n\n下采样会丢失信息，所以下采样和上采样不是可逆的\n\n\n### **拉普拉斯金字塔**\n\n我们希望通过对金字塔中的小图像进行上采样以获得完整的大尺寸高分辨率图像，这时就需要用到拉普拉斯金字塔\n\n为了在向上采样时能够恢复具有较高分辨率的原始图像，就要获取在采样过程中所丢失的信息，这些丢失的信息就构成了拉普拉斯金字塔\n\n拉普拉斯金字塔的第i层，等于 高斯金字塔中的第i层 与 高斯金字塔第i+1层上采样结果 之差\n\n","slug":"深度学习/opencv笔记/opencv09","published":1,"date":"2020-06-18T18:56:25.279Z","updated":"2020-06-18T18:56:25.279Z","title":"深度学习/opencv笔记/opencv09","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llrx000pj8g59a7h2sm1","content":"<h2 id=\"9图像金字塔\"><a class=\"markdownIt-Anchor\" href=\"#9图像金字塔\"></a> 9，<strong>图像金字塔</strong></h2>\n<p>图像金字塔是由一副图像的多个不同分辨率的子图所构成的图像集合，该组图像由单个图像通过不断地降采样所产生的，最小的图像可能仅仅有一个像素点</p>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<p>图像金字塔是同一图像不同分辨率的子图的集合，是通过对原图像不断的向下采样产生的，即由高分辨率的图像（大尺寸）产生低分辨率的图像（小尺寸）</p>\n<ol>\n<li>\n<p>下采样：图像宽高变成原来的一半</p>\n<ol>\n<li>简单采样：删除偶数行和欧数列</li>\n<li>滤波器采样：\n<ol>\n<li>邻域滤波器：邻域内求平均值</li>\n<li>高斯滤波器：像素点越远权值越小</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>上采样：图像宽高是原来2倍</p>\n<ol>\n<li>补0插值：对像素点以补0完成插值</li>\n<li>临近插值：用最邻近的点给没有值的像素点赋值</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"pyrdown函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#pyrdown函数及使用\"></a> <strong>pyrDown函数及使用</strong></h3>\n<p>下采样函数<code>dst = pyrDown(src, dstsize,borderType)</code></p>\n<ul>\n<li>dssize目标图像的大小</li>\n</ul>\n<h3 id=\"pyrup函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#pyrup函数及使用\"></a> <strong>pyrUp函数及使用</strong></h3>\n<p>上采样函数<code>dst = pyrUp(src, dstsize,borderType)</code></p>\n<h3 id=\"采样可逆行研究\"><a class=\"markdownIt-Anchor\" href=\"#采样可逆行研究\"></a> <strong>采样可逆行研究</strong></h3>\n<p>下采样会丢失信息，所以下采样和上采样不是可逆的</p>\n<h3 id=\"拉普拉斯金字塔\"><a class=\"markdownIt-Anchor\" href=\"#拉普拉斯金字塔\"></a> <strong>拉普拉斯金字塔</strong></h3>\n<p>我们希望通过对金字塔中的小图像进行上采样以获得完整的大尺寸高分辨率图像，这时就需要用到拉普拉斯金字塔</p>\n<p>为了在向上采样时能够恢复具有较高分辨率的原始图像，就要获取在采样过程中所丢失的信息，这些丢失的信息就构成了拉普拉斯金字塔</p>\n<p>拉普拉斯金字塔的第i层，等于 高斯金字塔中的第i层 与 高斯金字塔第i+1层上采样结果 之差</p>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"JHXFQ0","length":562,"excerpt":"","more":"<h2 id=\"9图像金字塔\"><a class=\"markdownIt-Anchor\" href=\"#9图像金字塔\"></a> 9，<strong>图像金字塔</strong></h2>\n<p>图像金字塔是由一副图像的多个不同分辨率的子图所构成的图像集合，该组图像由单个图像通过不断地降采样所产生的，最小的图像可能仅仅有一个像素点</p>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<p>图像金字塔是同一图像不同分辨率的子图的集合，是通过对原图像不断的向下采样产生的，即由高分辨率的图像（大尺寸）产生低分辨率的图像（小尺寸）</p>\n<ol>\n<li>\n<p>下采样：图像宽高变成原来的一半</p>\n<ol>\n<li>简单采样：删除偶数行和欧数列</li>\n<li>滤波器采样：\n<ol>\n<li>邻域滤波器：邻域内求平均值</li>\n<li>高斯滤波器：像素点越远权值越小</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>上采样：图像宽高是原来2倍</p>\n<ol>\n<li>补0插值：对像素点以补0完成插值</li>\n<li>临近插值：用最邻近的点给没有值的像素点赋值</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"pyrdown函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#pyrdown函数及使用\"></a> <strong>pyrDown函数及使用</strong></h3>\n<p>下采样函数<code>dst = pyrDown(src, dstsize,borderType)</code></p>\n<ul>\n<li>dssize目标图像的大小</li>\n</ul>\n<h3 id=\"pyrup函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#pyrup函数及使用\"></a> <strong>pyrUp函数及使用</strong></h3>\n<p>上采样函数<code>dst = pyrUp(src, dstsize,borderType)</code></p>\n<h3 id=\"采样可逆行研究\"><a class=\"markdownIt-Anchor\" href=\"#采样可逆行研究\"></a> <strong>采样可逆行研究</strong></h3>\n<p>下采样会丢失信息，所以下采样和上采样不是可逆的</p>\n<h3 id=\"拉普拉斯金字塔\"><a class=\"markdownIt-Anchor\" href=\"#拉普拉斯金字塔\"></a> <strong>拉普拉斯金字塔</strong></h3>\n<p>我们希望通过对金字塔中的小图像进行上采样以获得完整的大尺寸高分辨率图像，这时就需要用到拉普拉斯金字塔</p>\n<p>为了在向上采样时能够恢复具有较高分辨率的原始图像，就要获取在采样过程中所丢失的信息，这些丢失的信息就构成了拉普拉斯金字塔</p>\n<p>拉普拉斯金字塔的第i层，等于 高斯金字塔中的第i层 与 高斯金字塔第i+1层上采样结果 之差</p>\n"},{"_content":"\n## 10，**图像轮廓**\n\n边缘检测虽然能够检测出边缘，但是边缘是不连续的，检测到的边缘并不是一个整体，图像轮廓是指将边缘连接起来形成一个整体，用于后续的计算。\n\n通过对图像轮廓的操作，我们能够获得目标图像的大小，位置，方向等信息\n### **查找并绘制轮廓**\n\n一个轮廓对应着一系列的点，这些点以某种方式表示图像中的一条曲线\n\n`cv.findContours()`用于查找图像的轮廓，并能够根据参数返回特定方式的轮廓曲线，函数`cv2.drowContours()`能将查找到的轮廓绘制到图像上\n\n### **矩特征**\n\n比较两个轮廓最简单的方法就是比较两者的轮廓矩。轮廓矩代表着一个轮廓、一幅图像，一组点集的全局特征。矩信息包含了对应对象不同类型的几何特征，例如大小、位置、角度、形状等。矩特征被广泛用于模式识别和图像识别等方便\n\n1. 矩的计算：moments函数\n   \n`retval = cv2.moments(array, binaryImage)`\n  - array 可以是点集，也可以是灰度图像或二值图像，整个点击作为一条轮廓\n  - binaryImage：若为true，array中所有非0值都被处理成1\n  - retval 返回值是一个特征矩，主要包括：\n    - 空间矩,计算面积、周长\n      - 零阶矩:m00\n      - 一阶矩:m10,m01\n      - 二阶矩:m20,m11\n      - 三阶矩:m30\n    - 中心距：计算平移不变性，比较不同位置对象是否一致\n      - 二阶中心距:mu20,mu11\n      - 三阶中心距:mu30\n    - 归一化中心矩：通过除以物体的总尺寸而获得的缩放不变性，具有平移不变性，还具有缩放不变性\n      - 二阶hu矩:nu20,nu11,nu02\n      - 三阶hu矩:nu30,nu21,nu12,nu03\n\n2.计算轮廓的长度：arcLength函数\n  `retval = cv2.arcLength(curve, closed)`\n  - retval返回值是轮廓的周长\n  - curve 是轮廓\n  - closed是布尔值，用来表示轮廓是否封闭\n\n### **hu钜**\n\nhu矩是归一化中心矩的线型组合。hu矩在图像旋转，缩放，平移等操作后，仍能保持矩的不变性，所以经常会使用hu矩来识别图像额特征\n\n`hu = cv2.HuMoments(m)`\n\n### **轮廓拟合**\n\n\n在计算轮廓时，可能并不需要实际的轮廓，而仅需要一个接近于轮廓的近似多边形的方法。\n\n1. 轮廓拟合\n\n`x, y, w, h = cv2.boundingRect( array)`\n\n  - array 是灰度图像或轮廓\n  - 该函数具有四个返回值,分别表示：\n  - 矩阵边界左上角顶点的x坐标\n  - 矩阵边界左上角顶点的y坐标\n  - 矩阵边界x方向的长度\n  - 矩阵边界y方向的长度\n\n2. 最小包围矩阵框\n`retval = cv2.minAreaRect(array)`\n - 返回值retval表示返回的矩阵特征信息， 该值结构是：\n   - 最小外接矩形的中心，\n   - （宽度，高度），\n   - 旋转角\n\n\n3. 最小包围圆形\n`center,radius = cv2.minEnclosingCircle(array)`\n\n4. 最优拟合直线\n\n5. 最小包围三角形\n\n6. 逼近多边形\n\n### **凸包**\n\n逼近多边形是轮廓的高度近似，但是有时候，我们希望使用一个多边形的凸包，来简化它。凸包跟逼近多边形很像，只不过他是物体最外层的凸多边形。凸包指的是完全包括原有轮廓，并且仅由轮廓上的点所构成的多边形\n\n在凸包中，任意连续三个点的内角小于180度\n\n1. 获取凸包\n2. 凸缺陷\n   1. 凸包和轮廓之间的部分，称为凸缺陷，\n3. 几何学测试\n   1. 测试轮廓是否是凸型的\n   2. 点到轮廓的距离：\n    `retval = cv2.pointPolygonTest( contour, pt, measureDist)`\n\n### **利用形状场景算法比较轮廓**\n\n用矩比较形状是一种非常有效的方法，不过现在有更高效的方法。\n\n从opencv3开始，就开始有了专有模块shape，该模块中的形状场景算法能够更高效的比较形状\n\n1. 计算形状场景距离\n   1. \n\n### **轮廓的特征值**\n\n1. 宽高比\n  \n2. extent \n$$\nextent = \\frac{轮廓面积(对象面积)}{矩形边界面积}\n$$\n\n3. Soliity\n   \n$$\nsolidity = \\frac{轮廓面积（对象面积）}{凸包面积}\n$$\n\n4. 等效直径\n   可以用等效直径来衡量轮廓的特征值，该值是与轮廓面积相等的圆形的直径\n  $$\n等效直径 = \\sqrt{\\frac{4\\times轮廓面积}{\\pi}}\n$$\n\n5. 方向\n   函数cv2.fitEllipse()可以用来构造最优拟合椭圆，还可以在返回椭圆的中心点、轴长、旋转角度等信息。使用这种形式能够更直观地获取椭圆的方向等信息\n\n6. 掩膜和像素点\n   有时我们希望获取对象的掩膜图像以及对应的点\n\n7. 平均颜色与平均灰度\n8. 极点\n   1. 有时候我们希望获取某个对象的极值点，例如最左端、最右端、最上端、最下端的四个点。\n   2. opencv提供了相应的函数找出这些点","source":"_posts/深度学习/opencv笔记/opencv10.md","raw":"\n## 10，**图像轮廓**\n\n边缘检测虽然能够检测出边缘，但是边缘是不连续的，检测到的边缘并不是一个整体，图像轮廓是指将边缘连接起来形成一个整体，用于后续的计算。\n\n通过对图像轮廓的操作，我们能够获得目标图像的大小，位置，方向等信息\n### **查找并绘制轮廓**\n\n一个轮廓对应着一系列的点，这些点以某种方式表示图像中的一条曲线\n\n`cv.findContours()`用于查找图像的轮廓，并能够根据参数返回特定方式的轮廓曲线，函数`cv2.drowContours()`能将查找到的轮廓绘制到图像上\n\n### **矩特征**\n\n比较两个轮廓最简单的方法就是比较两者的轮廓矩。轮廓矩代表着一个轮廓、一幅图像，一组点集的全局特征。矩信息包含了对应对象不同类型的几何特征，例如大小、位置、角度、形状等。矩特征被广泛用于模式识别和图像识别等方便\n\n1. 矩的计算：moments函数\n   \n`retval = cv2.moments(array, binaryImage)`\n  - array 可以是点集，也可以是灰度图像或二值图像，整个点击作为一条轮廓\n  - binaryImage：若为true，array中所有非0值都被处理成1\n  - retval 返回值是一个特征矩，主要包括：\n    - 空间矩,计算面积、周长\n      - 零阶矩:m00\n      - 一阶矩:m10,m01\n      - 二阶矩:m20,m11\n      - 三阶矩:m30\n    - 中心距：计算平移不变性，比较不同位置对象是否一致\n      - 二阶中心距:mu20,mu11\n      - 三阶中心距:mu30\n    - 归一化中心矩：通过除以物体的总尺寸而获得的缩放不变性，具有平移不变性，还具有缩放不变性\n      - 二阶hu矩:nu20,nu11,nu02\n      - 三阶hu矩:nu30,nu21,nu12,nu03\n\n2.计算轮廓的长度：arcLength函数\n  `retval = cv2.arcLength(curve, closed)`\n  - retval返回值是轮廓的周长\n  - curve 是轮廓\n  - closed是布尔值，用来表示轮廓是否封闭\n\n### **hu钜**\n\nhu矩是归一化中心矩的线型组合。hu矩在图像旋转，缩放，平移等操作后，仍能保持矩的不变性，所以经常会使用hu矩来识别图像额特征\n\n`hu = cv2.HuMoments(m)`\n\n### **轮廓拟合**\n\n\n在计算轮廓时，可能并不需要实际的轮廓，而仅需要一个接近于轮廓的近似多边形的方法。\n\n1. 轮廓拟合\n\n`x, y, w, h = cv2.boundingRect( array)`\n\n  - array 是灰度图像或轮廓\n  - 该函数具有四个返回值,分别表示：\n  - 矩阵边界左上角顶点的x坐标\n  - 矩阵边界左上角顶点的y坐标\n  - 矩阵边界x方向的长度\n  - 矩阵边界y方向的长度\n\n2. 最小包围矩阵框\n`retval = cv2.minAreaRect(array)`\n - 返回值retval表示返回的矩阵特征信息， 该值结构是：\n   - 最小外接矩形的中心，\n   - （宽度，高度），\n   - 旋转角\n\n\n3. 最小包围圆形\n`center,radius = cv2.minEnclosingCircle(array)`\n\n4. 最优拟合直线\n\n5. 最小包围三角形\n\n6. 逼近多边形\n\n### **凸包**\n\n逼近多边形是轮廓的高度近似，但是有时候，我们希望使用一个多边形的凸包，来简化它。凸包跟逼近多边形很像，只不过他是物体最外层的凸多边形。凸包指的是完全包括原有轮廓，并且仅由轮廓上的点所构成的多边形\n\n在凸包中，任意连续三个点的内角小于180度\n\n1. 获取凸包\n2. 凸缺陷\n   1. 凸包和轮廓之间的部分，称为凸缺陷，\n3. 几何学测试\n   1. 测试轮廓是否是凸型的\n   2. 点到轮廓的距离：\n    `retval = cv2.pointPolygonTest( contour, pt, measureDist)`\n\n### **利用形状场景算法比较轮廓**\n\n用矩比较形状是一种非常有效的方法，不过现在有更高效的方法。\n\n从opencv3开始，就开始有了专有模块shape，该模块中的形状场景算法能够更高效的比较形状\n\n1. 计算形状场景距离\n   1. \n\n### **轮廓的特征值**\n\n1. 宽高比\n  \n2. extent \n$$\nextent = \\frac{轮廓面积(对象面积)}{矩形边界面积}\n$$\n\n3. Soliity\n   \n$$\nsolidity = \\frac{轮廓面积（对象面积）}{凸包面积}\n$$\n\n4. 等效直径\n   可以用等效直径来衡量轮廓的特征值，该值是与轮廓面积相等的圆形的直径\n  $$\n等效直径 = \\sqrt{\\frac{4\\times轮廓面积}{\\pi}}\n$$\n\n5. 方向\n   函数cv2.fitEllipse()可以用来构造最优拟合椭圆，还可以在返回椭圆的中心点、轴长、旋转角度等信息。使用这种形式能够更直观地获取椭圆的方向等信息\n\n6. 掩膜和像素点\n   有时我们希望获取对象的掩膜图像以及对应的点\n\n7. 平均颜色与平均灰度\n8. 极点\n   1. 有时候我们希望获取某个对象的极值点，例如最左端、最右端、最上端、最下端的四个点。\n   2. opencv提供了相应的函数找出这些点","slug":"深度学习/opencv笔记/opencv10","published":1,"date":"2020-06-18T18:56:25.280Z","updated":"2020-06-18T18:56:25.280Z","title":"深度学习/opencv笔记/opencv10","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7lls1000qj8g56xtgcovf","content":"<h2 id=\"10图像轮廓\"><a class=\"markdownIt-Anchor\" href=\"#10图像轮廓\"></a> 10，<strong>图像轮廓</strong></h2>\n<p>边缘检测虽然能够检测出边缘，但是边缘是不连续的，检测到的边缘并不是一个整体，图像轮廓是指将边缘连接起来形成一个整体，用于后续的计算。</p>\n<p>通过对图像轮廓的操作，我们能够获得目标图像的大小，位置，方向等信息</p>\n<h3 id=\"查找并绘制轮廓\"><a class=\"markdownIt-Anchor\" href=\"#查找并绘制轮廓\"></a> <strong>查找并绘制轮廓</strong></h3>\n<p>一个轮廓对应着一系列的点，这些点以某种方式表示图像中的一条曲线</p>\n<p><code>cv.findContours()</code>用于查找图像的轮廓，并能够根据参数返回特定方式的轮廓曲线，函数<code>cv2.drowContours()</code>能将查找到的轮廓绘制到图像上</p>\n<h3 id=\"矩特征\"><a class=\"markdownIt-Anchor\" href=\"#矩特征\"></a> <strong>矩特征</strong></h3>\n<p>比较两个轮廓最简单的方法就是比较两者的轮廓矩。轮廓矩代表着一个轮廓、一幅图像，一组点集的全局特征。矩信息包含了对应对象不同类型的几何特征，例如大小、位置、角度、形状等。矩特征被广泛用于模式识别和图像识别等方便</p>\n<ol>\n<li>矩的计算：moments函数</li>\n</ol>\n<p><code>retval = cv2.moments(array, binaryImage)</code></p>\n<ul>\n<li>array 可以是点集，也可以是灰度图像或二值图像，整个点击作为一条轮廓</li>\n<li>binaryImage：若为true，array中所有非0值都被处理成1</li>\n<li>retval 返回值是一个特征矩，主要包括：\n<ul>\n<li>空间矩,计算面积、周长\n<ul>\n<li>零阶矩:m00</li>\n<li>一阶矩:m10,m01</li>\n<li>二阶矩:m20,m11</li>\n<li>三阶矩:m30</li>\n</ul>\n</li>\n<li>中心距：计算平移不变性，比较不同位置对象是否一致\n<ul>\n<li>二阶中心距:mu20,mu11</li>\n<li>三阶中心距:mu30</li>\n</ul>\n</li>\n<li>归一化中心矩：通过除以物体的总尺寸而获得的缩放不变性，具有平移不变性，还具有缩放不变性\n<ul>\n<li>二阶hu矩:nu20,nu11,nu02</li>\n<li>三阶hu矩:nu30,nu21,nu12,nu03</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>2.计算轮廓的长度：arcLength函数<br />\n<code>retval = cv2.arcLength(curve, closed)</code></p>\n<ul>\n<li>retval返回值是轮廓的周长</li>\n<li>curve 是轮廓</li>\n<li>closed是布尔值，用来表示轮廓是否封闭</li>\n</ul>\n<h3 id=\"hu钜\"><a class=\"markdownIt-Anchor\" href=\"#hu钜\"></a> <strong>hu钜</strong></h3>\n<p>hu矩是归一化中心矩的线型组合。hu矩在图像旋转，缩放，平移等操作后，仍能保持矩的不变性，所以经常会使用hu矩来识别图像额特征</p>\n<p><code>hu = cv2.HuMoments(m)</code></p>\n<h3 id=\"轮廓拟合\"><a class=\"markdownIt-Anchor\" href=\"#轮廓拟合\"></a> <strong>轮廓拟合</strong></h3>\n<p>在计算轮廓时，可能并不需要实际的轮廓，而仅需要一个接近于轮廓的近似多边形的方法。</p>\n<ol>\n<li>轮廓拟合</li>\n</ol>\n<p><code>x, y, w, h = cv2.boundingRect( array)</code></p>\n<ul>\n<li>array 是灰度图像或轮廓</li>\n<li>该函数具有四个返回值,分别表示：</li>\n<li>矩阵边界左上角顶点的x坐标</li>\n<li>矩阵边界左上角顶点的y坐标</li>\n<li>矩阵边界x方向的长度</li>\n<li>矩阵边界y方向的长度</li>\n</ul>\n<ol start=\"2\">\n<li>最小包围矩阵框<br />\n<code>retval = cv2.minAreaRect(array)</code></li>\n</ol>\n<ul>\n<li>返回值retval表示返回的矩阵特征信息， 该值结构是：\n<ul>\n<li>最小外接矩形的中心，</li>\n<li>（宽度，高度），</li>\n<li>旋转角</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p>最小包围圆形<br />\n<code>center,radius = cv2.minEnclosingCircle(array)</code></p>\n</li>\n<li>\n<p>最优拟合直线</p>\n</li>\n<li>\n<p>最小包围三角形</p>\n</li>\n<li>\n<p>逼近多边形</p>\n</li>\n</ol>\n<h3 id=\"凸包\"><a class=\"markdownIt-Anchor\" href=\"#凸包\"></a> <strong>凸包</strong></h3>\n<p>逼近多边形是轮廓的高度近似，但是有时候，我们希望使用一个多边形的凸包，来简化它。凸包跟逼近多边形很像，只不过他是物体最外层的凸多边形。凸包指的是完全包括原有轮廓，并且仅由轮廓上的点所构成的多边形</p>\n<p>在凸包中，任意连续三个点的内角小于180度</p>\n<ol>\n<li>获取凸包</li>\n<li>凸缺陷\n<ol>\n<li>凸包和轮廓之间的部分，称为凸缺陷，</li>\n</ol>\n</li>\n<li>几何学测试\n<ol>\n<li>测试轮廓是否是凸型的</li>\n<li>点到轮廓的距离：<br />\n<code>retval = cv2.pointPolygonTest( contour, pt, measureDist)</code></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"利用形状场景算法比较轮廓\"><a class=\"markdownIt-Anchor\" href=\"#利用形状场景算法比较轮廓\"></a> <strong>利用形状场景算法比较轮廓</strong></h3>\n<p>用矩比较形状是一种非常有效的方法，不过现在有更高效的方法。</p>\n<p>从opencv3开始，就开始有了专有模块shape，该模块中的形状场景算法能够更高效的比较形状</p>\n<ol>\n<li>计算形状场景距离<br />\n1.</li>\n</ol>\n<h3 id=\"轮廓的特征值\"><a class=\"markdownIt-Anchor\" href=\"#轮廓的特征值\"></a> <strong>轮廓的特征值</strong></h3>\n<ol>\n<li>\n<p>宽高比</p>\n</li>\n<li>\n<p>extent</p>\n</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>e</mi><mi>x</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">轮</mi><mi mathvariant=\"normal\">廓</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">对</mi><mi mathvariant=\"normal\">象</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">矩</mi><mi mathvariant=\"normal\">形</mi><mi mathvariant=\"normal\">边</mi><mi mathvariant=\"normal\">界</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">extent = \\frac{轮廓面积(对象面积)}{矩形边界面积}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">形</span><span class=\"mord cjk_fallback\">边</span><span class=\"mord cjk_fallback\">界</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">轮</span><span class=\"mord cjk_fallback\">廓</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">对</span><span class=\"mord cjk_fallback\">象</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<ol start=\"3\">\n<li>Soliity</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mi>o</mi><mi>l</mi><mi>i</mi><mi>d</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">轮</mi><mi mathvariant=\"normal\">廓</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi><mi mathvariant=\"normal\">（</mi><mi mathvariant=\"normal\">对</mi><mi mathvariant=\"normal\">象</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi><mi mathvariant=\"normal\">）</mi></mrow><mrow><mi mathvariant=\"normal\">凸</mi><mi mathvariant=\"normal\">包</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">solidity = \\frac{轮廓面积（对象面积）}{凸包面积}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.363em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.677em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">凸</span><span class=\"mord cjk_fallback\">包</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">轮</span><span class=\"mord cjk_fallback\">廓</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span><span class=\"mord cjk_fallback\">（</span><span class=\"mord cjk_fallback\">对</span><span class=\"mord cjk_fallback\">象</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span><span class=\"mord cjk_fallback\">）</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<ol start=\"4\">\n<li>等效直径<br />\n可以用等效直径来衡量轮廓的特征值，该值是与轮廓面积相等的圆形的直径</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">等</mi><mi mathvariant=\"normal\">效</mi><mi mathvariant=\"normal\">直</mi><mi mathvariant=\"normal\">径</mi><mo>=</mo><msqrt><mfrac><mrow><mn>4</mn><mo>×</mo><mi mathvariant=\"normal\">轮</mi><mi mathvariant=\"normal\">廓</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi></mrow><mi>π</mi></mfrac></msqrt></mrow><annotation encoding=\"application/x-tex\">等效直径 = \\sqrt{\\frac{4\\times轮廓面积}{\\pi}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">等</span><span class=\"mord cjk_fallback\">效</span><span class=\"mord cjk_fallback\">直</span><span class=\"mord cjk_fallback\">径</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.44em;vertical-align:-0.788405em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.651595em;\"><span class=\"svg-align\" style=\"top:-4.4em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord cjk_fallback\">轮</span><span class=\"mord cjk_fallback\">廓</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.6115950000000003em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:2.48em;\"><svg width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.788405em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<ol start=\"5\">\n<li>\n<p>方向<br />\n函数cv2.fitEllipse()可以用来构造最优拟合椭圆，还可以在返回椭圆的中心点、轴长、旋转角度等信息。使用这种形式能够更直观地获取椭圆的方向等信息</p>\n</li>\n<li>\n<p>掩膜和像素点<br />\n有时我们希望获取对象的掩膜图像以及对应的点</p>\n</li>\n<li>\n<p>平均颜色与平均灰度</p>\n</li>\n<li>\n<p>极点</p>\n<ol>\n<li>有时候我们希望获取某个对象的极值点，例如最左端、最右端、最上端、最下端的四个点。</li>\n<li>opencv提供了相应的函数找出这些点</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"12XJDR5","length":1917,"excerpt":"","more":"<h2 id=\"10图像轮廓\"><a class=\"markdownIt-Anchor\" href=\"#10图像轮廓\"></a> 10，<strong>图像轮廓</strong></h2>\n<p>边缘检测虽然能够检测出边缘，但是边缘是不连续的，检测到的边缘并不是一个整体，图像轮廓是指将边缘连接起来形成一个整体，用于后续的计算。</p>\n<p>通过对图像轮廓的操作，我们能够获得目标图像的大小，位置，方向等信息</p>\n<h3 id=\"查找并绘制轮廓\"><a class=\"markdownIt-Anchor\" href=\"#查找并绘制轮廓\"></a> <strong>查找并绘制轮廓</strong></h3>\n<p>一个轮廓对应着一系列的点，这些点以某种方式表示图像中的一条曲线</p>\n<p><code>cv.findContours()</code>用于查找图像的轮廓，并能够根据参数返回特定方式的轮廓曲线，函数<code>cv2.drowContours()</code>能将查找到的轮廓绘制到图像上</p>\n<h3 id=\"矩特征\"><a class=\"markdownIt-Anchor\" href=\"#矩特征\"></a> <strong>矩特征</strong></h3>\n<p>比较两个轮廓最简单的方法就是比较两者的轮廓矩。轮廓矩代表着一个轮廓、一幅图像，一组点集的全局特征。矩信息包含了对应对象不同类型的几何特征，例如大小、位置、角度、形状等。矩特征被广泛用于模式识别和图像识别等方便</p>\n<ol>\n<li>矩的计算：moments函数</li>\n</ol>\n<p><code>retval = cv2.moments(array, binaryImage)</code></p>\n<ul>\n<li>array 可以是点集，也可以是灰度图像或二值图像，整个点击作为一条轮廓</li>\n<li>binaryImage：若为true，array中所有非0值都被处理成1</li>\n<li>retval 返回值是一个特征矩，主要包括：\n<ul>\n<li>空间矩,计算面积、周长\n<ul>\n<li>零阶矩:m00</li>\n<li>一阶矩:m10,m01</li>\n<li>二阶矩:m20,m11</li>\n<li>三阶矩:m30</li>\n</ul>\n</li>\n<li>中心距：计算平移不变性，比较不同位置对象是否一致\n<ul>\n<li>二阶中心距:mu20,mu11</li>\n<li>三阶中心距:mu30</li>\n</ul>\n</li>\n<li>归一化中心矩：通过除以物体的总尺寸而获得的缩放不变性，具有平移不变性，还具有缩放不变性\n<ul>\n<li>二阶hu矩:nu20,nu11,nu02</li>\n<li>三阶hu矩:nu30,nu21,nu12,nu03</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>2.计算轮廓的长度：arcLength函数<br />\n<code>retval = cv2.arcLength(curve, closed)</code></p>\n<ul>\n<li>retval返回值是轮廓的周长</li>\n<li>curve 是轮廓</li>\n<li>closed是布尔值，用来表示轮廓是否封闭</li>\n</ul>\n<h3 id=\"hu钜\"><a class=\"markdownIt-Anchor\" href=\"#hu钜\"></a> <strong>hu钜</strong></h3>\n<p>hu矩是归一化中心矩的线型组合。hu矩在图像旋转，缩放，平移等操作后，仍能保持矩的不变性，所以经常会使用hu矩来识别图像额特征</p>\n<p><code>hu = cv2.HuMoments(m)</code></p>\n<h3 id=\"轮廓拟合\"><a class=\"markdownIt-Anchor\" href=\"#轮廓拟合\"></a> <strong>轮廓拟合</strong></h3>\n<p>在计算轮廓时，可能并不需要实际的轮廓，而仅需要一个接近于轮廓的近似多边形的方法。</p>\n<ol>\n<li>轮廓拟合</li>\n</ol>\n<p><code>x, y, w, h = cv2.boundingRect( array)</code></p>\n<ul>\n<li>array 是灰度图像或轮廓</li>\n<li>该函数具有四个返回值,分别表示：</li>\n<li>矩阵边界左上角顶点的x坐标</li>\n<li>矩阵边界左上角顶点的y坐标</li>\n<li>矩阵边界x方向的长度</li>\n<li>矩阵边界y方向的长度</li>\n</ul>\n<ol start=\"2\">\n<li>最小包围矩阵框<br />\n<code>retval = cv2.minAreaRect(array)</code></li>\n</ol>\n<ul>\n<li>返回值retval表示返回的矩阵特征信息， 该值结构是：\n<ul>\n<li>最小外接矩形的中心，</li>\n<li>（宽度，高度），</li>\n<li>旋转角</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p>最小包围圆形<br />\n<code>center,radius = cv2.minEnclosingCircle(array)</code></p>\n</li>\n<li>\n<p>最优拟合直线</p>\n</li>\n<li>\n<p>最小包围三角形</p>\n</li>\n<li>\n<p>逼近多边形</p>\n</li>\n</ol>\n<h3 id=\"凸包\"><a class=\"markdownIt-Anchor\" href=\"#凸包\"></a> <strong>凸包</strong></h3>\n<p>逼近多边形是轮廓的高度近似，但是有时候，我们希望使用一个多边形的凸包，来简化它。凸包跟逼近多边形很像，只不过他是物体最外层的凸多边形。凸包指的是完全包括原有轮廓，并且仅由轮廓上的点所构成的多边形</p>\n<p>在凸包中，任意连续三个点的内角小于180度</p>\n<ol>\n<li>获取凸包</li>\n<li>凸缺陷\n<ol>\n<li>凸包和轮廓之间的部分，称为凸缺陷，</li>\n</ol>\n</li>\n<li>几何学测试\n<ol>\n<li>测试轮廓是否是凸型的</li>\n<li>点到轮廓的距离：<br />\n<code>retval = cv2.pointPolygonTest( contour, pt, measureDist)</code></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"利用形状场景算法比较轮廓\"><a class=\"markdownIt-Anchor\" href=\"#利用形状场景算法比较轮廓\"></a> <strong>利用形状场景算法比较轮廓</strong></h3>\n<p>用矩比较形状是一种非常有效的方法，不过现在有更高效的方法。</p>\n<p>从opencv3开始，就开始有了专有模块shape，该模块中的形状场景算法能够更高效的比较形状</p>\n<ol>\n<li>计算形状场景距离<br />\n1.</li>\n</ol>\n<h3 id=\"轮廓的特征值\"><a class=\"markdownIt-Anchor\" href=\"#轮廓的特征值\"></a> <strong>轮廓的特征值</strong></h3>\n<ol>\n<li>\n<p>宽高比</p>\n</li>\n<li>\n<p>extent</p>\n</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>e</mi><mi>x</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">轮</mi><mi mathvariant=\"normal\">廓</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">对</mi><mi mathvariant=\"normal\">象</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">矩</mi><mi mathvariant=\"normal\">形</mi><mi mathvariant=\"normal\">边</mi><mi mathvariant=\"normal\">界</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">extent = \\frac{轮廓面积(对象面积)}{矩形边界面积}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">形</span><span class=\"mord cjk_fallback\">边</span><span class=\"mord cjk_fallback\">界</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">轮</span><span class=\"mord cjk_fallback\">廓</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">对</span><span class=\"mord cjk_fallback\">象</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<ol start=\"3\">\n<li>Soliity</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mi>o</mi><mi>l</mi><mi>i</mi><mi>d</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">轮</mi><mi mathvariant=\"normal\">廓</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi><mi mathvariant=\"normal\">（</mi><mi mathvariant=\"normal\">对</mi><mi mathvariant=\"normal\">象</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi><mi mathvariant=\"normal\">）</mi></mrow><mrow><mi mathvariant=\"normal\">凸</mi><mi mathvariant=\"normal\">包</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">solidity = \\frac{轮廓面积（对象面积）}{凸包面积}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.363em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.677em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">凸</span><span class=\"mord cjk_fallback\">包</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">轮</span><span class=\"mord cjk_fallback\">廓</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span><span class=\"mord cjk_fallback\">（</span><span class=\"mord cjk_fallback\">对</span><span class=\"mord cjk_fallback\">象</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span><span class=\"mord cjk_fallback\">）</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<ol start=\"4\">\n<li>等效直径<br />\n可以用等效直径来衡量轮廓的特征值，该值是与轮廓面积相等的圆形的直径</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">等</mi><mi mathvariant=\"normal\">效</mi><mi mathvariant=\"normal\">直</mi><mi mathvariant=\"normal\">径</mi><mo>=</mo><msqrt><mfrac><mrow><mn>4</mn><mo>×</mo><mi mathvariant=\"normal\">轮</mi><mi mathvariant=\"normal\">廓</mi><mi mathvariant=\"normal\">面</mi><mi mathvariant=\"normal\">积</mi></mrow><mi>π</mi></mfrac></msqrt></mrow><annotation encoding=\"application/x-tex\">等效直径 = \\sqrt{\\frac{4\\times轮廓面积}{\\pi}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">等</span><span class=\"mord cjk_fallback\">效</span><span class=\"mord cjk_fallback\">直</span><span class=\"mord cjk_fallback\">径</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.44em;vertical-align:-0.788405em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.651595em;\"><span class=\"svg-align\" style=\"top:-4.4em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord cjk_fallback\">轮</span><span class=\"mord cjk_fallback\">廓</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">积</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.6115950000000003em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:2.48em;\"><svg width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.788405em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<ol start=\"5\">\n<li>\n<p>方向<br />\n函数cv2.fitEllipse()可以用来构造最优拟合椭圆，还可以在返回椭圆的中心点、轴长、旋转角度等信息。使用这种形式能够更直观地获取椭圆的方向等信息</p>\n</li>\n<li>\n<p>掩膜和像素点<br />\n有时我们希望获取对象的掩膜图像以及对应的点</p>\n</li>\n<li>\n<p>平均颜色与平均灰度</p>\n</li>\n<li>\n<p>极点</p>\n<ol>\n<li>有时候我们希望获取某个对象的极值点，例如最左端、最右端、最上端、最下端的四个点。</li>\n<li>opencv提供了相应的函数找出这些点</li>\n</ol>\n</li>\n</ol>\n"},{"_content":"\n## 11，**傅里叶变换**\n\n图像处理一般分为空间域处理和频率域处理\n\n空间域处理是直接对图像中的像素进行处理\n\n频率域处理是先将图像变为图像域，然后在频率域对图像进行处理，最后再通过反变换将图像从频率域变换到空间域。\n\n傅里叶变换能够将将空间域变换到频率域，而逆傅里叶变换能够将频率域变换到空间域内。\n\n### **理论基础**\n\n\n\n### **实现**\n","source":"_posts/深度学习/opencv笔记/opencv11.md","raw":"\n## 11，**傅里叶变换**\n\n图像处理一般分为空间域处理和频率域处理\n\n空间域处理是直接对图像中的像素进行处理\n\n频率域处理是先将图像变为图像域，然后在频率域对图像进行处理，最后再通过反变换将图像从频率域变换到空间域。\n\n傅里叶变换能够将将空间域变换到频率域，而逆傅里叶变换能够将频率域变换到空间域内。\n\n### **理论基础**\n\n\n\n### **实现**\n","slug":"深度学习/opencv笔记/opencv11","published":1,"date":"2020-06-18T18:56:25.281Z","updated":"2020-06-18T18:56:25.281Z","title":"深度学习/opencv笔记/opencv11","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7lls2000rj8g50cpzfzq7","content":"<h2 id=\"11傅里叶变换\"><a class=\"markdownIt-Anchor\" href=\"#11傅里叶变换\"></a> 11，<strong>傅里叶变换</strong></h2>\n<p>图像处理一般分为空间域处理和频率域处理</p>\n<p>空间域处理是直接对图像中的像素进行处理</p>\n<p>频率域处理是先将图像变为图像域，然后在频率域对图像进行处理，最后再通过反变换将图像从频率域变换到空间域。</p>\n<p>傅里叶变换能够将将空间域变换到频率域，而逆傅里叶变换能够将频率域变换到空间域内。</p>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\"></a> <strong>实现</strong></h3>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"SDW1WK","length":144,"excerpt":"","more":"<h2 id=\"11傅里叶变换\"><a class=\"markdownIt-Anchor\" href=\"#11傅里叶变换\"></a> 11，<strong>傅里叶变换</strong></h2>\n<p>图像处理一般分为空间域处理和频率域处理</p>\n<p>空间域处理是直接对图像中的像素进行处理</p>\n<p>频率域处理是先将图像变为图像域，然后在频率域对图像进行处理，最后再通过反变换将图像从频率域变换到空间域。</p>\n<p>傅里叶变换能够将将空间域变换到频率域，而逆傅里叶变换能够将频率域变换到空间域内。</p>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\"></a> <strong>实现</strong></h3>\n"},{"_content":"## 13，**霍夫变换**\n\n### 霍夫直线变换\n\n### **霍夫圆形变换**\n","source":"_posts/深度学习/opencv笔记/opencv13.md","raw":"## 13，**霍夫变换**\n\n### 霍夫直线变换\n\n### **霍夫圆形变换**\n","slug":"深度学习/opencv笔记/opencv13","published":1,"date":"2020-06-18T18:56:25.282Z","updated":"2020-08-30T10:07:05.186Z","title":"深度学习/opencv笔记/opencv13","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7lls2000sj8g58pcccei4","content":"<h2 id=\"13霍夫变换\"><a class=\"markdownIt-Anchor\" href=\"#13霍夫变换\"></a> 13，<strong>霍夫变换</strong></h2>\n<h3 id=\"霍夫直线变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫直线变换\"></a> 霍夫直线变换</h3>\n<h3 id=\"霍夫圆形变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫圆形变换\"></a> <strong>霍夫圆形变换</strong></h3>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"3ED0SNZ","length":19,"excerpt":"","more":"<h2 id=\"13霍夫变换\"><a class=\"markdownIt-Anchor\" href=\"#13霍夫变换\"></a> 13，<strong>霍夫变换</strong></h2>\n<h3 id=\"霍夫直线变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫直线变换\"></a> 霍夫直线变换</h3>\n<h3 id=\"霍夫圆形变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫圆形变换\"></a> <strong>霍夫圆形变换</strong></h3>\n"},{"_content":"\n## 12，**模板匹配**\n\n### **模板匹配基础**\n\n### **多模板匹配**\n","source":"_posts/深度学习/opencv笔记/opencv12.md","raw":"\n## 12，**模板匹配**\n\n### **模板匹配基础**\n\n### **多模板匹配**\n","slug":"深度学习/opencv笔记/opencv12","published":1,"date":"2020-06-18T18:56:25.282Z","updated":"2020-06-18T18:56:25.282Z","title":"深度学习/opencv笔记/opencv12","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7lls3000tj8g5gxsuai7m","content":"<h2 id=\"12模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#12模板匹配\"></a> 12，<strong>模板匹配</strong></h2>\n<h3 id=\"模板匹配基础\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配基础\"></a> <strong>模板匹配基础</strong></h3>\n<h3 id=\"多模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#多模板匹配\"></a> <strong>多模板匹配</strong></h3>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"2NXENH9","length":18,"excerpt":"","more":"<h2 id=\"12模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#12模板匹配\"></a> 12，<strong>模板匹配</strong></h2>\n<h3 id=\"模板匹配基础\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配基础\"></a> <strong>模板匹配基础</strong></h3>\n<h3 id=\"多模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#多模板匹配\"></a> <strong>多模板匹配</strong></h3>\n"},{"_content":"\n## 14，**图像分割与提取**\n\n### **用分水岭算法实现图像分割**\n\n### **交互式前景提取**\n","source":"_posts/深度学习/opencv笔记/opencv14.md","raw":"\n## 14，**图像分割与提取**\n\n### **用分水岭算法实现图像分割**\n\n### **交互式前景提取**\n","slug":"深度学习/opencv笔记/opencv14","published":1,"date":"2020-06-18T18:56:25.283Z","updated":"2020-06-18T18:56:25.283Z","title":"深度学习/opencv笔记/opencv14","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7lls4000uj8g5517zfjy7","content":"<h2 id=\"14图像分割与提取\"><a class=\"markdownIt-Anchor\" href=\"#14图像分割与提取\"></a> 14，<strong>图像分割与提取</strong></h2>\n<h3 id=\"用分水岭算法实现图像分割\"><a class=\"markdownIt-Anchor\" href=\"#用分水岭算法实现图像分割\"></a> <strong>用分水岭算法实现图像分割</strong></h3>\n<h3 id=\"交互式前景提取\"><a class=\"markdownIt-Anchor\" href=\"#交互式前景提取\"></a> <strong>交互式前景提取</strong></h3>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"11B9WRW","length":29,"excerpt":"","more":"<h2 id=\"14图像分割与提取\"><a class=\"markdownIt-Anchor\" href=\"#14图像分割与提取\"></a> 14，<strong>图像分割与提取</strong></h2>\n<h3 id=\"用分水岭算法实现图像分割\"><a class=\"markdownIt-Anchor\" href=\"#用分水岭算法实现图像分割\"></a> <strong>用分水岭算法实现图像分割</strong></h3>\n<h3 id=\"交互式前景提取\"><a class=\"markdownIt-Anchor\" href=\"#交互式前景提取\"></a> <strong>交互式前景提取</strong></h3>\n"},{"_content":"\n## 16，**绘图机交互**\n\n### **绘图基础**\n\n### **鼠标交互**\n\n### **滚动条**\n","source":"_posts/深度学习/opencv笔记/opencv16.md","raw":"\n## 16，**绘图机交互**\n\n### **绘图基础**\n\n### **鼠标交互**\n\n### **滚动条**\n","slug":"深度学习/opencv笔记/opencv16","published":1,"date":"2020-06-18T18:56:25.285Z","updated":"2020-06-18T18:56:25.285Z","title":"深度学习/opencv笔记/opencv16","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7lls4000vj8g5fbyab6e3","content":"<h2 id=\"16绘图机交互\"><a class=\"markdownIt-Anchor\" href=\"#16绘图机交互\"></a> 16，<strong>绘图机交互</strong></h2>\n<h3 id=\"绘图基础\"><a class=\"markdownIt-Anchor\" href=\"#绘图基础\"></a> <strong>绘图基础</strong></h3>\n<h3 id=\"鼠标交互\"><a class=\"markdownIt-Anchor\" href=\"#鼠标交互\"></a> <strong>鼠标交互</strong></h3>\n<h3 id=\"滚动条\"><a class=\"markdownIt-Anchor\" href=\"#滚动条\"></a> <strong>滚动条</strong></h3>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"2PBN4HG","length":19,"excerpt":"","more":"<h2 id=\"16绘图机交互\"><a class=\"markdownIt-Anchor\" href=\"#16绘图机交互\"></a> 16，<strong>绘图机交互</strong></h2>\n<h3 id=\"绘图基础\"><a class=\"markdownIt-Anchor\" href=\"#绘图基础\"></a> <strong>绘图基础</strong></h3>\n<h3 id=\"鼠标交互\"><a class=\"markdownIt-Anchor\" href=\"#鼠标交互\"></a> <strong>鼠标交互</strong></h3>\n<h3 id=\"滚动条\"><a class=\"markdownIt-Anchor\" href=\"#滚动条\"></a> <strong>滚动条</strong></h3>\n"},{"_content":"\n## 15，**视频处理**\n\n### **VideoCapture类**\n\n### **ViedeoWriter类**\n\n### **视频操作基础**\n","source":"_posts/深度学习/opencv笔记/opencv15.md","raw":"\n## 15，**视频处理**\n\n### **VideoCapture类**\n\n### **ViedeoWriter类**\n\n### **视频操作基础**\n","slug":"深度学习/opencv笔记/opencv15","published":1,"date":"2020-06-18T18:56:25.284Z","updated":"2020-06-18T18:56:25.284Z","title":"深度学习/opencv笔记/opencv15","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7lls5000wj8g570ijdl9a","content":"<h2 id=\"15视频处理\"><a class=\"markdownIt-Anchor\" href=\"#15视频处理\"></a> 15，<strong>视频处理</strong></h2>\n<h3 id=\"videocapture类\"><a class=\"markdownIt-Anchor\" href=\"#videocapture类\"></a> <strong>VideoCapture类</strong></h3>\n<h3 id=\"viedeowriter类\"><a class=\"markdownIt-Anchor\" href=\"#viedeowriter类\"></a> <strong>ViedeoWriter类</strong></h3>\n<h3 id=\"视频操作基础\"><a class=\"markdownIt-Anchor\" href=\"#视频操作基础\"></a> <strong>视频操作基础</strong></h3>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"TV7GWA","length":39,"excerpt":"","more":"<h2 id=\"15视频处理\"><a class=\"markdownIt-Anchor\" href=\"#15视频处理\"></a> 15，<strong>视频处理</strong></h2>\n<h3 id=\"videocapture类\"><a class=\"markdownIt-Anchor\" href=\"#videocapture类\"></a> <strong>VideoCapture类</strong></h3>\n<h3 id=\"viedeowriter类\"><a class=\"markdownIt-Anchor\" href=\"#viedeowriter类\"></a> <strong>ViedeoWriter类</strong></h3>\n<h3 id=\"视频操作基础\"><a class=\"markdownIt-Anchor\" href=\"#视频操作基础\"></a> <strong>视频操作基础</strong></h3>\n"},{"_content":"\n## 18，**k均值聚类**\n\n","source":"_posts/深度学习/opencv笔记/opencv18.md","raw":"\n## 18，**k均值聚类**\n\n","slug":"深度学习/opencv笔记/opencv18","published":1,"date":"2020-06-18T18:56:25.286Z","updated":"2020-06-18T18:56:25.287Z","title":"深度学习/opencv笔记/opencv18","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llsa000xj8g5c3maei8f","content":"<h2 id=\"18k均值聚类\"><a class=\"markdownIt-Anchor\" href=\"#18k均值聚类\"></a> 18，<strong>k均值聚类</strong></h2>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"15G5FSQ","length":8,"excerpt":"","more":"<h2 id=\"18k均值聚类\"><a class=\"markdownIt-Anchor\" href=\"#18k均值聚类\"></a> 18，<strong>k均值聚类</strong></h2>\n"},{"_content":"\n## 17，**k近邻算法**\n\n### **理论基础**\n\n### **计算**\n\n### **手写数字识别原理**\n\n### **自定义函数手写数字识别**\n\n### **k近邻模块的基本使用**\n\n### **K 近邻手写板数字的识别**\n\n### **svm案例介绍**\n","source":"_posts/深度学习/opencv笔记/opencv17.md","raw":"\n## 17，**k近邻算法**\n\n### **理论基础**\n\n### **计算**\n\n### **手写数字识别原理**\n\n### **自定义函数手写数字识别**\n\n### **k近邻模块的基本使用**\n\n### **K 近邻手写板数字的识别**\n\n### **svm案例介绍**\n","slug":"深度学习/opencv笔记/opencv17","published":1,"date":"2020-06-18T18:56:25.285Z","updated":"2020-06-18T18:56:25.286Z","title":"深度学习/opencv笔记/opencv17","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7llsb000yj8g5g36l11bo","content":"<h2 id=\"17k近邻算法\"><a class=\"markdownIt-Anchor\" href=\"#17k近邻算法\"></a> 17，<strong>k近邻算法</strong></h2>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"计算\"><a class=\"markdownIt-Anchor\" href=\"#计算\"></a> <strong>计算</strong></h3>\n<h3 id=\"手写数字识别原理\"><a class=\"markdownIt-Anchor\" href=\"#手写数字识别原理\"></a> <strong>手写数字识别原理</strong></h3>\n<h3 id=\"自定义函数手写数字识别\"><a class=\"markdownIt-Anchor\" href=\"#自定义函数手写数字识别\"></a> <strong>自定义函数手写数字识别</strong></h3>\n<h3 id=\"k近邻模块的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#k近邻模块的基本使用\"></a> <strong>k近邻模块的基本使用</strong></h3>\n<h3 id=\"k-近邻手写板数字的识别\"><a class=\"markdownIt-Anchor\" href=\"#k-近邻手写板数字的识别\"></a> <strong>K 近邻手写板数字的识别</strong></h3>\n<h3 id=\"svm案例介绍\"><a class=\"markdownIt-Anchor\" href=\"#svm案例介绍\"></a> <strong>svm案例介绍</strong></h3>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"3DVV8N6","length":61,"excerpt":"","more":"<h2 id=\"17k近邻算法\"><a class=\"markdownIt-Anchor\" href=\"#17k近邻算法\"></a> 17，<strong>k近邻算法</strong></h2>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"计算\"><a class=\"markdownIt-Anchor\" href=\"#计算\"></a> <strong>计算</strong></h3>\n<h3 id=\"手写数字识别原理\"><a class=\"markdownIt-Anchor\" href=\"#手写数字识别原理\"></a> <strong>手写数字识别原理</strong></h3>\n<h3 id=\"自定义函数手写数字识别\"><a class=\"markdownIt-Anchor\" href=\"#自定义函数手写数字识别\"></a> <strong>自定义函数手写数字识别</strong></h3>\n<h3 id=\"k近邻模块的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#k近邻模块的基本使用\"></a> <strong>k近邻模块的基本使用</strong></h3>\n<h3 id=\"k-近邻手写板数字的识别\"><a class=\"markdownIt-Anchor\" href=\"#k-近邻手写板数字的识别\"></a> <strong>K 近邻手写板数字的识别</strong></h3>\n<h3 id=\"svm案例介绍\"><a class=\"markdownIt-Anchor\" href=\"#svm案例介绍\"></a> <strong>svm案例介绍</strong></h3>\n"},{"toc":{"depth_from":2,"depth_to":6,"ordered":false},"_content":"# 大道至简\n\n## 目标：系统架构师系列课程\n## 系统高可用：\n- 负载均衡\n- 限流措施\n- 分布式事务\n- 分布式session\n- 压力测试\n\n## 系统高并发\n- 缓存应用\n- 异步并发处理\n- http缓存\n- jvm的优化\n- 队列应用\n- 动静分离\n\n## 构建应用\n- 目标：快速构建应用系统\n- 引入guns框架\n\n---\n# guns入门\n## 基本概念\n- 快速构建后台管理系统的开源框架\n- guns默认提供诸多业务系统的基本功能\n- guns集成诸多优秀开源框架\n\n## 权限管理\n- 用户管理\n- 角色管理\n- 部门管理\n- 菜单管理\n- 字典管理\n- 业务日志\n- 登录日志\n- 监控日志\n- 通知管理\n- 代码生成\n\n## guns部署\n- 使用idea open->guns-parents\n\n- 修改数据源\n 目标：guns-admin\\src\\main\\resources\\application.yml<br>\n 修改内容：<br>\n 修改端口，修改连接本地数据库账户密码\n [1] spring.datasource<br>\n [2] guns.flowable.datasource<br>\n [3] guns.flowable.muti-datasource\n\t\n- 启动guns：\n\t1. 运行java文件【spring boot】:<br>\n\tguns-admin\\src\\main\\java\\com\\stylefeng\\guns\\GunsApplication.java\\com\\stylefeng\\guns\\GunsApplication<br>\n\trun as即可\n\n\t2. 直接运行jar文件<br>\n\t2.1 对guns进行打包部署<br>\n\t2.1.1 找到guns-parents<br>\n\t2.1.2 运行命令 mvn clean package -Dmaven.test.skip=true\n\t2.1.3 拷贝jar包至运行目录\n\t\tjava -jar guns-admin-1.0.0-SNAPSHOT.jar\n\t\n\t3. 运行war包\n\t3.1. 修改guns-admin中的pom文件打包方式\n\t3.2. 对guns进行打包部署\n\t3.2.1  找到guns-parents<br>\n\t3.2.2 运行命令 mvn clean package -Dmaven.test.skip=true\n\t3.2.3 拷贝war包至web服务器的webapp目录中\n\t\tjava -jar guns-admin-1.0.0-SNAPSHOT.jar\n\t\t\n# guns结构组成\n\n## 技术组成\n- spring boot\n- mybatis-plus\n- swagger\n- shiro\n- spring mvc\n\n ## 模块组成\n - guns-parent:guns的maven父工程\n - guns-admin:guns的业务子模块\n - guns-rest：guns的restful子模块\n\t\t\n\t\n# 展望\n1. guns的rest和权限\n2. 将业务代码放置在tomcat中\n3. tomcat集群优化和搭建\n msm-> memcached-session-manager[分布式session处理]\nmemcached->最好的缓存管理中间件\n\n\n\n","source":"_posts/软件与工具使用/guns笔记.md","raw":"---\ntoc:\n  depth_from: 2\n  depth_to: 6\n  ordered: false\n---\n# 大道至简\n\n## 目标：系统架构师系列课程\n## 系统高可用：\n- 负载均衡\n- 限流措施\n- 分布式事务\n- 分布式session\n- 压力测试\n\n## 系统高并发\n- 缓存应用\n- 异步并发处理\n- http缓存\n- jvm的优化\n- 队列应用\n- 动静分离\n\n## 构建应用\n- 目标：快速构建应用系统\n- 引入guns框架\n\n---\n# guns入门\n## 基本概念\n- 快速构建后台管理系统的开源框架\n- guns默认提供诸多业务系统的基本功能\n- guns集成诸多优秀开源框架\n\n## 权限管理\n- 用户管理\n- 角色管理\n- 部门管理\n- 菜单管理\n- 字典管理\n- 业务日志\n- 登录日志\n- 监控日志\n- 通知管理\n- 代码生成\n\n## guns部署\n- 使用idea open->guns-parents\n\n- 修改数据源\n 目标：guns-admin\\src\\main\\resources\\application.yml<br>\n 修改内容：<br>\n 修改端口，修改连接本地数据库账户密码\n [1] spring.datasource<br>\n [2] guns.flowable.datasource<br>\n [3] guns.flowable.muti-datasource\n\t\n- 启动guns：\n\t1. 运行java文件【spring boot】:<br>\n\tguns-admin\\src\\main\\java\\com\\stylefeng\\guns\\GunsApplication.java\\com\\stylefeng\\guns\\GunsApplication<br>\n\trun as即可\n\n\t2. 直接运行jar文件<br>\n\t2.1 对guns进行打包部署<br>\n\t2.1.1 找到guns-parents<br>\n\t2.1.2 运行命令 mvn clean package -Dmaven.test.skip=true\n\t2.1.3 拷贝jar包至运行目录\n\t\tjava -jar guns-admin-1.0.0-SNAPSHOT.jar\n\t\n\t3. 运行war包\n\t3.1. 修改guns-admin中的pom文件打包方式\n\t3.2. 对guns进行打包部署\n\t3.2.1  找到guns-parents<br>\n\t3.2.2 运行命令 mvn clean package -Dmaven.test.skip=true\n\t3.2.3 拷贝war包至web服务器的webapp目录中\n\t\tjava -jar guns-admin-1.0.0-SNAPSHOT.jar\n\t\t\n# guns结构组成\n\n## 技术组成\n- spring boot\n- mybatis-plus\n- swagger\n- shiro\n- spring mvc\n\n ## 模块组成\n - guns-parent:guns的maven父工程\n - guns-admin:guns的业务子模块\n - guns-rest：guns的restful子模块\n\t\t\n\t\n# 展望\n1. guns的rest和权限\n2. 将业务代码放置在tomcat中\n3. tomcat集群优化和搭建\n msm-> memcached-session-manager[分布式session处理]\nmemcached->最好的缓存管理中间件\n\n\n\n","slug":"软件与工具使用/guns笔记","published":1,"date":"2020-07-17T17:35:06.720Z","updated":"2020-08-30T14:53:49.837Z","title":"软件与工具使用/guns笔记","comments":1,"layout":"post","photos":[],"link":"","_id":"ckeh7t3an0000m4g5go2c1wfr","content":"<h1 id=\"大道至简\"><a class=\"markdownIt-Anchor\" href=\"#大道至简\"></a> 大道至简</h1>\n<h2 id=\"目标系统架构师系列课程\"><a class=\"markdownIt-Anchor\" href=\"#目标系统架构师系列课程\"></a> 目标：系统架构师系列课程</h2>\n<h2 id=\"系统高可用\"><a class=\"markdownIt-Anchor\" href=\"#系统高可用\"></a> 系统高可用：</h2>\n<ul>\n<li>负载均衡</li>\n<li>限流措施</li>\n<li>分布式事务</li>\n<li>分布式session</li>\n<li>压力测试</li>\n</ul>\n<h2 id=\"系统高并发\"><a class=\"markdownIt-Anchor\" href=\"#系统高并发\"></a> 系统高并发</h2>\n<ul>\n<li>缓存应用</li>\n<li>异步并发处理</li>\n<li>http缓存</li>\n<li>jvm的优化</li>\n<li>队列应用</li>\n<li>动静分离</li>\n</ul>\n<h2 id=\"构建应用\"><a class=\"markdownIt-Anchor\" href=\"#构建应用\"></a> 构建应用</h2>\n<ul>\n<li>目标：快速构建应用系统</li>\n<li>引入guns框架</li>\n</ul>\n<hr />\n<h1 id=\"guns入门\"><a class=\"markdownIt-Anchor\" href=\"#guns入门\"></a> guns入门</h1>\n<h2 id=\"基本概念\"><a class=\"markdownIt-Anchor\" href=\"#基本概念\"></a> 基本概念</h2>\n<ul>\n<li>快速构建后台管理系统的开源框架</li>\n<li>guns默认提供诸多业务系统的基本功能</li>\n<li>guns集成诸多优秀开源框架</li>\n</ul>\n<h2 id=\"权限管理\"><a class=\"markdownIt-Anchor\" href=\"#权限管理\"></a> 权限管理</h2>\n<ul>\n<li>用户管理</li>\n<li>角色管理</li>\n<li>部门管理</li>\n<li>菜单管理</li>\n<li>字典管理</li>\n<li>业务日志</li>\n<li>登录日志</li>\n<li>监控日志</li>\n<li>通知管理</li>\n<li>代码生成</li>\n</ul>\n<h2 id=\"guns部署\"><a class=\"markdownIt-Anchor\" href=\"#guns部署\"></a> guns部署</h2>\n<ul>\n<li>\n<p>使用idea open-&gt;guns-parents</p>\n</li>\n<li>\n<p>修改数据源<br />\n目标：guns-admin\\src\\main\\resources\\application.yml<br><br />\n修改内容：<br><br />\n修改端口，修改连接本地数据库账户密码<br />\n[1] spring.datasource<br><br />\n[2] guns.flowable.datasource<br><br />\n[3] guns.flowable.muti-datasource</p>\n</li>\n<li>\n<p>启动guns：</p>\n<ol>\n<li>\n<p>运行java文件【spring boot】:<br><br />\nguns-admin\\src\\main\\java\\com\\stylefeng\\guns\\GunsApplication.java\\com\\stylefeng\\guns\\GunsApplication<br><br />\nrun as即可</p>\n</li>\n<li>\n<p>直接运行jar文件<br><br />\n2.1 对guns进行打包部署<br><br />\n2.1.1 找到guns-parents<br><br />\n2.1.2 运行命令 mvn clean package -Dmaven.test.skip=true<br />\n2.1.3 拷贝jar包至运行目录<br />\njava -jar guns-admin-1.0.0-SNAPSHOT.jar</p>\n</li>\n<li>\n<p>运行war包<br />\n3.1. 修改guns-admin中的pom文件打包方式<br />\n3.2. 对guns进行打包部署<br />\n3.2.1  找到guns-parents<br><br />\n3.2.2 运行命令 mvn clean package -Dmaven.test.skip=true<br />\n3.2.3 拷贝war包至web服务器的webapp目录中<br />\njava -jar guns-admin-1.0.0-SNAPSHOT.jar</p>\n</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"guns结构组成\"><a class=\"markdownIt-Anchor\" href=\"#guns结构组成\"></a> guns结构组成</h1>\n<h2 id=\"技术组成\"><a class=\"markdownIt-Anchor\" href=\"#技术组成\"></a> 技术组成</h2>\n<ul>\n<li>spring boot</li>\n<li>mybatis-plus</li>\n<li>swagger</li>\n<li>shiro</li>\n<li>spring mvc</li>\n</ul>\n<h2 id=\"模块组成\"><a class=\"markdownIt-Anchor\" href=\"#模块组成\"></a> 模块组成</h2>\n<ul>\n<li>guns-parent:guns的maven父工程</li>\n<li>guns-admin:guns的业务子模块</li>\n<li>guns-rest：guns的restful子模块</li>\n</ul>\n<h1 id=\"展望\"><a class=\"markdownIt-Anchor\" href=\"#展望\"></a> 展望</h1>\n<ol>\n<li>guns的rest和权限</li>\n<li>将业务代码放置在tomcat中</li>\n<li>tomcat集群优化和搭建<br />\nmsm-&gt; memcached-session-manager[分布式session处理]<br />\nmemcached-&gt;最好的缓存管理中间件</li>\n</ol>\n","site":{"data":{"styles":"/*\nbody {\n    background:url(/images/bg1.png);\n    background-repeat: no-repeat;\n    background-attachment:fixed; //不重复\n    background-size: cover;      //填充\n    background-position:50% 50%;\n}\n//博客内容透明化\n//文章内容的透明度设置\n.content-wrap {\n  opacity: 0.9;\n}\n\n//侧边框的透明度设置\n.sidebar {\n  opacity: 0.9;\n}\n\n//菜单栏的透明度设置\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n\n//搜索框（local-search）的透明度设置\n.popup {\n  opacity: 0.9;\n}\n\n*/\n"}},"abbrlink":"3ZN4H4N","length":1093,"excerpt":"","more":"<h1 id=\"大道至简\"><a class=\"markdownIt-Anchor\" href=\"#大道至简\"></a> 大道至简</h1>\n<h2 id=\"目标系统架构师系列课程\"><a class=\"markdownIt-Anchor\" href=\"#目标系统架构师系列课程\"></a> 目标：系统架构师系列课程</h2>\n<h2 id=\"系统高可用\"><a class=\"markdownIt-Anchor\" href=\"#系统高可用\"></a> 系统高可用：</h2>\n<ul>\n<li>负载均衡</li>\n<li>限流措施</li>\n<li>分布式事务</li>\n<li>分布式session</li>\n<li>压力测试</li>\n</ul>\n<h2 id=\"系统高并发\"><a class=\"markdownIt-Anchor\" href=\"#系统高并发\"></a> 系统高并发</h2>\n<ul>\n<li>缓存应用</li>\n<li>异步并发处理</li>\n<li>http缓存</li>\n<li>jvm的优化</li>\n<li>队列应用</li>\n<li>动静分离</li>\n</ul>\n<h2 id=\"构建应用\"><a class=\"markdownIt-Anchor\" href=\"#构建应用\"></a> 构建应用</h2>\n<ul>\n<li>目标：快速构建应用系统</li>\n<li>引入guns框架</li>\n</ul>\n<hr />\n<h1 id=\"guns入门\"><a class=\"markdownIt-Anchor\" href=\"#guns入门\"></a> guns入门</h1>\n<h2 id=\"基本概念\"><a class=\"markdownIt-Anchor\" href=\"#基本概念\"></a> 基本概念</h2>\n<ul>\n<li>快速构建后台管理系统的开源框架</li>\n<li>guns默认提供诸多业务系统的基本功能</li>\n<li>guns集成诸多优秀开源框架</li>\n</ul>\n<h2 id=\"权限管理\"><a class=\"markdownIt-Anchor\" href=\"#权限管理\"></a> 权限管理</h2>\n<ul>\n<li>用户管理</li>\n<li>角色管理</li>\n<li>部门管理</li>\n<li>菜单管理</li>\n<li>字典管理</li>\n<li>业务日志</li>\n<li>登录日志</li>\n<li>监控日志</li>\n<li>通知管理</li>\n<li>代码生成</li>\n</ul>\n<h2 id=\"guns部署\"><a class=\"markdownIt-Anchor\" href=\"#guns部署\"></a> guns部署</h2>\n<ul>\n<li>\n<p>使用idea open-&gt;guns-parents</p>\n</li>\n<li>\n<p>修改数据源<br />\n目标：guns-admin\\src\\main\\resources\\application.yml<br><br />\n修改内容：<br><br />\n修改端口，修改连接本地数据库账户密码<br />\n[1] spring.datasource<br><br />\n[2] guns.flowable.datasource<br><br />\n[3] guns.flowable.muti-datasource</p>\n</li>\n<li>\n<p>启动guns：</p>\n<ol>\n<li>\n<p>运行java文件【spring boot】:<br><br />\nguns-admin\\src\\main\\java\\com\\stylefeng\\guns\\GunsApplication.java\\com\\stylefeng\\guns\\GunsApplication<br><br />\nrun as即可</p>\n</li>\n<li>\n<p>直接运行jar文件<br><br />\n2.1 对guns进行打包部署<br><br />\n2.1.1 找到guns-parents<br><br />\n2.1.2 运行命令 mvn clean package -Dmaven.test.skip=true<br />\n2.1.3 拷贝jar包至运行目录<br />\njava -jar guns-admin-1.0.0-SNAPSHOT.jar</p>\n</li>\n<li>\n<p>运行war包<br />\n3.1. 修改guns-admin中的pom文件打包方式<br />\n3.2. 对guns进行打包部署<br />\n3.2.1  找到guns-parents<br><br />\n3.2.2 运行命令 mvn clean package -Dmaven.test.skip=true<br />\n3.2.3 拷贝war包至web服务器的webapp目录中<br />\njava -jar guns-admin-1.0.0-SNAPSHOT.jar</p>\n</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"guns结构组成\"><a class=\"markdownIt-Anchor\" href=\"#guns结构组成\"></a> guns结构组成</h1>\n<h2 id=\"技术组成\"><a class=\"markdownIt-Anchor\" href=\"#技术组成\"></a> 技术组成</h2>\n<ul>\n<li>spring boot</li>\n<li>mybatis-plus</li>\n<li>swagger</li>\n<li>shiro</li>\n<li>spring mvc</li>\n</ul>\n<h2 id=\"模块组成\"><a class=\"markdownIt-Anchor\" href=\"#模块组成\"></a> 模块组成</h2>\n<ul>\n<li>guns-parent:guns的maven父工程</li>\n<li>guns-admin:guns的业务子模块</li>\n<li>guns-rest：guns的restful子模块</li>\n</ul>\n<h1 id=\"展望\"><a class=\"markdownIt-Anchor\" href=\"#展望\"></a> 展望</h1>\n<ol>\n<li>guns的rest和权限</li>\n<li>将业务代码放置在tomcat中</li>\n<li>tomcat集群优化和搭建<br />\nmsm-&gt; memcached-session-manager[分布式session处理]<br />\nmemcached-&gt;最好的缓存管理中间件</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckeh7llqc0004j8g5542nfc9a","category_id":"ckeh7llxx000zj8g59397hn8n","_id":"ckeh7lmee0015j8g5bonr63bp"},{"post_id":"ckeh7llqf0005j8g51u4khc73","category_id":"ckeh7llxx000zj8g59397hn8n","_id":"ckeh7lmef0019j8g59zva0hka"},{"post_id":"ckeh7llqg0006j8g51sz74tjo","category_id":"ckeh7llxx000zj8g59397hn8n","_id":"ckeh7lmeg001cj8g5cm518d53"},{"post_id":"ckeh7llqh0007j8g5enz70ytz","category_id":"ckeh7lmef0018j8g50l89dkc4","_id":"ckeh7lmeg001fj8g5c549dwnm"},{"post_id":"ckeh7llqh0008j8g504as9vsm","category_id":"ckeh7lmeg001dj8g56qni31wz","_id":"ckeh7lmeh001jj8g5ack940gr"},{"post_id":"ckeh7llqi0009j8g5hw7ybd3z","category_id":"ckeh7lmeg001gj8g5fy9y236e","_id":"ckeh7lmeh001pj8g55rlthlsd"},{"post_id":"ckeh7llqj000aj8g50cvm3b4u","category_id":"ckeh7lmeg001dj8g56qni31wz","_id":"ckeh7lmei001tj8g5ddlh0bgw"},{"post_id":"ckeh7llqk000bj8g55jx84oj8","category_id":"ckeh7lmeg001gj8g5fy9y236e","_id":"ckeh7lmei001xj8g5bg170phq"},{"post_id":"ckeh7llqk000cj8g5b9fx2yof","category_id":"ckeh7lmeg001gj8g5fy9y236e","_id":"ckeh7lmej0021j8g52ox3g8uw"},{"post_id":"ckeh7llql000dj8g5gmyjhx8a","category_id":"ckeh7lmeg001gj8g5fy9y236e","_id":"ckeh7lmek0025j8g55xr91y3t"},{"post_id":"ckeh7llre000fj8g570h38del","category_id":"ckeh7lmeg001gj8g5fy9y236e","_id":"ckeh7lmek0027j8g5hrar07t9"},{"post_id":"ckeh7llre000gj8g5bn5u1osn","category_id":"ckeh7lmej0024j8g5bhh6ewv9","_id":"ckeh7lmek0029j8g5dikde2ft"},{"post_id":"ckeh7llrs000hj8g5h0mb7ps5","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmep002uj8g519ccare8"},{"post_id":"ckeh7llrs000hj8g5h0mb7ps5","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmeq002vj8g5c38qau9y"},{"post_id":"ckeh7llrs000ij8g58gn2239v","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmeq002xj8g5b7tb46ff"},{"post_id":"ckeh7llrs000ij8g58gn2239v","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmeq002yj8g59j913s1v"},{"post_id":"ckeh7llrt000jj8g5fv6pbeob","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmeq0030j8g56xz93u71"},{"post_id":"ckeh7llrt000jj8g5fv6pbeob","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmeq0031j8g5d0g85ulv"},{"post_id":"ckeh7llru000kj8g5cavadw9b","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmer0033j8g54stx1aoc"},{"post_id":"ckeh7llru000kj8g5cavadw9b","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmer0034j8g5e16xha0c"},{"post_id":"ckeh7llrv000lj8g54vsl6l8d","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmer0036j8g5cixd9i2e"},{"post_id":"ckeh7llrv000lj8g54vsl6l8d","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmer0037j8g5337g9owe"},{"post_id":"ckeh7llrv000mj8g574a92gx2","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmer0039j8g5230u7c30"},{"post_id":"ckeh7llrv000mj8g574a92gx2","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmer003aj8g53z7j2x8s"},{"post_id":"ckeh7llrw000nj8g5946z1pbr","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmes003cj8g50vmd0d6x"},{"post_id":"ckeh7llrw000nj8g5946z1pbr","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmes003dj8g50sfzgc9x"},{"post_id":"ckeh7llrx000oj8g5b747edim","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmes003fj8g5h5s662rr"},{"post_id":"ckeh7llrx000oj8g5b747edim","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmes003gj8g537010gve"},{"post_id":"ckeh7llrx000pj8g59a7h2sm1","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmes003ij8g534aed3bb"},{"post_id":"ckeh7llrx000pj8g59a7h2sm1","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmet003jj8g53cx0b2vo"},{"post_id":"ckeh7lls1000qj8g56xtgcovf","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmet003lj8g5ay9s8u0n"},{"post_id":"ckeh7lls1000qj8g56xtgcovf","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmet003mj8g57igr79hr"},{"post_id":"ckeh7lls2000rj8g50cpzfzq7","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmet003oj8g53wco5e6j"},{"post_id":"ckeh7lls2000rj8g50cpzfzq7","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmet003pj8g5cp2d7379"},{"post_id":"ckeh7lls2000sj8g58pcccei4","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmeu003rj8g54sqah8b9"},{"post_id":"ckeh7lls2000sj8g58pcccei4","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmeu003sj8g59ol3hmc3"},{"post_id":"ckeh7lls3000tj8g5gxsuai7m","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmeu003uj8g5btdu290b"},{"post_id":"ckeh7lls3000tj8g5gxsuai7m","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmeu003vj8g59zfu6lxo"},{"post_id":"ckeh7lls4000uj8g5517zfjy7","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmev003xj8g5414b8igu"},{"post_id":"ckeh7lls4000uj8g5517zfjy7","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmev003yj8g513f4bb1u"},{"post_id":"ckeh7lls4000vj8g5fbyab6e3","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmev0040j8g54j1ohdui"},{"post_id":"ckeh7lls4000vj8g5fbyab6e3","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmev0041j8g5dqjjfxcy"},{"post_id":"ckeh7lls5000wj8g570ijdl9a","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmev0043j8g5bf14gc76"},{"post_id":"ckeh7lls5000wj8g570ijdl9a","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmew0044j8g5e4umc38n"},{"post_id":"ckeh7llsa000xj8g5c3maei8f","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmew0045j8g59j3e5wwj"},{"post_id":"ckeh7llsa000xj8g5c3maei8f","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmew0046j8g5bls4fw9a"},{"post_id":"ckeh7llsb000yj8g5g36l11bo","category_id":"ckeh7lmek0028j8g535bj6i9e","_id":"ckeh7lmew0047j8g59hbf4ybc"},{"post_id":"ckeh7llsb000yj8g5g36l11bo","category_id":"ckeh7lmep002rj8g54en26ivc","_id":"ckeh7lmew0048j8g57lshflkc"},{"post_id":"ckeh7t3an0000m4g5go2c1wfr","category_id":"ckeh7lmeg001gj8g5fy9y236e","_id":"ckeh7t3if0001m4g56k1aazw7"}],"PostTag":[{"post_id":"ckeh7llqg0006j8g51sz74tjo","tag_id":"ckeh7lly20010j8g524an9a11","_id":"ckeh7lmee0013j8g5akny8spt"},{"post_id":"ckeh7llqh0007j8g5enz70ytz","tag_id":"ckeh7lmed0012j8g5femrbwu0","_id":"ckeh7lmef0017j8g5geug5tk7"},{"post_id":"ckeh7llqi0009j8g5hw7ybd3z","tag_id":"ckeh7lmef0016j8g5egv125di","_id":"ckeh7lmef001bj8g58z6lerf2"},{"post_id":"ckeh7llqk000bj8g55jx84oj8","tag_id":"ckeh7lmef001aj8g51l8dh65v","_id":"ckeh7lmeg001ij8g578jwg8sk"},{"post_id":"ckeh7llqk000bj8g55jx84oj8","tag_id":"ckeh7lmef0016j8g5egv125di","_id":"ckeh7lmeh001kj8g53a1zhyyx"},{"post_id":"ckeh7llre000gj8g5bn5u1osn","tag_id":"ckeh7lly20010j8g524an9a11","_id":"ckeh7lmeh001nj8g57l7s4ozx"},{"post_id":"ckeh7llrs000hj8g5h0mb7ps5","tag_id":"ckeh7lly20010j8g524an9a11","_id":"ckeh7lmei001rj8g53oyo64sx"},{"post_id":"ckeh7llrs000ij8g58gn2239v","tag_id":"ckeh7lly20010j8g524an9a11","_id":"ckeh7lmei001vj8g51t75g84v"},{"post_id":"ckeh7llrt000jj8g5fv6pbeob","tag_id":"ckeh7lly20010j8g524an9a11","_id":"ckeh7lmej001zj8g57r9i43cb"},{"post_id":"ckeh7llrv000lj8g54vsl6l8d","tag_id":"ckeh7lly20010j8g524an9a11","_id":"ckeh7lmej0023j8g50jna60qe"},{"post_id":"ckeh7lls1000qj8g56xtgcovf","tag_id":"ckeh7lly20010j8g524an9a11","_id":"ckeh7lmek0026j8g564d2g09j"}],"Tag":[{"name":"opencv","_id":"ckeh7lly20010j8g524an9a11"},{"name":"JavaScript","_id":"ckeh7lmed0012j8g5femrbwu0"},{"name":"ubuntu","_id":"ckeh7lmef0016j8g5egv125di"},{"name":"html5","_id":"ckeh7lmef001aj8g51l8dh65v"}]}}