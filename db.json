{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/images/01.jpg","path":"images/01.jpg","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"source/images/pic001.png","path":"images/pic001.png","modified":1,"renderable":0},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1592035241070},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1592035241070},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1592035241070},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1592035241070},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1592035241070},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1592035241070},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1592035241070},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1592035241070},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1592035241070},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1592035241078},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1592035241074},{"_id":"source/_posts/hello-world.md","hash":"28f8509091fa27745affc3fc922ee33ce4463983","modified":1592079138038},{"_id":"source/about/index.md","hash":"3f3562331e72ccaf6525ef89f8ecb05fcc582b73","modified":1592144553925},{"_id":"themes/next/_config.yml","hash":"ee4c2b3f62af91696e4bcf3a323723380c4270ae","modified":1592150255762},{"_id":"source/_posts/readme.md","hash":"0cb009eed12b91fdd14679390aca4b622cc44234","modified":1592149730842},{"_id":"source/archives/index.md","hash":"ba550a96e00acc89d3b5d3539d6ff37d97a13417","modified":1592063873044},{"_id":"source/categories/index.md","hash":"5618a723d09dae57f48c7aa6fba35be328304058","modified":1592061716445},{"_id":"source/tags/index.md","hash":"49f006c258a5e25f163b879cd8ff9ef490b4612c","modified":1592061803641},{"_id":"source/images/01.jpg","hash":"11f979731f1cf3926d69c326d9207879140f1175","modified":1558404670893},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1592035241070},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1592035241070},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1592035241070},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1592035241070},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1592035241070},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1592035241070},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1592035241070},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1592035241070},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1592035241070},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1592035241070},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1592035241070},{"_id":"source/images/avatar.jpg","hash":"3a1136455bec7eb00d3aca03938e13ae9d62a44e","modified":1558404547707},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1592035241070},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1592035241070},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1592035241070},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1592035241070},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1592035241070},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1592035241070},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1592035241070},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1592035241070},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1592035241074},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1592035241074},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1592035241074},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1592035241074},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1592035241074},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1592035241074},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1592035241074},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1592035241074},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1592035241074},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1592035241074},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1592035241074},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1592035241074},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1592035241074},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1592035241070},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1592035241074},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1592035241074},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1592035241074},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1592035241074},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1592035241074},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1592035241074},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1592035241074},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1592035241074},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1592035241078},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1592035241078},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1592035241078},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1592035241078},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1592035241078},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1592035241078},{"_id":"source/images/pic001.png","hash":"e55de44e7a429e4814fb823e48144ae7914203ef","modified":1592073310342},{"_id":"source/_posts/git/git常见问题.md","hash":"32a39144a2b758b74c26172a6feac0f278c58bdf","modified":1592079043693},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1592035241074},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1592035241074},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1592035241078},{"_id":"source/_posts/ML/opencv.md","hash":"38cd0410e34fcabe7ecfd5ef8fa86a5ae2f14d50","modified":1592077978170},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1592035241070},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1592035241070},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1592035241070},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1592035241070},{"_id":"source/_posts/markdown/markdown笔记.md","hash":"8820a3d33f54da7848b4ffef3abdb7db7246ac8d","modified":1592079070591},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1592035241070},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1592035241074},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1592035241074},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1592035241074},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1592035241074},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1592035241074},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1592035241074},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1592035241074},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1592035241074},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1592035241074},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1592035241074},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1592035241074},{"_id":"source/_posts/vscode/vscode笔记.md","hash":"fc699f1fd7dea175ed19a49866d8dfee3564b27c","modified":1592079074616},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1592035241074},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1592035241074},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1592035241074},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1592035241074},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1592035241074},{"_id":"themes/next/layout/_partials/footer.swig","hash":"700c3e7bd449bce51f6faee42c052e13ed5f8b3e","modified":1592035241074},{"_id":"source/_posts/linux/linux命令.md","hash":"c07e8d37bf06e97b61022fb2b441bee13bd79d18","modified":1592106737181},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1592035241074},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1592035241074},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1592035241074},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1592035241074},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1592035241074},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1592035241074},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1592035241078},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1592035241074},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1592035241074},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1592035241078},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1592035241078},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1592035241078},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1592035241078},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1592035241078},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1592035241078},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1592035241078},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1592035241078},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1592035241078},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1592035241078},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1592035241078},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1592035241078},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1592035241078},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1592035241078},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1592035241078},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1592035241078},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1592035241078},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1592035241078},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1592035241078},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1592035241078},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1592035241078},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1592035241078},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1592035241078},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1592035241082},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1592035241082},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1592035241082},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1592035241082},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1592035241082},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1592035241082},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1592035241082},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1592035241082},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1592035241082},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1592035241082},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1592035241082},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1592035241082},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1592035241082},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1592035241082},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1592035241082},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1592035241082},{"_id":"themes/next/source/js/utils.js","hash":"2c6e6b4d9a592fbb4bf04689524db2cdfcd94ca7","modified":1592035241082},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1592035241078},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1592035241082},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1592035241082},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1592035241082},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1592035241082},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1592035241082},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1592035241074},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1592035241074},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1592035241074},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1592035241074},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1592035241074},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1592035241074},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1592035241074},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1592035241074},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1592035241074},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1592035241074},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1592035241074},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1592035241074},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1592035241074},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1592035241074},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1592035241074},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1592035241074},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1592035241074},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1592035241074},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1592035241074},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1592035241074},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1592035241074},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1592035241078},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1592035241074},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1592035241078},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1592035241078},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1592035241074},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1592035241078},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1592035241078},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1592035241078},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1592035241078},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1592035241078},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1592035241078},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1592035241078},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1592035241078},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1592035241078},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1592035241078},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1592035241078},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1592035241078},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1592035241078},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1592035241078},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1592035241078},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1592035241078},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1592035241078},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1592035241078},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1592035241078},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1592035241078},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1592035241078},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1592035241078},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1592035241078},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1592035241078},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1592035241078},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1592035241078},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1592035241078},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1592035241078},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1592035241078},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1592035241078},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1592035241078},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1592035241078},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1592035241082},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1592035241082},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1592035241082},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1592035241082},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1592035241082},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1592035241082},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1592035241082},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1592035241082},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1592035241082},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1592035241074},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1592035241078},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1592035241082},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1592035241082},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1592035241078},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1592035241082},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1592035241082},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1592035241082},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1592035241082},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1592035241082},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1592035241082},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1592035241078},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1592035241078},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1592035241082},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1592035241082},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1592035241082},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1592035241082},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1592035241078},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1592035241078},{"_id":"public/search.xml","hash":"3d9a75b6fccc257f1aae8a71b59b2d25914f9801","modified":1592392277154},{"_id":"public/about/index.html","hash":"ff6ca1c735d0c326f6519f585e69cbe7e8cb3038","modified":1592392277154},{"_id":"public/archives/index.html","hash":"c048ae44a186deac1ddd73b0825f8375e0a283cb","modified":1592392277154},{"_id":"public/tags/index.html","hash":"06757780bc3e66915c72af27fb03b0be2b835ac1","modified":1592392277154},{"_id":"public/categories/index.html","hash":"f165436037fcc988fc2436113421cbd9f50aef47","modified":1592392277154},{"_id":"public/2020/06/13/ML/opencv/index.html","hash":"b21f7beaf9f8ab05d1e9987bc70e4248b55e5ba6","modified":1592392277154},{"_id":"public/2020/06/13/vscode/vscode笔记/index.html","hash":"9a46bb2a38906b0c9eb911f41f109360859b0f7c","modified":1592392277154},{"_id":"public/2020/06/13/markdown/markdown笔记/index.html","hash":"d36179d46f6c5dd63eb444bb6d2626a3c406e0ef","modified":1592392277154},{"_id":"public/2020/06/13/linux/linux命令/index.html","hash":"c0a932a06f89439d67a01726de940a4d6c1c4b4d","modified":1592392277154},{"_id":"public/2020/06/13/git/git常见问题/index.html","hash":"e4297d76628848031a90d9e6f66fdb1130690211","modified":1592392277154},{"_id":"public/2020/06/13/readme/index.html","hash":"843d08cbea7f2b85b25b210f8a496f14c1ca4b46","modified":1592392277154},{"_id":"public/2020/06/13/hello-world/index.html","hash":"d2aed6ad6df6a31715d283bc7dd253ff102b692e","modified":1592392277154},{"_id":"public/archives/2020/index.html","hash":"0790876277fac676b6c04edd65b3acba3457efcd","modified":1592392277154},{"_id":"public/archives/2020/06/index.html","hash":"b645466005a776962824e44fedef26fc60e4d204","modified":1592392277154},{"_id":"public/categories/git/index.html","hash":"8a8c1777fa670c0481236a6158e4e54e70a65a44","modified":1592392277154},{"_id":"public/categories/ML/index.html","hash":"025fba9ba14b64d28f3b5b1bb7c9aec120537908","modified":1592392277154},{"_id":"public/categories/markdown/index.html","hash":"4e795fca421d85fa6dcbe56049fb707afb17810f","modified":1592392277154},{"_id":"public/categories/vscode/index.html","hash":"633779aaf13adf29ea49515b348d63cb789ffda8","modified":1592392277154},{"_id":"public/categories/linux/index.html","hash":"ea4c444557288d0c51cabfeebb8ba223f36de007","modified":1592392277154},{"_id":"public/index.html","hash":"f2adba335d87f03f01b1552bb01104bbac22fe4b","modified":1592392277154},{"_id":"public/tags/ubuntu/index.html","hash":"2aa2199c309521e0d3fe8e2640b9ada01cb9fed3","modified":1592392277154},{"_id":"public/tags/opencv/index.html","hash":"0271a556d286041a4a42fe4df7814291c173c7ab","modified":1592392277154},{"_id":"public/tags/html5/index.html","hash":"b70e2ece029781db2781c5befe2da3962a0e4e26","modified":1592392277154},{"_id":"public/images/01.jpg","hash":"11f979731f1cf3926d69c326d9207879140f1175","modified":1592392277154},{"_id":"public/images/avatar.jpg","hash":"3a1136455bec7eb00d3aca03938e13ae9d62a44e","modified":1592392277154},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1592392277154},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1592392277154},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1592392277154},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1592392277154},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1592392277154},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1592392277154},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1592392277154},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1592392277154},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1592392277154},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1592392277154},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1592392277154},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1592392277154},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1592392277154},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1592392277154},{"_id":"public/images/pic001.png","hash":"e55de44e7a429e4814fb823e48144ae7914203ef","modified":1592392277154},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1592392277154},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1592392277154},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1592392277154},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1592392277154},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1592392277154},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1592392277154},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1592392277154},{"_id":"public/js/utils.js","hash":"2c6e6b4d9a592fbb4bf04689524db2cdfcd94ca7","modified":1592392277154},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1592392277154},{"_id":"public/css/main.css","hash":"11291b7979437c3575d2ab27eda83ca7621199e4","modified":1592392277154},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1592392277154},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1592392277154},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1592392277154},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1592392277154},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1592392277154}],"Category":[{"name":"git","_id":"ckbj98y1x000flkvo5ys9fccq"},{"name":"ML","_id":"ckbj98yw1000jlkvo4bt7ed9k"},{"name":"markdown","_id":"ckbj98yw2000nlkvo84pb8nrm"},{"name":"vscode","_id":"ckbj98yw2000plkvo5vbr97mc"},{"name":"linux","_id":"ckbj98yw3000rlkvofdk8hess"}],"Data":[],"Page":[{"title":"About Me","date":"2020-06-13T14:27:24.000Z","type":"about","_content":"\n\n# 联系方式\n\n- 手机： 18162323337\n- Email： 1002860620@qq.com\n- QQ: 1002860620\n- 期望职位： web前端工程师/大前端/算法工程师\n  \n# 个人信息\n\n- **王海荣**/男/1995\n- 本科/采矿工程/英语四级\n- 研究生/计算机技术\n- 码云：https://gitee.com/heronwang\n- github：https://github.com/HeronWan\n- CSDN：https://blog.csdn.net/qq_38968556\n\n\n# 教育背景\n\n- **2014.09 -- 2018.06**   武汉工程大学/资源与土木工程学院 本科：采矿工程\n- **2018.09 -- 2021.06**   武汉工程大学/计算机科学与工程学院 研究生：计算机技术\n\n# 项目经验\n\n- **2018.07 -- 2018.08**   上海 /上海同筑信息科技有限公司 实习生\n  - 技术栈：html5/css3/JavaScript/c#\n- **2019.03 -- 2019.12**  武汉/武汉致同事务所  软件开发\n  - 技术栈：java/mysql/mybatis/SpringMVC/git/jenkins/es6/js高级编程\n\n# 个人技能\n\n- 精通： 数据结构与算法，JavaScript高级变成，web开发流程，markdown编辑，git/gitee/github\n- 掌握： python/java/c++基础变成\n- 熟悉： mysql数据库编程，SSM构建项目与持续开发，git操作与使用，opencv计算机视觉库\n\n\n# 个人评价\n\n喜欢挑战，不惧艰难，喜欢动手解决问题的成就感，也喜欢思考问题的本源，做出总结和自己的思考。","source":"about/index.md","raw":"---\ntitle: About Me\ndate: 2020-06-13 22:27:24\ntype: about\n---\n\n\n# 联系方式\n\n- 手机： 18162323337\n- Email： 1002860620@qq.com\n- QQ: 1002860620\n- 期望职位： web前端工程师/大前端/算法工程师\n  \n# 个人信息\n\n- **王海荣**/男/1995\n- 本科/采矿工程/英语四级\n- 研究生/计算机技术\n- 码云：https://gitee.com/heronwang\n- github：https://github.com/HeronWan\n- CSDN：https://blog.csdn.net/qq_38968556\n\n\n# 教育背景\n\n- **2014.09 -- 2018.06**   武汉工程大学/资源与土木工程学院 本科：采矿工程\n- **2018.09 -- 2021.06**   武汉工程大学/计算机科学与工程学院 研究生：计算机技术\n\n# 项目经验\n\n- **2018.07 -- 2018.08**   上海 /上海同筑信息科技有限公司 实习生\n  - 技术栈：html5/css3/JavaScript/c#\n- **2019.03 -- 2019.12**  武汉/武汉致同事务所  软件开发\n  - 技术栈：java/mysql/mybatis/SpringMVC/git/jenkins/es6/js高级编程\n\n# 个人技能\n\n- 精通： 数据结构与算法，JavaScript高级变成，web开发流程，markdown编辑，git/gitee/github\n- 掌握： python/java/c++基础变成\n- 熟悉： mysql数据库编程，SSM构建项目与持续开发，git操作与使用，opencv计算机视觉库\n\n\n# 个人评价\n\n喜欢挑战，不惧艰难，喜欢动手解决问题的成就感，也喜欢思考问题的本源，做出总结和自己的思考。","updated":"2020-06-14T14:22:33.925Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckbj98xys0001lkvofynv5639","content":"<h1 id=\"联系方式\"><a class=\"markdownIt-Anchor\" href=\"#联系方式\"></a> 联系方式</h1>\n<ul>\n<li>手机： 18162323337</li>\n<li>Email： <a href=\"mailto:1002860620@qq.com\">1002860620@qq.com</a></li>\n<li>QQ: 1002860620</li>\n<li>期望职位： web前端工程师/大前端/算法工程师</li>\n</ul>\n<h1 id=\"个人信息\"><a class=\"markdownIt-Anchor\" href=\"#个人信息\"></a> 个人信息</h1>\n<ul>\n<li><strong>王海荣</strong>/男/1995</li>\n<li>本科/采矿工程/英语四级</li>\n<li>研究生/计算机技术</li>\n<li>码云：<a href=\"https://gitee.com/heronwang\" target=\"_blank\" rel=\"noopener\">https://gitee.com/heronwang</a></li>\n<li>github：<a href=\"https://github.com/HeronWan\" target=\"_blank\" rel=\"noopener\">https://github.com/HeronWan</a></li>\n<li>CSDN：<a href=\"https://blog.csdn.net/qq_38968556\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_38968556</a></li>\n</ul>\n<h1 id=\"教育背景\"><a class=\"markdownIt-Anchor\" href=\"#教育背景\"></a> 教育背景</h1>\n<ul>\n<li><strong>2014.09 – 2018.06</strong>   武汉工程大学/资源与土木工程学院 本科：采矿工程</li>\n<li><strong>2018.09 – 2021.06</strong>   武汉工程大学/计算机科学与工程学院 研究生：计算机技术</li>\n</ul>\n<h1 id=\"项目经验\"><a class=\"markdownIt-Anchor\" href=\"#项目经验\"></a> 项目经验</h1>\n<ul>\n<li><strong>2018.07 – 2018.08</strong>   上海 /上海同筑信息科技有限公司 实习生\n<ul>\n<li>技术栈：html5/css3/JavaScript/c#</li>\n</ul>\n</li>\n<li><strong>2019.03 – 2019.12</strong>  武汉/武汉致同事务所  软件开发\n<ul>\n<li>技术栈：java/mysql/mybatis/SpringMVC/git/jenkins/es6/js高级编程</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"个人技能\"><a class=\"markdownIt-Anchor\" href=\"#个人技能\"></a> 个人技能</h1>\n<ul>\n<li>精通： 数据结构与算法，JavaScript高级变成，web开发流程，markdown编辑，git/gitee/github</li>\n<li>掌握： python/java/c++基础变成</li>\n<li>熟悉： mysql数据库编程，SSM构建项目与持续开发，git操作与使用，opencv计算机视觉库</li>\n</ul>\n<h1 id=\"个人评价\"><a class=\"markdownIt-Anchor\" href=\"#个人评价\"></a> 个人评价</h1>\n<p>喜欢挑战，不惧艰难，喜欢动手解决问题的成就感，也喜欢思考问题的本源，做出总结和自己的思考。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"联系方式\"><a class=\"markdownIt-Anchor\" href=\"#联系方式\"></a> 联系方式</h1>\n<ul>\n<li>手机： 18162323337</li>\n<li>Email： <a href=\"mailto:1002860620@qq.com\">1002860620@qq.com</a></li>\n<li>QQ: 1002860620</li>\n<li>期望职位： web前端工程师/大前端/算法工程师</li>\n</ul>\n<h1 id=\"个人信息\"><a class=\"markdownIt-Anchor\" href=\"#个人信息\"></a> 个人信息</h1>\n<ul>\n<li><strong>王海荣</strong>/男/1995</li>\n<li>本科/采矿工程/英语四级</li>\n<li>研究生/计算机技术</li>\n<li>码云：<a href=\"https://gitee.com/heronwang\" target=\"_blank\" rel=\"noopener\">https://gitee.com/heronwang</a></li>\n<li>github：<a href=\"https://github.com/HeronWan\" target=\"_blank\" rel=\"noopener\">https://github.com/HeronWan</a></li>\n<li>CSDN：<a href=\"https://blog.csdn.net/qq_38968556\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_38968556</a></li>\n</ul>\n<h1 id=\"教育背景\"><a class=\"markdownIt-Anchor\" href=\"#教育背景\"></a> 教育背景</h1>\n<ul>\n<li><strong>2014.09 – 2018.06</strong>   武汉工程大学/资源与土木工程学院 本科：采矿工程</li>\n<li><strong>2018.09 – 2021.06</strong>   武汉工程大学/计算机科学与工程学院 研究生：计算机技术</li>\n</ul>\n<h1 id=\"项目经验\"><a class=\"markdownIt-Anchor\" href=\"#项目经验\"></a> 项目经验</h1>\n<ul>\n<li><strong>2018.07 – 2018.08</strong>   上海 /上海同筑信息科技有限公司 实习生\n<ul>\n<li>技术栈：html5/css3/JavaScript/c#</li>\n</ul>\n</li>\n<li><strong>2019.03 – 2019.12</strong>  武汉/武汉致同事务所  软件开发\n<ul>\n<li>技术栈：java/mysql/mybatis/SpringMVC/git/jenkins/es6/js高级编程</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"个人技能\"><a class=\"markdownIt-Anchor\" href=\"#个人技能\"></a> 个人技能</h1>\n<ul>\n<li>精通： 数据结构与算法，JavaScript高级变成，web开发流程，markdown编辑，git/gitee/github</li>\n<li>掌握： python/java/c++基础变成</li>\n<li>熟悉： mysql数据库编程，SSM构建项目与持续开发，git操作与使用，opencv计算机视觉库</li>\n</ul>\n<h1 id=\"个人评价\"><a class=\"markdownIt-Anchor\" href=\"#个人评价\"></a> 个人评价</h1>\n<p>喜欢挑战，不惧艰难，喜欢动手解决问题的成就感，也喜欢思考问题的本源，做出总结和自己的思考。</p>\n"},{"title":"archives","date":"2020-06-13T14:27:26.000Z","type":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2020-06-13 22:27:26\ntype: archives\n---\n","updated":"2020-06-13T15:57:53.044Z","path":"archives/index.html","comments":1,"layout":"page","_id":"ckbj98xyv0003lkvo1yt6ft43","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-06-13T14:27:23.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-06-13 22:27:23\ntype: tags\n---\n","updated":"2020-06-13T15:23:23.641Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckbj98xyx0004lkvo3fc46z6i","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2020-06-13T14:22:07.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-06-13 22:22:07\ntype: categories\n---\n","updated":"2020-06-13T15:21:56.445Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckbj98xz10006lkvocqsh00ug","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!--more-->\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!--more-->\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-06-13T07:15:39.013Z","updated":"2020-06-13T20:12:18.038Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbj98xyn0000lkvoelsw8h01","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"abbrlink":"151FCAP","excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>","more":"<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"README","date":"2020-06-13T09:00:00.000Z","_content":"<!--more-->\n<!-- ![我的图片](/mynotes/images/pic001.png) -->\n\n## 前言\n\ntest\n\n这里仓库主要我在linux系统下的使用以及相关软件和配置笔记，好记性不如烂笔头，希望自己能有朝一日成为大神，无所不能\n\n这里记录自己遇到的相关问题，并解决问题方案，以备后用\n\n同时也记录自己系统学习新知识而敲出来的代码和笔记\n\n贪多嚼不烂，可以慢一点，但必须要扎实\n\n不要复制粘贴别人的答案，一定要自己实践一遍后，经过自己的探索，着实解决了自己问题，然后在逐一记录下来。\n\n## Q&A笔记\n<!-- hexo中点击可以跳转 -->\n1. {% post_link hexo/hello-world %}\n\n2. {% post_link vscode/vscode笔记 %}\n\n3. {% post_link markdown/markdown笔记 %}\n\n4. {% post_link git/git常见问题 %}\n\n5. {% post_link linux/linux命令 %}\n\n<!-- 1. [1.linux系统相关操作](  notes/linux命令.)\n2. [2.vscode相关问题](notes/vscode笔记.md)\n<!-- 3. [3.markdown常见问题](notes/markdown.md) -->\n<!-- 4. [4.git笔记](notes/git常见问题.md) --> \n \n## python的框架与库的学习笔记\n\n1. {% post_link ML/opencv %}\n\n1. [pytorch学习笔记]\n\n## 规范\n\n## todos计划\n\n1. **Ubuntu系统下疑难杂症与解决方案；**\n2. ~~掌握git基本语法，创建仓库，保持远程和本地的同步与更新；~~\n3. ~~markdown语法，维护笔记排版~~\n4. ~~搭建博客，实现本地和远程仓库，以及博客页面三者同步与更新，分享链接可远程访问；~~\n5. opencv-python系统学习笔记\n6. pytorch深度学习框架学习笔记","source":"_posts/readme.md","raw":"title: README\ntags:\n  - ubuntu\n  - opencv\ncategories: []\ndate: 2020-06-13 17:00:00\n---\n<!--more-->\n<!-- ![我的图片](/mynotes/images/pic001.png) -->\n\n## 前言\n\ntest\n\n这里仓库主要我在linux系统下的使用以及相关软件和配置笔记，好记性不如烂笔头，希望自己能有朝一日成为大神，无所不能\n\n这里记录自己遇到的相关问题，并解决问题方案，以备后用\n\n同时也记录自己系统学习新知识而敲出来的代码和笔记\n\n贪多嚼不烂，可以慢一点，但必须要扎实\n\n不要复制粘贴别人的答案，一定要自己实践一遍后，经过自己的探索，着实解决了自己问题，然后在逐一记录下来。\n\n## Q&A笔记\n<!-- hexo中点击可以跳转 -->\n1. {% post_link hexo/hello-world %}\n\n2. {% post_link vscode/vscode笔记 %}\n\n3. {% post_link markdown/markdown笔记 %}\n\n4. {% post_link git/git常见问题 %}\n\n5. {% post_link linux/linux命令 %}\n\n<!-- 1. [1.linux系统相关操作](  notes/linux命令.)\n2. [2.vscode相关问题](notes/vscode笔记.md)\n<!-- 3. [3.markdown常见问题](notes/markdown.md) -->\n<!-- 4. [4.git笔记](notes/git常见问题.md) --> \n \n## python的框架与库的学习笔记\n\n1. {% post_link ML/opencv %}\n\n1. [pytorch学习笔记]\n\n## 规范\n\n## todos计划\n\n1. **Ubuntu系统下疑难杂症与解决方案；**\n2. ~~掌握git基本语法，创建仓库，保持远程和本地的同步与更新；~~\n3. ~~markdown语法，维护笔记排版~~\n4. ~~搭建博客，实现本地和远程仓库，以及博客页面三者同步与更新，分享链接可远程访问；~~\n5. opencv-python系统学习笔记\n6. pytorch深度学习框架学习笔记","slug":"readme","published":1,"updated":"2020-06-14T15:48:50.842Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbj98xyu0002lkvo9xi15ae8","content":"<a id=\"more\"></a>\n<!-- ![我的图片](/mynotes/images/pic001.png) -->\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>test</p>\n<p>这里仓库主要我在linux系统下的使用以及相关软件和配置笔记，好记性不如烂笔头，希望自己能有朝一日成为大神，无所不能</p>\n<p>这里记录自己遇到的相关问题，并解决问题方案，以备后用</p>\n<p>同时也记录自己系统学习新知识而敲出来的代码和笔记</p>\n<p>贪多嚼不烂，可以慢一点，但必须要扎实</p>\n<p>不要复制粘贴别人的答案，一定要自己实践一遍后，经过自己的探索，着实解决了自己问题，然后在逐一记录下来。</p>\n<h2 id=\"qa笔记\"><a class=\"markdownIt-Anchor\" href=\"#qa笔记\"></a> Q&amp;A笔记</h2>\n<!-- hexo中点击可以跳转 -->\n<ol>\n<li>\n\n</li>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/vscode/vscode%E7%AC%94%E8%AE%B0/\" title=\"vscode&#x2F;vscode笔记\">vscode&#x2F;vscode笔记</a>\n</li>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/markdown/markdown%E7%AC%94%E8%AE%B0/\" title=\"markdown&#x2F;markdown笔记\">markdown&#x2F;markdown笔记</a>\n</li>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/git/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/\" title=\"git&#x2F;git常见问题\">git&#x2F;git常见问题</a>\n</li>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/linux/linux%E5%91%BD%E4%BB%A4/\" title=\"linux&#x2F;linux命令\">linux&#x2F;linux命令</a>\n</li>\n</ol>\n<!-- 1. [1.linux系统相关操作](  notes/linux命令.)\n2. [2.vscode相关问题](notes/vscode笔记.md)\n<!-- 3. [3.markdown常见问题](notes/markdown.md) -->\n<!-- 4. [4.git笔记](notes/git常见问题.md) --> \n<h2 id=\"python的框架与库的学习笔记\"><a class=\"markdownIt-Anchor\" href=\"#python的框架与库的学习笔记\"></a> python的框架与库的学习笔记</h2>\n<ol>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/ML/opencv/\" title=\"ML&#x2F;opencv\">ML&#x2F;opencv</a>\n</li>\n<li>\n<p>[pytorch学习笔记]</p>\n</li>\n</ol>\n<h2 id=\"规范\"><a class=\"markdownIt-Anchor\" href=\"#规范\"></a> 规范</h2>\n<h2 id=\"todos计划\"><a class=\"markdownIt-Anchor\" href=\"#todos计划\"></a> todos计划</h2>\n<ol>\n<li><strong>Ubuntu系统下疑难杂症与解决方案；</strong></li>\n<li><s>掌握git基本语法，创建仓库，保持远程和本地的同步与更新；</s></li>\n<li><s>markdown语法，维护笔记排版</s></li>\n<li><s>搭建博客，实现本地和远程仓库，以及博客页面三者同步与更新，分享链接可远程访问；</s></li>\n<li>opencv-python系统学习笔记</li>\n<li>pytorch深度学习框架学习笔记</li>\n</ol>\n","site":{"data":{}},"abbrlink":"1VWTGBN","excerpt":"","more":"<!-- ![我的图片](/mynotes/images/pic001.png) -->\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>test</p>\n<p>这里仓库主要我在linux系统下的使用以及相关软件和配置笔记，好记性不如烂笔头，希望自己能有朝一日成为大神，无所不能</p>\n<p>这里记录自己遇到的相关问题，并解决问题方案，以备后用</p>\n<p>同时也记录自己系统学习新知识而敲出来的代码和笔记</p>\n<p>贪多嚼不烂，可以慢一点，但必须要扎实</p>\n<p>不要复制粘贴别人的答案，一定要自己实践一遍后，经过自己的探索，着实解决了自己问题，然后在逐一记录下来。</p>\n<h2 id=\"qa笔记\"><a class=\"markdownIt-Anchor\" href=\"#qa笔记\"></a> Q&amp;A笔记</h2>\n<!-- hexo中点击可以跳转 -->\n<ol>\n<li>\n\n</li>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/vscode/vscode%E7%AC%94%E8%AE%B0/\" title=\"vscode&#x2F;vscode笔记\">vscode&#x2F;vscode笔记</a>\n</li>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/markdown/markdown%E7%AC%94%E8%AE%B0/\" title=\"markdown&#x2F;markdown笔记\">markdown&#x2F;markdown笔记</a>\n</li>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/git/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/\" title=\"git&#x2F;git常见问题\">git&#x2F;git常见问题</a>\n</li>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/linux/linux%E5%91%BD%E4%BB%A4/\" title=\"linux&#x2F;linux命令\">linux&#x2F;linux命令</a>\n</li>\n</ol>\n<!-- 1. [1.linux系统相关操作](  notes/linux命令.)\n2. [2.vscode相关问题](notes/vscode笔记.md)\n<!-- 3. [3.markdown常见问题](notes/markdown.md) -->\n<!-- 4. [4.git笔记](notes/git常见问题.md) --> \n<h2 id=\"python的框架与库的学习笔记\"><a class=\"markdownIt-Anchor\" href=\"#python的框架与库的学习笔记\"></a> python的框架与库的学习笔记</h2>\n<ol>\n<li>\n<a href=\"/HeronWan.github.io/2020/06/13/ML/opencv/\" title=\"ML&#x2F;opencv\">ML&#x2F;opencv</a>\n</li>\n<li>\n<p>[pytorch学习笔记]</p>\n</li>\n</ol>\n<h2 id=\"规范\"><a class=\"markdownIt-Anchor\" href=\"#规范\"></a> 规范</h2>\n<h2 id=\"todos计划\"><a class=\"markdownIt-Anchor\" href=\"#todos计划\"></a> todos计划</h2>\n<ol>\n<li><strong>Ubuntu系统下疑难杂症与解决方案；</strong></li>\n<li><s>掌握git基本语法，创建仓库，保持远程和本地的同步与更新；</s></li>\n<li><s>markdown语法，维护笔记排版</s></li>\n<li><s>搭建博客，实现本地和远程仓库，以及博客页面三者同步与更新，分享链接可远程访问；</s></li>\n<li>opencv-python系统学习笔记</li>\n<li>pytorch深度学习框架学习笔记</li>\n</ol>"},{"toc":{"depth_from":2,"depth_to":6,"ordered":false},"_content":"# git常见问题汇 \n\n## 1. git怎么快捷提交到远程\n\n有时候只是修改了一个简单的地方，但是提交却要好几行才能完成\n\n```bash\ngit add .\ngit commit -am \"change some text\"\ngit push\n```\n\n能不能把这几句合并成一句，以后再也不用桥一些繁琐的命令，以提高工作效率\n当然可以，如下：\n<!--more-->\n> git add . &&  git commit -am \"change some text\" && git push\n\n一句搞定！\n但是问题来了，这句命令也太长了吧，做人能不能简单一点，不要搞得那么复杂吗！或者能直接设置快捷键呢？\n\n好的，满足你，跟着我来一起做，步骤如下：\n\n1. 用vscode打开当前仓库，配置task.json:\n\n    点击vscode界面左下角，打开 command palette.. ---> 输入task 进行搜索  --->  选择task：configure task -> 选择task 模板 ，新建task.json文件 ---> 在task.json文件中修改成以下内容：\n\n    ```md\n    {\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\n    // for the documentation about the tasks.json format\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"push code\",\n            \"type\": \"shell\",\n            \"command\": \"git add . &  git commit -am 'change something' & git push\"\n        }\n    ]\n    }\n    ```\n\n2. 验证 task是否能运行：\n\n    点击vscode界面左下角，打开 command palette.. ---> 输入run task 回车 ---> 点击 push code看task是否能成功执行\n\n3. 配置快捷键：\n\n    file ---> preference ---> keyboard shortcut ---> 打开了快捷键配置文件，点击右上角的 {}，进入文本编辑模式，添加如下内容：\n\n    ```markdown\n    [\n        {\n            // 为git提交代码到远程仓库设置快捷键 \n            \"key\": \"ctrl+p ctrl+p\",\n            \"command\": \"workbench.action.tasks.runTask\",\n            \"args\": \"push code\",\n            \"when\": \"isLinux\"    \n        }\n    ]\n    ```\n\n4. 使用 快捷键\"ctrl+p ctrl+p\" 验证是否能成功push代码到远程仓库。\n\n原本按照这个想法，我想到了两个思路：\n\n1. 通过vscode的设置task和快捷键完成操作，步骤如上。\n\n2. 将三条命令alias一条简短的快捷命令,在终端上执行。\n   \n    2.1 但是这个并没有想象中那么简单，至少在gitvonfig中是难以实现的。因为 alias 中的快捷命令是需要运行时需要在前面添加 git 才能运行的，比如：<code>alias p=push </code>，那么在命令行运行 <code>git p</code> 就相当于 <code>git push </code>。这就限制了无法用 将这三条命令 缩写成一条命令来运行。\n\n    2.2 但是世上无难事，只要有心人，曲线也是能救国的！不要局限在git的配置中怎么去实现，思维要开阔些！我们可以在当前文件夹下面新建一个bash脚本，把上面三条命令直接写进去，直接运行脚本不就可以了嘛!\n\n    当前文件夹下面创建push.sh,写入文本：\n        \n    ```md\n    git add .\n    echo 成功添加暂存区\n    git commit -am \"change some text\"\n    echo 成功提交到本地仓库\n    git push\n    echo 成功push到远程仓库\n    ```\n\n    在当前文件夹下面的终端运行：\n    > chmod a+x push.sh \n    > \n    > ./push.sh\n\n## 2. git提交码云上没有显示贡献度\n\n  结果竟然是因为我设置的全局邮箱有问题:\n    \n  ```\n  user.email=\"1002860620@qq.com\"\n  user.name=heronwang\n  ```\n  \n  上面所示，邮箱多了一双引号，去掉引号就可以啦\n  `git config --global user.email 1002860620@qq.com`\n  \n  然后再输入`git config -l` 查看配置：\n\n  ```\n  user.email=1002860620@qq.com\n  user.name=heronwang\n  ```\n\n  引号去掉了，然后`git push`提交，在后台查看终于显示我的贡献度了，\n\n  好气哦，ubuntu用了这么长时间，在码云上提交了那么多贡献全是空的！！\n\n\n## 3.怎么给仓库打tag，记录历史中重要的节点\n\n首先`git tag -l` 查看仓库中所有tag \n\nGit 支持两种标签：轻量标签（lightweight）与附注标签（annotated）\n\n- 轻量标签：很像一个不会改变的分支——它只是某个特定提交的引用。\n  \n  `git tag <tagname>` 创建轻量标签\n  `git show <tagname>` 显示出提交信息\n\n- 附注标签：是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。\n  `git tag -a <tagname> -m \"标签信息\"` 创建附注标签\n\n- 后期打标签：你也可以对过去的提交打标签\n  `git log --pretty=oneline` 显示历史提交信息\n  `git tag -a <tagname> <某个提交的哈希码>` 为历史提交打标签\n\n- 共享标签：将标签上传到远程共享\n  `git push origin --tags` 上传所有tags\n  `git push origin <tagname>` 上传某个tag\n\n- 删除标签tag\n  `git tag -d <tagname>` 删除本地tag\n  `git push origin --delete <tagname>`   删除远程tag\n\n- 检出标签：如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用，在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支。\n   `git checkout <tagname>` 查看标签具体内容\n\n   `git checkout -b <branchName> <tagname>` 为某个标签创建分支\n\n","source":"_posts/git/git常见问题.md","raw":"---\ntoc:\n  depth_from: 2\n  depth_to: 6\n  ordered: false\n---\n# git常见问题汇 \n\n## 1. git怎么快捷提交到远程\n\n有时候只是修改了一个简单的地方，但是提交却要好几行才能完成\n\n```bash\ngit add .\ngit commit -am \"change some text\"\ngit push\n```\n\n能不能把这几句合并成一句，以后再也不用桥一些繁琐的命令，以提高工作效率\n当然可以，如下：\n<!--more-->\n> git add . &&  git commit -am \"change some text\" && git push\n\n一句搞定！\n但是问题来了，这句命令也太长了吧，做人能不能简单一点，不要搞得那么复杂吗！或者能直接设置快捷键呢？\n\n好的，满足你，跟着我来一起做，步骤如下：\n\n1. 用vscode打开当前仓库，配置task.json:\n\n    点击vscode界面左下角，打开 command palette.. ---> 输入task 进行搜索  --->  选择task：configure task -> 选择task 模板 ，新建task.json文件 ---> 在task.json文件中修改成以下内容：\n\n    ```md\n    {\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\n    // for the documentation about the tasks.json format\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"push code\",\n            \"type\": \"shell\",\n            \"command\": \"git add . &  git commit -am 'change something' & git push\"\n        }\n    ]\n    }\n    ```\n\n2. 验证 task是否能运行：\n\n    点击vscode界面左下角，打开 command palette.. ---> 输入run task 回车 ---> 点击 push code看task是否能成功执行\n\n3. 配置快捷键：\n\n    file ---> preference ---> keyboard shortcut ---> 打开了快捷键配置文件，点击右上角的 {}，进入文本编辑模式，添加如下内容：\n\n    ```markdown\n    [\n        {\n            // 为git提交代码到远程仓库设置快捷键 \n            \"key\": \"ctrl+p ctrl+p\",\n            \"command\": \"workbench.action.tasks.runTask\",\n            \"args\": \"push code\",\n            \"when\": \"isLinux\"    \n        }\n    ]\n    ```\n\n4. 使用 快捷键\"ctrl+p ctrl+p\" 验证是否能成功push代码到远程仓库。\n\n原本按照这个想法，我想到了两个思路：\n\n1. 通过vscode的设置task和快捷键完成操作，步骤如上。\n\n2. 将三条命令alias一条简短的快捷命令,在终端上执行。\n   \n    2.1 但是这个并没有想象中那么简单，至少在gitvonfig中是难以实现的。因为 alias 中的快捷命令是需要运行时需要在前面添加 git 才能运行的，比如：<code>alias p=push </code>，那么在命令行运行 <code>git p</code> 就相当于 <code>git push </code>。这就限制了无法用 将这三条命令 缩写成一条命令来运行。\n\n    2.2 但是世上无难事，只要有心人，曲线也是能救国的！不要局限在git的配置中怎么去实现，思维要开阔些！我们可以在当前文件夹下面新建一个bash脚本，把上面三条命令直接写进去，直接运行脚本不就可以了嘛!\n\n    当前文件夹下面创建push.sh,写入文本：\n        \n    ```md\n    git add .\n    echo 成功添加暂存区\n    git commit -am \"change some text\"\n    echo 成功提交到本地仓库\n    git push\n    echo 成功push到远程仓库\n    ```\n\n    在当前文件夹下面的终端运行：\n    > chmod a+x push.sh \n    > \n    > ./push.sh\n\n## 2. git提交码云上没有显示贡献度\n\n  结果竟然是因为我设置的全局邮箱有问题:\n    \n  ```\n  user.email=\"1002860620@qq.com\"\n  user.name=heronwang\n  ```\n  \n  上面所示，邮箱多了一双引号，去掉引号就可以啦\n  `git config --global user.email 1002860620@qq.com`\n  \n  然后再输入`git config -l` 查看配置：\n\n  ```\n  user.email=1002860620@qq.com\n  user.name=heronwang\n  ```\n\n  引号去掉了，然后`git push`提交，在后台查看终于显示我的贡献度了，\n\n  好气哦，ubuntu用了这么长时间，在码云上提交了那么多贡献全是空的！！\n\n\n## 3.怎么给仓库打tag，记录历史中重要的节点\n\n首先`git tag -l` 查看仓库中所有tag \n\nGit 支持两种标签：轻量标签（lightweight）与附注标签（annotated）\n\n- 轻量标签：很像一个不会改变的分支——它只是某个特定提交的引用。\n  \n  `git tag <tagname>` 创建轻量标签\n  `git show <tagname>` 显示出提交信息\n\n- 附注标签：是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。\n  `git tag -a <tagname> -m \"标签信息\"` 创建附注标签\n\n- 后期打标签：你也可以对过去的提交打标签\n  `git log --pretty=oneline` 显示历史提交信息\n  `git tag -a <tagname> <某个提交的哈希码>` 为历史提交打标签\n\n- 共享标签：将标签上传到远程共享\n  `git push origin --tags` 上传所有tags\n  `git push origin <tagname>` 上传某个tag\n\n- 删除标签tag\n  `git tag -d <tagname>` 删除本地tag\n  `git push origin --delete <tagname>`   删除远程tag\n\n- 检出标签：如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用，在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支。\n   `git checkout <tagname>` 查看标签具体内容\n\n   `git checkout -b <branchName> <tagname>` 为某个标签创建分支\n\n","slug":"git/git常见问题","published":1,"date":"2020-06-13T09:00:03.246Z","updated":"2020-06-13T20:10:43.693Z","title":"git/git常见问题","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbj98y06000alkvo3c0v3iyh","content":"<h1 id=\"git常见问题汇\"><a class=\"markdownIt-Anchor\" href=\"#git常见问题汇\"></a> git常见问题汇</h1>\n<h2 id=\"1-git怎么快捷提交到远程\"><a class=\"markdownIt-Anchor\" href=\"#1-git怎么快捷提交到远程\"></a> 1. git怎么快捷提交到远程</h2>\n<p>有时候只是修改了一个简单的地方，但是提交却要好几行才能完成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -am <span class=\"string\">\"change some text\"</span></span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n<p>能不能把这几句合并成一句，以后再也不用桥一些繁琐的命令，以提高工作效率<br />\n当然可以，如下：</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>git add . &amp;&amp;  git commit -am “change some text” &amp;&amp; git push</p>\n</blockquote>\n<p>一句搞定！<br />\n但是问题来了，这句命令也太长了吧，做人能不能简单一点，不要搞得那么复杂吗！或者能直接设置快捷键呢？</p>\n<p>好的，满足你，跟着我来一起做，步骤如下：</p>\n<ol>\n<li>\n<p>用vscode打开当前仓库，配置task.json:</p>\n<p>点击vscode界面左下角，打开 command palette… —&gt; 输入task 进行搜索  —&gt;  选择task：configure task -&gt; 选择task 模板 ，新建task.json文件 —&gt; 在task.json文件中修改成以下内容：</p>\n <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">// See https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class=\"line\">// for the documentation about the tasks.json format</span><br><span class=\"line\">\"version\": \"2.0.0\",</span><br><span class=\"line\">\"tasks\": [</span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">        \"label\": \"push code\",</span></span><br><span class=\"line\"><span class=\"code\">        \"type\": \"shell\",</span></span><br><span class=\"line\"><span class=\"code\">        \"command\": \"git add . &amp;  git commit -am 'change something' &amp; git push\"</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\">]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>验证 task是否能运行：</p>\n<p>点击vscode界面左下角，打开 command palette… —&gt; 输入run task 回车 —&gt; 点击 push code看task是否能成功执行</p>\n</li>\n<li>\n<p>配置快捷键：</p>\n<p>file —&gt; preference —&gt; keyboard shortcut —&gt; 打开了快捷键配置文件，点击右上角的 {}，进入文本编辑模式，添加如下内容：</p>\n <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">        // 为git提交代码到远程仓库设置快捷键 </span></span><br><span class=\"line\"><span class=\"code\">        \"key\": \"ctrl+p ctrl+p\",</span></span><br><span class=\"line\"><span class=\"code\">        \"command\": \"workbench.action.tasks.runTask\",</span></span><br><span class=\"line\"><span class=\"code\">        \"args\": \"push code\",</span></span><br><span class=\"line\"><span class=\"code\">        \"when\": \"isLinux\"    </span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用 快捷键&quot;ctrl+p ctrl+p&quot; 验证是否能成功push代码到远程仓库。</p>\n</li>\n</ol>\n<p>原本按照这个想法，我想到了两个思路：</p>\n<ol>\n<li>\n<p>通过vscode的设置task和快捷键完成操作，步骤如上。</p>\n</li>\n<li>\n<p>将三条命令alias一条简短的快捷命令,在终端上执行。</p>\n<p>2.1 但是这个并没有想象中那么简单，至少在gitvonfig中是难以实现的。因为 alias 中的快捷命令是需要运行时需要在前面添加 git 才能运行的，比如：<code>alias p=push </code>，那么在命令行运行 <code>git p</code> 就相当于 <code>git push </code>。这就限制了无法用 将这三条命令 缩写成一条命令来运行。</p>\n<p>2.2 但是世上无难事，只要有心人，曲线也是能救国的！不要局限在git的配置中怎么去实现，思维要开阔些！我们可以在当前文件夹下面新建一个bash脚本，把上面三条命令直接写进去，直接运行脚本不就可以了嘛!</p>\n<p><a href=\"http://xn--push-494fr2cb5kmlat54c6rn21ar85cw26m.sh\" target=\"_blank\" rel=\"noopener\">当前文件夹下面创建push.sh</a>,写入文本：</p>\n <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">echo 成功添加暂存区</span><br><span class=\"line\">git commit -am \"change some text\"</span><br><span class=\"line\">echo 成功提交到本地仓库</span><br><span class=\"line\">git push</span><br><span class=\"line\">echo 成功push到远程仓库</span><br></pre></td></tr></table></figure>\n<p>在当前文件夹下面的终端运行：</p>\n<blockquote>\n<p>chmod a+x <a href=\"http://push.sh\" target=\"_blank\" rel=\"noopener\">push.sh</a></p>\n<p>./push.sh</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"2-git提交码云上没有显示贡献度\"><a class=\"markdownIt-Anchor\" href=\"#2-git提交码云上没有显示贡献度\"></a> 2. git提交码云上没有显示贡献度</h2>\n<p>结果竟然是因为我设置的全局邮箱有问题:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.email&#x3D;&quot;1002860620@qq.com&quot;</span><br><span class=\"line\">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>\n<p>上面所示，邮箱多了一双引号，去掉引号就可以啦<br />\n<code>git config --global user.email 1002860620@qq.com</code></p>\n<p>然后再输入<code>git config -l</code> 查看配置：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.email&#x3D;1002860620@qq.com</span><br><span class=\"line\">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>\n<p>引号去掉了，然后<code>git push</code>提交，在后台查看终于显示我的贡献度了，</p>\n<p>好气哦，ubuntu用了这么长时间，在码云上提交了那么多贡献全是空的！！</p>\n<h2 id=\"3怎么给仓库打tag记录历史中重要的节点\"><a class=\"markdownIt-Anchor\" href=\"#3怎么给仓库打tag记录历史中重要的节点\"></a> 3.怎么给仓库打tag，记录历史中重要的节点</h2>\n<p>首先<code>git tag -l</code> 查看仓库中所有tag</p>\n<p>Git 支持两种标签：轻量标签（lightweight）与附注标签（annotated）</p>\n<ul>\n<li>\n<p>轻量标签：很像一个不会改变的分支——它只是某个特定提交的引用。</p>\n<p><code>git tag &lt;tagname&gt;</code> 创建轻量标签<br />\n<code>git show &lt;tagname&gt;</code> 显示出提交信息</p>\n</li>\n<li>\n<p>附注标签：是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。<br />\n<code>git tag -a &lt;tagname&gt; -m &quot;标签信息&quot;</code> 创建附注标签</p>\n</li>\n<li>\n<p>后期打标签：你也可以对过去的提交打标签<br />\n<code>git log --pretty=oneline</code> 显示历史提交信息<br />\n<code>git tag -a &lt;tagname&gt; &lt;某个提交的哈希码&gt;</code> 为历史提交打标签</p>\n</li>\n<li>\n<p>共享标签：将标签上传到远程共享<br />\n<code>git push origin --tags</code> 上传所有tags<br />\n<code>git push origin &lt;tagname&gt;</code> 上传某个tag</p>\n</li>\n<li>\n<p>删除标签tag<br />\n<code>git tag -d &lt;tagname&gt;</code> 删除本地tag<br />\n<code>git push origin --delete &lt;tagname&gt;</code>   删除远程tag</p>\n</li>\n<li>\n<p>检出标签：如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用，在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支。<br />\n<code>git checkout &lt;tagname&gt;</code> 查看标签具体内容</p>\n<p><code>git checkout -b &lt;branchName&gt; &lt;tagname&gt;</code> 为某个标签创建分支</p>\n</li>\n</ul>\n","site":{"data":{}},"abbrlink":"1VVAB21","excerpt":"<h1 id=\"git常见问题汇\"><a class=\"markdownIt-Anchor\" href=\"#git常见问题汇\"></a> git常见问题汇</h1>\n<h2 id=\"1-git怎么快捷提交到远程\"><a class=\"markdownIt-Anchor\" href=\"#1-git怎么快捷提交到远程\"></a> 1. git怎么快捷提交到远程</h2>\n<p>有时候只是修改了一个简单的地方，但是提交却要好几行才能完成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -am <span class=\"string\">\"change some text\"</span></span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n<p>能不能把这几句合并成一句，以后再也不用桥一些繁琐的命令，以提高工作效率<br />\n当然可以，如下：</p>","more":"<blockquote>\n<p>git add . &amp;&amp;  git commit -am “change some text” &amp;&amp; git push</p>\n</blockquote>\n<p>一句搞定！<br />\n但是问题来了，这句命令也太长了吧，做人能不能简单一点，不要搞得那么复杂吗！或者能直接设置快捷键呢？</p>\n<p>好的，满足你，跟着我来一起做，步骤如下：</p>\n<ol>\n<li>\n<p>用vscode打开当前仓库，配置task.json:</p>\n<p>点击vscode界面左下角，打开 command palette… —&gt; 输入task 进行搜索  —&gt;  选择task：configure task -&gt; 选择task 模板 ，新建task.json文件 —&gt; 在task.json文件中修改成以下内容：</p>\n <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">// See https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class=\"line\">// for the documentation about the tasks.json format</span><br><span class=\"line\">\"version\": \"2.0.0\",</span><br><span class=\"line\">\"tasks\": [</span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">        \"label\": \"push code\",</span></span><br><span class=\"line\"><span class=\"code\">        \"type\": \"shell\",</span></span><br><span class=\"line\"><span class=\"code\">        \"command\": \"git add . &amp;  git commit -am 'change something' &amp; git push\"</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\">]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>验证 task是否能运行：</p>\n<p>点击vscode界面左下角，打开 command palette… —&gt; 输入run task 回车 —&gt; 点击 push code看task是否能成功执行</p>\n</li>\n<li>\n<p>配置快捷键：</p>\n<p>file —&gt; preference —&gt; keyboard shortcut —&gt; 打开了快捷键配置文件，点击右上角的 {}，进入文本编辑模式，添加如下内容：</p>\n <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">        // 为git提交代码到远程仓库设置快捷键 </span></span><br><span class=\"line\"><span class=\"code\">        \"key\": \"ctrl+p ctrl+p\",</span></span><br><span class=\"line\"><span class=\"code\">        \"command\": \"workbench.action.tasks.runTask\",</span></span><br><span class=\"line\"><span class=\"code\">        \"args\": \"push code\",</span></span><br><span class=\"line\"><span class=\"code\">        \"when\": \"isLinux\"    </span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用 快捷键&quot;ctrl+p ctrl+p&quot; 验证是否能成功push代码到远程仓库。</p>\n</li>\n</ol>\n<p>原本按照这个想法，我想到了两个思路：</p>\n<ol>\n<li>\n<p>通过vscode的设置task和快捷键完成操作，步骤如上。</p>\n</li>\n<li>\n<p>将三条命令alias一条简短的快捷命令,在终端上执行。</p>\n<p>2.1 但是这个并没有想象中那么简单，至少在gitvonfig中是难以实现的。因为 alias 中的快捷命令是需要运行时需要在前面添加 git 才能运行的，比如：<code>alias p=push </code>，那么在命令行运行 <code>git p</code> 就相当于 <code>git push </code>。这就限制了无法用 将这三条命令 缩写成一条命令来运行。</p>\n<p>2.2 但是世上无难事，只要有心人，曲线也是能救国的！不要局限在git的配置中怎么去实现，思维要开阔些！我们可以在当前文件夹下面新建一个bash脚本，把上面三条命令直接写进去，直接运行脚本不就可以了嘛!</p>\n<p><a href=\"http://xn--push-494fr2cb5kmlat54c6rn21ar85cw26m.sh\" target=\"_blank\" rel=\"noopener\">当前文件夹下面创建push.sh</a>,写入文本：</p>\n <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">echo 成功添加暂存区</span><br><span class=\"line\">git commit -am \"change some text\"</span><br><span class=\"line\">echo 成功提交到本地仓库</span><br><span class=\"line\">git push</span><br><span class=\"line\">echo 成功push到远程仓库</span><br></pre></td></tr></table></figure>\n<p>在当前文件夹下面的终端运行：</p>\n<blockquote>\n<p>chmod a+x <a href=\"http://push.sh\" target=\"_blank\" rel=\"noopener\">push.sh</a></p>\n<p>./push.sh</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"2-git提交码云上没有显示贡献度\"><a class=\"markdownIt-Anchor\" href=\"#2-git提交码云上没有显示贡献度\"></a> 2. git提交码云上没有显示贡献度</h2>\n<p>结果竟然是因为我设置的全局邮箱有问题:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.email&#x3D;&quot;1002860620@qq.com&quot;</span><br><span class=\"line\">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>\n<p>上面所示，邮箱多了一双引号，去掉引号就可以啦<br />\n<code>git config --global user.email 1002860620@qq.com</code></p>\n<p>然后再输入<code>git config -l</code> 查看配置：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.email&#x3D;1002860620@qq.com</span><br><span class=\"line\">user.name&#x3D;heronwang</span><br></pre></td></tr></table></figure>\n<p>引号去掉了，然后<code>git push</code>提交，在后台查看终于显示我的贡献度了，</p>\n<p>好气哦，ubuntu用了这么长时间，在码云上提交了那么多贡献全是空的！！</p>\n<h2 id=\"3怎么给仓库打tag记录历史中重要的节点\"><a class=\"markdownIt-Anchor\" href=\"#3怎么给仓库打tag记录历史中重要的节点\"></a> 3.怎么给仓库打tag，记录历史中重要的节点</h2>\n<p>首先<code>git tag -l</code> 查看仓库中所有tag</p>\n<p>Git 支持两种标签：轻量标签（lightweight）与附注标签（annotated）</p>\n<ul>\n<li>\n<p>轻量标签：很像一个不会改变的分支——它只是某个特定提交的引用。</p>\n<p><code>git tag &lt;tagname&gt;</code> 创建轻量标签<br />\n<code>git show &lt;tagname&gt;</code> 显示出提交信息</p>\n</li>\n<li>\n<p>附注标签：是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。<br />\n<code>git tag -a &lt;tagname&gt; -m &quot;标签信息&quot;</code> 创建附注标签</p>\n</li>\n<li>\n<p>后期打标签：你也可以对过去的提交打标签<br />\n<code>git log --pretty=oneline</code> 显示历史提交信息<br />\n<code>git tag -a &lt;tagname&gt; &lt;某个提交的哈希码&gt;</code> 为历史提交打标签</p>\n</li>\n<li>\n<p>共享标签：将标签上传到远程共享<br />\n<code>git push origin --tags</code> 上传所有tags<br />\n<code>git push origin &lt;tagname&gt;</code> 上传某个tag</p>\n</li>\n<li>\n<p>删除标签tag<br />\n<code>git tag -d &lt;tagname&gt;</code> 删除本地tag<br />\n<code>git push origin --delete &lt;tagname&gt;</code>   删除远程tag</p>\n</li>\n<li>\n<p>检出标签：如果你想查看某个标签所指向的文件版本，可以使用 git checkout 命令， 虽然这会使你的仓库处于“分离头指针（detached HEAD）”的状态——这个状态有些不好的副作用，在“分离头指针”状态下，如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问。 因此，如果你需要进行更改，比如你要修复旧版本中的错误，那么通常需要创建一个新分支。<br />\n<code>git checkout &lt;tagname&gt;</code> 查看标签具体内容</p>\n<p><code>git checkout -b &lt;branchName&gt; &lt;tagname&gt;</code> 为某个标签创建分支</p>\n</li>\n</ul>"},{"_content":"# opencv基础\n\n[返回readme](../readme.md)\n\n\n## 图像处理基础\n\n### 图像的表示\n\n  二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。\n\n  灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。\n\n  彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反\n<!--more-->\n### 像素处理\n\n  [像素处理代码实现](opencv/像素处理.py)\n\n### 使用numpy.array访问元素\n\n  [代码实现](opencv/numpy.array访问元素.py)\n  \n  函数 item(行，列) 能高效访问图像的像素点\n  itemset(索引值，新值) 用来修改像素值\n\n### 感兴趣区域ROI 和 通道操作\n\n  [代码实现](opencv/ROI.py)\n\n  设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C\n\n  通道拆分 cv.split(img)\n\n  通道合并 cv.merge([b,g,r])\n\n### 获取图像属性\n\n  img.shape 返回包含行数，列数，通道数的数组\n\n  img.size  返回图像的像素数目\n\n  img.dtype 返回图像的数据类型\n\n## 图像运算\n\n### 加法\n\n  img1 + img2 ,遵循规则：\n  a+b = (a+b) % 256,即结果对256取膜\n\n  cv2.add(img1,img2) ,遵循规则：\n  a+b = min(a+b,255), 即和大于255时结果取255\n\n### 图像加权和\n\n  dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略\n  结果就是 dst = src * alpha +src2 *beta +gamma\n\n  加权和超过255，结果同样取255\n\n### 按位逻辑运算\n\n  cv2.bitwise_and() 与\n  cv2.bitwise_or()  或\n  cv2.bitwise_xor() 异或\n  cv2.bitwise_not() 非\n\n  跟 0 位与结果为 0 ，变成黑色\n  跟255位与结果是本身 ，颜色不变\n\n### 掩膜\n\n  使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0\n\n### 图像与数值运算\n\n  cv2.add(img,6) 参与运算的既可以是图片也可以是数值\n\n### 位平面分解\n\n  将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。\n  在8位灰度图中，可以组成8个二进制图像\n  [代码](opencv/位平面.py)\n\n### 图像加密和解密\n\n  通过按位异或运算可以实现图像的加密和解密\n\n  通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密\n\n  [代码实现](opencv/图像加密和解密.py)\n\n### 数字水印\n\n  最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。\n\n  在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。\n  这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能\n\n  分两步：\n    \n    嵌入过程\n      用数字水印信息将图像的最低有效位替换掉\n    \n    提取过程\n      提取出最低有效位的水印信息即可\n\n  [demo](opencv/数字水印.py)\n\n### 脸部打码以及解码\n\n  使用掩码和按位运算方式实现对脸部打码和解码实例\n  [demo](opencv/脸部打码以及解码.py)\n\n## 色彩空间类型转换\n\n  色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像\n\n### 色彩空间基础\n\n  比较常见的色彩空间：\n  \n  - GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： `GRAY =0.299×R +0.587*G +0.114*B`\n  - XYZ色彩空间，一中便于计算的色彩空间\n  - YCrCb色彩空间\n  - HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value\n  - HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation\n\n\n### 类型转换函数、HSV色彩空间讨论、alpha通道\n\n  [demo](oepncv/类型转换.py)\n  \n  dst = cv2.cvtColor(src,code,[,dstcn])\n  \n    code表示色彩空间转换码\n    dstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n\n  alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明\n  \n\n\n## **几何变换**\n\n### **缩放**\n\n  ```md\n  dst = cv.resize(src,dsize , fx,fy,interpolation)\n    src:缩放的原始图像\n    dsize：输出图像大小\n    fx：水平方向的缩放比例\n    fy:垂直方向的缩放比例\n    interpolation：代表插值方式\n      缩放图像时，INTER_AREA能达到最好效果\n      放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果  \n  ```\n  \n\n### **旋转**\n\n  ```\n  dst = cv2.flip(src,flipCode)\n    flipCode 旋转类型：\n    0，绕x轴旋转\n    正数，绕y轴旋转\n    负数，绕x，y同时旋转\n  ```\n\n### **仿射**\n\n  仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作\n\n  该变换能够保持图像的平直性和平行性\n  \n  仿射 = 平移 + 旋转 \n\n```md\n  dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)\n  M:代表一个2x3的变换矩阵\n  dsize:代表输出图像的尺寸大小\n  flags:代表插值方式，默认INTER_LINEAR\n  borderMode:代表边类型\n\n  borderValue:代表边界值，默认0\n  ```\n  \n### **透视**\n\n### **重映射**\n\n## **阈值处理**\n\n### **threldhold函数**\n\n### **自适应阈值处理**\n\n### **otsu处理**\n\n## **图像平滑处理**\n\n### **均值滤  波**\n\n### **方框滤波**\n\n### **高斯滤波**\n\n### **中值滤波**\n\n### **双边滤波**\n\n### **2D 卷积**\n\n## **形态学操作**\n\n### **腐蚀**\n\n### **膨胀**\n\n### **通用形态学函数**\n\n### **开运算**\n\n### **闭运算**\n\n### **形态学梯度运算**\n\n### **礼貌运算**\n\n### **黑帽运算**\n\n### **核函数**\n\n## **图像梯度**\n\n### **sobel 理论基础**\n\n### **sobel算子及函数使用**\n\n### **scharr 算子及函数使用**\n\n### **Laplacian 算子及函数使用**\n\n### **算子总结**\n\n## **canny边缘检测**\n\n### **canny边缘检测理论**\n\n### **canny函数及使用**\n\n## **图像金字塔**\n\n### **理论基础**\n\n### **pyrDown函数及使用**\n\n### **采样可逆行研究**\n\n### **拉普拉斯金字塔**\n\n## **图像轮廓**\n\n### **查找并绘制轮廓**\n\n### **矩特征**\n\n### **hu钜**\n\n### **轮廓拟合**\n\n### **凸包**\n\n### **利用形状场景算法比较轮廓**\n\n### **轮廓的特征值**\n\n## **傅里叶变换**\n\n### **理论基础**\n\n### **实现**\n\n## **模板匹配**\n\n### **模板匹配基础**\n\n### **多模板匹配**\n\n## **霍夫变换**\n\n### 霍夫直线变换\n\n### **霍夫圆形变换**\n\n## **图像分割与提取**\n\n### **用分水岭算法实现图像分割**\n\n### **交互式前景提取**\n\n## **视频处理**\n\n### **VideoCapture类**\n\n### **ViedeoWriter类**\n\n### **视频操作基础**\n\n## **绘图机交互**\n\n### **绘图基础**\n\n### **鼠标交互**\n\n### **滚动条**\n\n## **k近邻算法**\n\n### **理论基础**\n\n### **计算**\n\n### **手写数字识别原理**\n\n### **自定义函数手写数字识别**\n\n### **k近邻模块的基本使用**\n\n### **K 近邻手写板数字的识别**\nK\nK**\nK\nK*\nK\n### **svm案例介绍**\n\n## **k均值聚类**\n\n","source":"_posts/ML/opencv.md","raw":"# opencv基础\n\n[返回readme](../readme.md)\n\n\n## 图像处理基础\n\n### 图像的表示\n\n  二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。\n\n  灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。\n\n  彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反\n<!--more-->\n### 像素处理\n\n  [像素处理代码实现](opencv/像素处理.py)\n\n### 使用numpy.array访问元素\n\n  [代码实现](opencv/numpy.array访问元素.py)\n  \n  函数 item(行，列) 能高效访问图像的像素点\n  itemset(索引值，新值) 用来修改像素值\n\n### 感兴趣区域ROI 和 通道操作\n\n  [代码实现](opencv/ROI.py)\n\n  设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C\n\n  通道拆分 cv.split(img)\n\n  通道合并 cv.merge([b,g,r])\n\n### 获取图像属性\n\n  img.shape 返回包含行数，列数，通道数的数组\n\n  img.size  返回图像的像素数目\n\n  img.dtype 返回图像的数据类型\n\n## 图像运算\n\n### 加法\n\n  img1 + img2 ,遵循规则：\n  a+b = (a+b) % 256,即结果对256取膜\n\n  cv2.add(img1,img2) ,遵循规则：\n  a+b = min(a+b,255), 即和大于255时结果取255\n\n### 图像加权和\n\n  dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略\n  结果就是 dst = src * alpha +src2 *beta +gamma\n\n  加权和超过255，结果同样取255\n\n### 按位逻辑运算\n\n  cv2.bitwise_and() 与\n  cv2.bitwise_or()  或\n  cv2.bitwise_xor() 异或\n  cv2.bitwise_not() 非\n\n  跟 0 位与结果为 0 ，变成黑色\n  跟255位与结果是本身 ，颜色不变\n\n### 掩膜\n\n  使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0\n\n### 图像与数值运算\n\n  cv2.add(img,6) 参与运算的既可以是图片也可以是数值\n\n### 位平面分解\n\n  将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。\n  在8位灰度图中，可以组成8个二进制图像\n  [代码](opencv/位平面.py)\n\n### 图像加密和解密\n\n  通过按位异或运算可以实现图像的加密和解密\n\n  通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密\n\n  [代码实现](opencv/图像加密和解密.py)\n\n### 数字水印\n\n  最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。\n\n  在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。\n  这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能\n\n  分两步：\n    \n    嵌入过程\n      用数字水印信息将图像的最低有效位替换掉\n    \n    提取过程\n      提取出最低有效位的水印信息即可\n\n  [demo](opencv/数字水印.py)\n\n### 脸部打码以及解码\n\n  使用掩码和按位运算方式实现对脸部打码和解码实例\n  [demo](opencv/脸部打码以及解码.py)\n\n## 色彩空间类型转换\n\n  色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像\n\n### 色彩空间基础\n\n  比较常见的色彩空间：\n  \n  - GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： `GRAY =0.299×R +0.587*G +0.114*B`\n  - XYZ色彩空间，一中便于计算的色彩空间\n  - YCrCb色彩空间\n  - HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value\n  - HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation\n\n\n### 类型转换函数、HSV色彩空间讨论、alpha通道\n\n  [demo](oepncv/类型转换.py)\n  \n  dst = cv2.cvtColor(src,code,[,dstcn])\n  \n    code表示色彩空间转换码\n    dstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n\n  alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明\n  \n\n\n## **几何变换**\n\n### **缩放**\n\n  ```md\n  dst = cv.resize(src,dsize , fx,fy,interpolation)\n    src:缩放的原始图像\n    dsize：输出图像大小\n    fx：水平方向的缩放比例\n    fy:垂直方向的缩放比例\n    interpolation：代表插值方式\n      缩放图像时，INTER_AREA能达到最好效果\n      放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果  \n  ```\n  \n\n### **旋转**\n\n  ```\n  dst = cv2.flip(src,flipCode)\n    flipCode 旋转类型：\n    0，绕x轴旋转\n    正数，绕y轴旋转\n    负数，绕x，y同时旋转\n  ```\n\n### **仿射**\n\n  仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作\n\n  该变换能够保持图像的平直性和平行性\n  \n  仿射 = 平移 + 旋转 \n\n```md\n  dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)\n  M:代表一个2x3的变换矩阵\n  dsize:代表输出图像的尺寸大小\n  flags:代表插值方式，默认INTER_LINEAR\n  borderMode:代表边类型\n\n  borderValue:代表边界值，默认0\n  ```\n  \n### **透视**\n\n### **重映射**\n\n## **阈值处理**\n\n### **threldhold函数**\n\n### **自适应阈值处理**\n\n### **otsu处理**\n\n## **图像平滑处理**\n\n### **均值滤  波**\n\n### **方框滤波**\n\n### **高斯滤波**\n\n### **中值滤波**\n\n### **双边滤波**\n\n### **2D 卷积**\n\n## **形态学操作**\n\n### **腐蚀**\n\n### **膨胀**\n\n### **通用形态学函数**\n\n### **开运算**\n\n### **闭运算**\n\n### **形态学梯度运算**\n\n### **礼貌运算**\n\n### **黑帽运算**\n\n### **核函数**\n\n## **图像梯度**\n\n### **sobel 理论基础**\n\n### **sobel算子及函数使用**\n\n### **scharr 算子及函数使用**\n\n### **Laplacian 算子及函数使用**\n\n### **算子总结**\n\n## **canny边缘检测**\n\n### **canny边缘检测理论**\n\n### **canny函数及使用**\n\n## **图像金字塔**\n\n### **理论基础**\n\n### **pyrDown函数及使用**\n\n### **采样可逆行研究**\n\n### **拉普拉斯金字塔**\n\n## **图像轮廓**\n\n### **查找并绘制轮廓**\n\n### **矩特征**\n\n### **hu钜**\n\n### **轮廓拟合**\n\n### **凸包**\n\n### **利用形状场景算法比较轮廓**\n\n### **轮廓的特征值**\n\n## **傅里叶变换**\n\n### **理论基础**\n\n### **实现**\n\n## **模板匹配**\n\n### **模板匹配基础**\n\n### **多模板匹配**\n\n## **霍夫变换**\n\n### 霍夫直线变换\n\n### **霍夫圆形变换**\n\n## **图像分割与提取**\n\n### **用分水岭算法实现图像分割**\n\n### **交互式前景提取**\n\n## **视频处理**\n\n### **VideoCapture类**\n\n### **ViedeoWriter类**\n\n### **视频操作基础**\n\n## **绘图机交互**\n\n### **绘图基础**\n\n### **鼠标交互**\n\n### **滚动条**\n\n## **k近邻算法**\n\n### **理论基础**\n\n### **计算**\n\n### **手写数字识别原理**\n\n### **自定义函数手写数字识别**\n\n### **k近邻模块的基本使用**\n\n### **K 近邻手写板数字的识别**\nK\nK**\nK\nK*\nK\n### **svm案例介绍**\n\n## **k均值聚类**\n\n","slug":"ML/opencv","published":1,"date":"2020-06-13T09:00:04.218Z","updated":"2020-06-13T19:52:58.170Z","title":"ML/opencv","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbj98y07000blkvo9jin12xz","content":"<h1 id=\"opencv基础\"><a class=\"markdownIt-Anchor\" href=\"#opencv基础\"></a> opencv基础</h1>\n<p><a href=\"../readme.md\">返回readme</a></p>\n<h2 id=\"图像处理基础\"><a class=\"markdownIt-Anchor\" href=\"#图像处理基础\"></a> 图像处理基础</h2>\n<h3 id=\"图像的表示\"><a class=\"markdownIt-Anchor\" href=\"#图像的表示\"></a> 图像的表示</h3>\n<p>二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。</p>\n<p>灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。</p>\n<p>彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反</p>\n<a id=\"more\"></a>\n<h3 id=\"像素处理\"><a class=\"markdownIt-Anchor\" href=\"#像素处理\"></a> 像素处理</h3>\n<p><a href=\"opencv/%E5%83%8F%E7%B4%A0%E5%A4%84%E7%90%86.py\">像素处理代码实现</a></p>\n<h3 id=\"使用numpyarray访问元素\"><a class=\"markdownIt-Anchor\" href=\"#使用numpyarray访问元素\"></a> 使用numpy.array访问元素</h3>\n<p><a href=\"opencv/numpy.array%E8%AE%BF%E9%97%AE%E5%85%83%E7%B4%A0.py\">代码实现</a></p>\n<p>函数 item(行，列) 能高效访问图像的像素点<br />\nitemset(索引值，新值) 用来修改像素值</p>\n<h3 id=\"感兴趣区域roi-和-通道操作\"><a class=\"markdownIt-Anchor\" href=\"#感兴趣区域roi-和-通道操作\"></a> 感兴趣区域ROI 和 通道操作</h3>\n<p><a href=\"opencv/ROI.py\">代码实现</a></p>\n<p>设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C</p>\n<p>通道拆分 cv.split(img)</p>\n<p>通道合并 cv.merge([b,g,r])</p>\n<h3 id=\"获取图像属性\"><a class=\"markdownIt-Anchor\" href=\"#获取图像属性\"></a> 获取图像属性</h3>\n<p>img.shape 返回包含行数，列数，通道数的数组</p>\n<p>img.size  返回图像的像素数目</p>\n<p>img.dtype 返回图像的数据类型</p>\n<h2 id=\"图像运算\"><a class=\"markdownIt-Anchor\" href=\"#图像运算\"></a> 图像运算</h2>\n<h3 id=\"加法\"><a class=\"markdownIt-Anchor\" href=\"#加法\"></a> 加法</h3>\n<p>img1 + img2 ,遵循规则：<br />\na+b = (a+b) % 256,即结果对256取膜</p>\n<p>cv2.add(img1,img2) ,遵循规则：<br />\na+b = min(a+b,255), 即和大于255时结果取255</p>\n<h3 id=\"图像加权和\"><a class=\"markdownIt-Anchor\" href=\"#图像加权和\"></a> 图像加权和</h3>\n<p>dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略<br />\n结果就是 dst = src * alpha +src2 *beta +gamma</p>\n<p>加权和超过255，结果同样取255</p>\n<h3 id=\"按位逻辑运算\"><a class=\"markdownIt-Anchor\" href=\"#按位逻辑运算\"></a> 按位逻辑运算</h3>\n<p>cv2.bitwise_and() 与<br />\ncv2.bitwise_or()  或<br />\ncv2.bitwise_xor() 异或<br />\ncv2.bitwise_not() 非</p>\n<p>跟 0 位与结果为 0 ，变成黑色<br />\n跟255位与结果是本身 ，颜色不变</p>\n<h3 id=\"掩膜\"><a class=\"markdownIt-Anchor\" href=\"#掩膜\"></a> 掩膜</h3>\n<p>使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0</p>\n<h3 id=\"图像与数值运算\"><a class=\"markdownIt-Anchor\" href=\"#图像与数值运算\"></a> 图像与数值运算</h3>\n<p>cv2.add(img,6) 参与运算的既可以是图片也可以是数值</p>\n<h3 id=\"位平面分解\"><a class=\"markdownIt-Anchor\" href=\"#位平面分解\"></a> 位平面分解</h3>\n<p>将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。<br />\n在8位灰度图中，可以组成8个二进制图像<br />\n<a href=\"opencv/%E4%BD%8D%E5%B9%B3%E9%9D%A2.py\">代码</a></p>\n<h3 id=\"图像加密和解密\"><a class=\"markdownIt-Anchor\" href=\"#图像加密和解密\"></a> 图像加密和解密</h3>\n<p>通过按位异或运算可以实现图像的加密和解密</p>\n<p>通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密</p>\n<p><a href=\"opencv/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86.py\">代码实现</a></p>\n<h3 id=\"数字水印\"><a class=\"markdownIt-Anchor\" href=\"#数字水印\"></a> 数字水印</h3>\n<p>最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。</p>\n<p>在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。<br />\n这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能</p>\n<p>分两步：</p>\n<pre><code>嵌入过程\n  用数字水印信息将图像的最低有效位替换掉\n\n提取过程\n  提取出最低有效位的水印信息即可\n</code></pre>\n<p><a href=\"opencv/%E6%95%B0%E5%AD%97%E6%B0%B4%E5%8D%B0.py\">demo</a></p>\n<h3 id=\"脸部打码以及解码\"><a class=\"markdownIt-Anchor\" href=\"#脸部打码以及解码\"></a> 脸部打码以及解码</h3>\n<p>使用掩码和按位运算方式实现对脸部打码和解码实例<br />\n<a href=\"opencv/%E8%84%B8%E9%83%A8%E6%89%93%E7%A0%81%E4%BB%A5%E5%8F%8A%E8%A7%A3%E7%A0%81.py\">demo</a></p>\n<h2 id=\"色彩空间类型转换\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间类型转换\"></a> 色彩空间类型转换</h2>\n<p>色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像</p>\n<h3 id=\"色彩空间基础\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间基础\"></a> 色彩空间基础</h3>\n<p>比较常见的色彩空间：</p>\n<ul>\n<li>GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： <code>GRAY =0.299×R +0.587*G +0.114*B</code></li>\n<li>XYZ色彩空间，一中便于计算的色彩空间</li>\n<li>YCrCb色彩空间</li>\n<li>HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value</li>\n<li>HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation</li>\n</ul>\n<h3 id=\"类型转换函数-hsv色彩空间讨论-alpha通道\"><a class=\"markdownIt-Anchor\" href=\"#类型转换函数-hsv色彩空间讨论-alpha通道\"></a> 类型转换函数、HSV色彩空间讨论、alpha通道</h3>\n<p><a href=\"oepncv/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.py\">demo</a></p>\n<p>dst = cv2.cvtColor(src,code,[,dstcn])</p>\n<pre><code>code表示色彩空间转换码\ndstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n</code></pre>\n<p>alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明</p>\n<h2 id=\"几何变换\"><a class=\"markdownIt-Anchor\" href=\"#几何变换\"></a> <strong>几何变换</strong></h2>\n<h3 id=\"缩放\"><a class=\"markdownIt-Anchor\" href=\"#缩放\"></a> <strong>缩放</strong></h3>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv.resize(src,dsize , fx,fy,interpolation)</span><br><span class=\"line\">  src:缩放的原始图像</span><br><span class=\"line\">  dsize：输出图像大小</span><br><span class=\"line\">  fx：水平方向的缩放比例</span><br><span class=\"line\">  fy:垂直方向的缩放比例</span><br><span class=\"line\">  interpolation：代表插值方式</span><br><span class=\"line\"><span class=\"code\">    缩放图像时，INTER_AREA能达到最好效果</span></span><br><span class=\"line\"><span class=\"code\">    放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"旋转\"><a class=\"markdownIt-Anchor\" href=\"#旋转\"></a> <strong>旋转</strong></h3>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst &#x3D; cv2.flip(src,flipCode)</span><br><span class=\"line\">  flipCode 旋转类型：</span><br><span class=\"line\">  0，绕x轴旋转</span><br><span class=\"line\">  正数，绕y轴旋转</span><br><span class=\"line\">  负数，绕x，y同时旋转</span><br></pre></td></tr></table></figure>\n<h3 id=\"仿射\"><a class=\"markdownIt-Anchor\" href=\"#仿射\"></a> <strong>仿射</strong></h3>\n<p>仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作</p>\n<p>该变换能够保持图像的平直性和平行性</p>\n<p>仿射 = 平移 + 旋转</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)</span><br><span class=\"line\">M:代表一个2x3的变换矩阵</span><br><span class=\"line\">dsize:代表输出图像的尺寸大小</span><br><span class=\"line\">flags:代表插值方式，默认INTER_LINEAR</span><br><span class=\"line\">borderMode:代表边类型</span><br><span class=\"line\"></span><br><span class=\"line\">borderValue:代表边界值，默认0</span><br></pre></td></tr></table></figure>\n<h3 id=\"透视\"><a class=\"markdownIt-Anchor\" href=\"#透视\"></a> <strong>透视</strong></h3>\n<h3 id=\"重映射\"><a class=\"markdownIt-Anchor\" href=\"#重映射\"></a> <strong>重映射</strong></h3>\n<h2 id=\"阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#阈值处理\"></a> <strong>阈值处理</strong></h2>\n<h3 id=\"threldhold函数\"><a class=\"markdownIt-Anchor\" href=\"#threldhold函数\"></a> <strong>threldhold函数</strong></h3>\n<h3 id=\"自适应阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#自适应阈值处理\"></a> <strong>自适应阈值处理</strong></h3>\n<h3 id=\"otsu处理\"><a class=\"markdownIt-Anchor\" href=\"#otsu处理\"></a> <strong>otsu处理</strong></h3>\n<h2 id=\"图像平滑处理\"><a class=\"markdownIt-Anchor\" href=\"#图像平滑处理\"></a> <strong>图像平滑处理</strong></h2>\n<h3 id=\"均值滤-波\"><a class=\"markdownIt-Anchor\" href=\"#均值滤-波\"></a> <strong>均值滤  波</strong></h3>\n<h3 id=\"方框滤波\"><a class=\"markdownIt-Anchor\" href=\"#方框滤波\"></a> <strong>方框滤波</strong></h3>\n<h3 id=\"高斯滤波\"><a class=\"markdownIt-Anchor\" href=\"#高斯滤波\"></a> <strong>高斯滤波</strong></h3>\n<h3 id=\"中值滤波\"><a class=\"markdownIt-Anchor\" href=\"#中值滤波\"></a> <strong>中值滤波</strong></h3>\n<h3 id=\"双边滤波\"><a class=\"markdownIt-Anchor\" href=\"#双边滤波\"></a> <strong>双边滤波</strong></h3>\n<h3 id=\"2d-卷积\"><a class=\"markdownIt-Anchor\" href=\"#2d-卷积\"></a> <strong>2D 卷积</strong></h3>\n<h2 id=\"形态学操作\"><a class=\"markdownIt-Anchor\" href=\"#形态学操作\"></a> <strong>形态学操作</strong></h2>\n<h3 id=\"腐蚀\"><a class=\"markdownIt-Anchor\" href=\"#腐蚀\"></a> <strong>腐蚀</strong></h3>\n<h3 id=\"膨胀\"><a class=\"markdownIt-Anchor\" href=\"#膨胀\"></a> <strong>膨胀</strong></h3>\n<h3 id=\"通用形态学函数\"><a class=\"markdownIt-Anchor\" href=\"#通用形态学函数\"></a> <strong>通用形态学函数</strong></h3>\n<h3 id=\"开运算\"><a class=\"markdownIt-Anchor\" href=\"#开运算\"></a> <strong>开运算</strong></h3>\n<h3 id=\"闭运算\"><a class=\"markdownIt-Anchor\" href=\"#闭运算\"></a> <strong>闭运算</strong></h3>\n<h3 id=\"形态学梯度运算\"><a class=\"markdownIt-Anchor\" href=\"#形态学梯度运算\"></a> <strong>形态学梯度运算</strong></h3>\n<h3 id=\"礼貌运算\"><a class=\"markdownIt-Anchor\" href=\"#礼貌运算\"></a> <strong>礼貌运算</strong></h3>\n<h3 id=\"黑帽运算\"><a class=\"markdownIt-Anchor\" href=\"#黑帽运算\"></a> <strong>黑帽运算</strong></h3>\n<h3 id=\"核函数\"><a class=\"markdownIt-Anchor\" href=\"#核函数\"></a> <strong>核函数</strong></h3>\n<h2 id=\"图像梯度\"><a class=\"markdownIt-Anchor\" href=\"#图像梯度\"></a> <strong>图像梯度</strong></h2>\n<h3 id=\"sobel-理论基础\"><a class=\"markdownIt-Anchor\" href=\"#sobel-理论基础\"></a> <strong>sobel 理论基础</strong></h3>\n<h3 id=\"sobel算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#sobel算子及函数使用\"></a> <strong>sobel算子及函数使用</strong></h3>\n<h3 id=\"scharr-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#scharr-算子及函数使用\"></a> <strong>scharr 算子及函数使用</strong></h3>\n<h3 id=\"laplacian-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#laplacian-算子及函数使用\"></a> <strong>Laplacian 算子及函数使用</strong></h3>\n<h3 id=\"算子总结\"><a class=\"markdownIt-Anchor\" href=\"#算子总结\"></a> <strong>算子总结</strong></h3>\n<h2 id=\"canny边缘检测\"><a class=\"markdownIt-Anchor\" href=\"#canny边缘检测\"></a> <strong>canny边缘检测</strong></h2>\n<h3 id=\"canny边缘检测理论\"><a class=\"markdownIt-Anchor\" href=\"#canny边缘检测理论\"></a> <strong>canny边缘检测理论</strong></h3>\n<h3 id=\"canny函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#canny函数及使用\"></a> <strong>canny函数及使用</strong></h3>\n<h2 id=\"图像金字塔\"><a class=\"markdownIt-Anchor\" href=\"#图像金字塔\"></a> <strong>图像金字塔</strong></h2>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"pyrdown函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#pyrdown函数及使用\"></a> <strong>pyrDown函数及使用</strong></h3>\n<h3 id=\"采样可逆行研究\"><a class=\"markdownIt-Anchor\" href=\"#采样可逆行研究\"></a> <strong>采样可逆行研究</strong></h3>\n<h3 id=\"拉普拉斯金字塔\"><a class=\"markdownIt-Anchor\" href=\"#拉普拉斯金字塔\"></a> <strong>拉普拉斯金字塔</strong></h3>\n<h2 id=\"图像轮廓\"><a class=\"markdownIt-Anchor\" href=\"#图像轮廓\"></a> <strong>图像轮廓</strong></h2>\n<h3 id=\"查找并绘制轮廓\"><a class=\"markdownIt-Anchor\" href=\"#查找并绘制轮廓\"></a> <strong>查找并绘制轮廓</strong></h3>\n<h3 id=\"矩特征\"><a class=\"markdownIt-Anchor\" href=\"#矩特征\"></a> <strong>矩特征</strong></h3>\n<h3 id=\"hu钜\"><a class=\"markdownIt-Anchor\" href=\"#hu钜\"></a> <strong>hu钜</strong></h3>\n<h3 id=\"轮廓拟合\"><a class=\"markdownIt-Anchor\" href=\"#轮廓拟合\"></a> <strong>轮廓拟合</strong></h3>\n<h3 id=\"凸包\"><a class=\"markdownIt-Anchor\" href=\"#凸包\"></a> <strong>凸包</strong></h3>\n<h3 id=\"利用形状场景算法比较轮廓\"><a class=\"markdownIt-Anchor\" href=\"#利用形状场景算法比较轮廓\"></a> <strong>利用形状场景算法比较轮廓</strong></h3>\n<h3 id=\"轮廓的特征值\"><a class=\"markdownIt-Anchor\" href=\"#轮廓的特征值\"></a> <strong>轮廓的特征值</strong></h3>\n<h2 id=\"傅里叶变换\"><a class=\"markdownIt-Anchor\" href=\"#傅里叶变换\"></a> <strong>傅里叶变换</strong></h2>\n<h3 id=\"理论基础-2\"><a class=\"markdownIt-Anchor\" href=\"#理论基础-2\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\"></a> <strong>实现</strong></h3>\n<h2 id=\"模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配\"></a> <strong>模板匹配</strong></h2>\n<h3 id=\"模板匹配基础\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配基础\"></a> <strong>模板匹配基础</strong></h3>\n<h3 id=\"多模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#多模板匹配\"></a> <strong>多模板匹配</strong></h3>\n<h2 id=\"霍夫变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫变换\"></a> <strong>霍夫变换</strong></h2>\n<h3 id=\"霍夫直线变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫直线变换\"></a> 霍夫直线变换</h3>\n<h3 id=\"霍夫圆形变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫圆形变换\"></a> <strong>霍夫圆形变换</strong></h3>\n<h2 id=\"图像分割与提取\"><a class=\"markdownIt-Anchor\" href=\"#图像分割与提取\"></a> <strong>图像分割与提取</strong></h2>\n<h3 id=\"用分水岭算法实现图像分割\"><a class=\"markdownIt-Anchor\" href=\"#用分水岭算法实现图像分割\"></a> <strong>用分水岭算法实现图像分割</strong></h3>\n<h3 id=\"交互式前景提取\"><a class=\"markdownIt-Anchor\" href=\"#交互式前景提取\"></a> <strong>交互式前景提取</strong></h3>\n<h2 id=\"视频处理\"><a class=\"markdownIt-Anchor\" href=\"#视频处理\"></a> <strong>视频处理</strong></h2>\n<h3 id=\"videocapture类\"><a class=\"markdownIt-Anchor\" href=\"#videocapture类\"></a> <strong>VideoCapture类</strong></h3>\n<h3 id=\"viedeowriter类\"><a class=\"markdownIt-Anchor\" href=\"#viedeowriter类\"></a> <strong>ViedeoWriter类</strong></h3>\n<h3 id=\"视频操作基础\"><a class=\"markdownIt-Anchor\" href=\"#视频操作基础\"></a> <strong>视频操作基础</strong></h3>\n<h2 id=\"绘图机交互\"><a class=\"markdownIt-Anchor\" href=\"#绘图机交互\"></a> <strong>绘图机交互</strong></h2>\n<h3 id=\"绘图基础\"><a class=\"markdownIt-Anchor\" href=\"#绘图基础\"></a> <strong>绘图基础</strong></h3>\n<h3 id=\"鼠标交互\"><a class=\"markdownIt-Anchor\" href=\"#鼠标交互\"></a> <strong>鼠标交互</strong></h3>\n<h3 id=\"滚动条\"><a class=\"markdownIt-Anchor\" href=\"#滚动条\"></a> <strong>滚动条</strong></h3>\n<h2 id=\"k近邻算法\"><a class=\"markdownIt-Anchor\" href=\"#k近邻算法\"></a> <strong>k近邻算法</strong></h2>\n<h3 id=\"理论基础-3\"><a class=\"markdownIt-Anchor\" href=\"#理论基础-3\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"计算\"><a class=\"markdownIt-Anchor\" href=\"#计算\"></a> <strong>计算</strong></h3>\n<h3 id=\"手写数字识别原理\"><a class=\"markdownIt-Anchor\" href=\"#手写数字识别原理\"></a> <strong>手写数字识别原理</strong></h3>\n<h3 id=\"自定义函数手写数字识别\"><a class=\"markdownIt-Anchor\" href=\"#自定义函数手写数字识别\"></a> <strong>自定义函数手写数字识别</strong></h3>\n<h3 id=\"k近邻模块的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#k近邻模块的基本使用\"></a> <strong>k近邻模块的基本使用</strong></h3>\n<h3 id=\"k-近邻手写板数字的识别\"><a class=\"markdownIt-Anchor\" href=\"#k-近邻手写板数字的识别\"></a> <strong>K 近邻手写板数字的识别</strong></h3>\n<p>K<br />\nK**<br />\nK<br />\nK*<br />\nK</p>\n<h3 id=\"svm案例介绍\"><a class=\"markdownIt-Anchor\" href=\"#svm案例介绍\"></a> <strong>svm案例介绍</strong></h3>\n<h2 id=\"k均值聚类\"><a class=\"markdownIt-Anchor\" href=\"#k均值聚类\"></a> <strong>k均值聚类</strong></h2>\n","site":{"data":{}},"abbrlink":"VP8FGZ","excerpt":"<h1 id=\"opencv基础\"><a class=\"markdownIt-Anchor\" href=\"#opencv基础\"></a> opencv基础</h1>\n<p><a href=\"../readme.md\">返回readme</a></p>\n<h2 id=\"图像处理基础\"><a class=\"markdownIt-Anchor\" href=\"#图像处理基础\"></a> 图像处理基础</h2>\n<h3 id=\"图像的表示\"><a class=\"markdownIt-Anchor\" href=\"#图像的表示\"></a> 图像的表示</h3>\n<p>二值图像：仅仅包含黑色和白色两种颜色的图像，黑色表示为0，白色表示为1。</p>\n<p>灰度图像：包含256个灰度级，数值区间[0,255]，其中 0 表示纯黑色， 255表示纯白色，中间数值表示纯白和纯黑之间的不同极度的灰度。</p>\n<p>彩色图像： 有红绿蓝三个颜色的通道，能表现更丰富的细节信息，图像的通道顺序是RGB；特别注意，opencv中通道的顺序是 BGR，和图片通道顺序相反</p>","more":"<h3 id=\"像素处理\"><a class=\"markdownIt-Anchor\" href=\"#像素处理\"></a> 像素处理</h3>\n<p><a href=\"opencv/%E5%83%8F%E7%B4%A0%E5%A4%84%E7%90%86.py\">像素处理代码实现</a></p>\n<h3 id=\"使用numpyarray访问元素\"><a class=\"markdownIt-Anchor\" href=\"#使用numpyarray访问元素\"></a> 使用numpy.array访问元素</h3>\n<p><a href=\"opencv/numpy.array%E8%AE%BF%E9%97%AE%E5%85%83%E7%B4%A0.py\">代码实现</a></p>\n<p>函数 item(行，列) 能高效访问图像的像素点<br />\nitemset(索引值，新值) 用来修改像素值</p>\n<h3 id=\"感兴趣区域roi-和-通道操作\"><a class=\"markdownIt-Anchor\" href=\"#感兴趣区域roi-和-通道操作\"></a> 感兴趣区域ROI 和 通道操作</h3>\n<p><a href=\"opencv/ROI.py\">代码实现</a></p>\n<p>设定ROI后，就可以对该区域进行整体操作，比如将一个ROI区域A复制给变量b，然后将该变量复制给另一个区域C</p>\n<p>通道拆分 cv.split(img)</p>\n<p>通道合并 cv.merge([b,g,r])</p>\n<h3 id=\"获取图像属性\"><a class=\"markdownIt-Anchor\" href=\"#获取图像属性\"></a> 获取图像属性</h3>\n<p>img.shape 返回包含行数，列数，通道数的数组</p>\n<p>img.size  返回图像的像素数目</p>\n<p>img.dtype 返回图像的数据类型</p>\n<h2 id=\"图像运算\"><a class=\"markdownIt-Anchor\" href=\"#图像运算\"></a> 图像运算</h2>\n<h3 id=\"加法\"><a class=\"markdownIt-Anchor\" href=\"#加法\"></a> 加法</h3>\n<p>img1 + img2 ,遵循规则：<br />\na+b = (a+b) % 256,即结果对256取膜</p>\n<p>cv2.add(img1,img2) ,遵循规则：<br />\na+b = min(a+b,255), 即和大于255时结果取255</p>\n<h3 id=\"图像加权和\"><a class=\"markdownIt-Anchor\" href=\"#图像加权和\"></a> 图像加权和</h3>\n<p>dst = cv2.addWeighted(src1,alpha,src2,beta,gamma) 参数不能省略<br />\n结果就是 dst = src * alpha +src2 *beta +gamma</p>\n<p>加权和超过255，结果同样取255</p>\n<h3 id=\"按位逻辑运算\"><a class=\"markdownIt-Anchor\" href=\"#按位逻辑运算\"></a> 按位逻辑运算</h3>\n<p>cv2.bitwise_and() 与<br />\ncv2.bitwise_or()  或<br />\ncv2.bitwise_xor() 异或<br />\ncv2.bitwise_not() 非</p>\n<p>跟 0 位与结果为 0 ，变成黑色<br />\n跟255位与结果是本身 ，颜色不变</p>\n<h3 id=\"掩膜\"><a class=\"markdownIt-Anchor\" href=\"#掩膜\"></a> 掩膜</h3>\n<p>使用掩膜参数时，操作只会在掩膜值为非空的像素点上执行，并将其他像素点的值设置为0</p>\n<h3 id=\"图像与数值运算\"><a class=\"markdownIt-Anchor\" href=\"#图像与数值运算\"></a> 图像与数值运算</h3>\n<p>cv2.add(img,6) 参与运算的既可以是图片也可以是数值</p>\n<h3 id=\"位平面分解\"><a class=\"markdownIt-Anchor\" href=\"#位平面分解\"></a> 位平面分解</h3>\n<p>将同一比特位上的二进制像素值进行组合，得到一副二进制值图像，该图像被称为灰度图像的一个位平面，这个过程被称为位平面分解。<br />\n在8位灰度图中，可以组成8个二进制图像<br />\n<a href=\"opencv/%E4%BD%8D%E5%B9%B3%E9%9D%A2.py\">代码</a></p>\n<h3 id=\"图像加密和解密\"><a class=\"markdownIt-Anchor\" href=\"#图像加密和解密\"></a> 图像加密和解密</h3>\n<p>通过按位异或运算可以实现图像的加密和解密</p>\n<p>通过对原始图像与秘钥图像进行按位异或就可以进行加密，将加密后的图像与秘钥图像再次进行按位异或就可以进行解密</p>\n<p><a href=\"opencv/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86.py\">代码实现</a></p>\n<h3 id=\"数字水印\"><a class=\"markdownIt-Anchor\" href=\"#数字水印\"></a> 数字水印</h3>\n<p>最低有效位指一个二进制中的第0位，由于二进制图像处于载体图像的最低有效位上面，所以对于载体图像的影响非常不明显，具有较高的隐蔽性。</p>\n<p>在必要时，我们可以直接将载体图像中的最低有效位提取出来，即可得到嵌入该位上的二值图像，达到提取秘密信息的目的。<br />\n这种信息隐藏也被称为数字水印，通过该方式可以实现信息影藏，版权认证，身份认证等功能</p>\n<p>分两步：</p>\n<pre><code>嵌入过程\n  用数字水印信息将图像的最低有效位替换掉\n\n提取过程\n  提取出最低有效位的水印信息即可\n</code></pre>\n<p><a href=\"opencv/%E6%95%B0%E5%AD%97%E6%B0%B4%E5%8D%B0.py\">demo</a></p>\n<h3 id=\"脸部打码以及解码\"><a class=\"markdownIt-Anchor\" href=\"#脸部打码以及解码\"></a> 脸部打码以及解码</h3>\n<p>使用掩码和按位运算方式实现对脸部打码和解码实例<br />\n<a href=\"opencv/%E8%84%B8%E9%83%A8%E6%89%93%E7%A0%81%E4%BB%A5%E5%8F%8A%E8%A7%A3%E7%A0%81.py\">demo</a></p>\n<h2 id=\"色彩空间类型转换\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间类型转换\"></a> 色彩空间类型转换</h2>\n<p>色彩空间类型转换就是将图像的一个色彩空间转换到另一个色彩空间，比如opencv处理图像是，可能会在RGB色彩空间和HSV色彩空间之间进行转换。在进行特征提取计算距离时，，往往会将图像RGB色彩空间转换成灰度色彩空间，也可能要将色彩空间的图像转换成二值图像</p>\n<h3 id=\"色彩空间基础\"><a class=\"markdownIt-Anchor\" href=\"#色彩空间基础\"></a> 色彩空间基础</h3>\n<p>比较常见的色彩空间：</p>\n<ul>\n<li>GRAY色彩空间，也叫灰度空间 ，与RGB色彩空间的转换关系式 ： <code>GRAY =0.299×R +0.587*G +0.114*B</code></li>\n<li>XYZ色彩空间，一中便于计算的色彩空间</li>\n<li>YCrCb色彩空间</li>\n<li>HSV色彩空间：一种面向视觉感知的颜色模型；从心理学和视觉感知的角度出发，指出人眼的色彩和知觉主要包括三要素：色调Hue，饱和度Saturation,亮度Value</li>\n<li>HLS色彩空间： 包括三要素，色调Hue,光亮度lightness,饱和度Saturation</li>\n</ul>\n<h3 id=\"类型转换函数-hsv色彩空间讨论-alpha通道\"><a class=\"markdownIt-Anchor\" href=\"#类型转换函数-hsv色彩空间讨论-alpha通道\"></a> 类型转换函数、HSV色彩空间讨论、alpha通道</h3>\n<p><a href=\"oepncv/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.py\">demo</a></p>\n<p>dst = cv2.cvtColor(src,code,[,dstcn])</p>\n<pre><code>code表示色彩空间转换码\ndstCn目标图像的通道数，如果为默认的零，则通道数自动通过原始输入图像和code得到\n</code></pre>\n<p>alpha通道：在BGR色彩空间三个通道的基础上，还可以添加一个A通道，也叫做alpha通道，表示透明度。这四个通道的色彩空间也被称为BGRA色彩空间，png图像是一种典型的4通道图像。A的值范围[0,255]，从透明到不透明，默认值为255，即100%不透明</p>\n<h2 id=\"几何变换\"><a class=\"markdownIt-Anchor\" href=\"#几何变换\"></a> <strong>几何变换</strong></h2>\n<h3 id=\"缩放\"><a class=\"markdownIt-Anchor\" href=\"#缩放\"></a> <strong>缩放</strong></h3>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv.resize(src,dsize , fx,fy,interpolation)</span><br><span class=\"line\">  src:缩放的原始图像</span><br><span class=\"line\">  dsize：输出图像大小</span><br><span class=\"line\">  fx：水平方向的缩放比例</span><br><span class=\"line\">  fy:垂直方向的缩放比例</span><br><span class=\"line\">  interpolation：代表插值方式</span><br><span class=\"line\"><span class=\"code\">    缩放图像时，INTER_AREA能达到最好效果</span></span><br><span class=\"line\"><span class=\"code\">    放大图像时，INTER_CUBIC 和INTER_LINEAR 都能取得较好的效果</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"旋转\"><a class=\"markdownIt-Anchor\" href=\"#旋转\"></a> <strong>旋转</strong></h3>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst &#x3D; cv2.flip(src,flipCode)</span><br><span class=\"line\">  flipCode 旋转类型：</span><br><span class=\"line\">  0，绕x轴旋转</span><br><span class=\"line\">  正数，绕y轴旋转</span><br><span class=\"line\">  负数，绕x，y同时旋转</span><br></pre></td></tr></table></figure>\n<h3 id=\"仿射\"><a class=\"markdownIt-Anchor\" href=\"#仿射\"></a> <strong>仿射</strong></h3>\n<p>仿射变换是指图像可以通过一系列的几何变换来实现平移、旋转等多种操作</p>\n<p>该变换能够保持图像的平直性和平行性</p>\n<p>仿射 = 平移 + 旋转</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dst = cv2.warpAffine(src, M, dsize, flags, borderMode, borderValue)</span><br><span class=\"line\">M:代表一个2x3的变换矩阵</span><br><span class=\"line\">dsize:代表输出图像的尺寸大小</span><br><span class=\"line\">flags:代表插值方式，默认INTER_LINEAR</span><br><span class=\"line\">borderMode:代表边类型</span><br><span class=\"line\"></span><br><span class=\"line\">borderValue:代表边界值，默认0</span><br></pre></td></tr></table></figure>\n<h3 id=\"透视\"><a class=\"markdownIt-Anchor\" href=\"#透视\"></a> <strong>透视</strong></h3>\n<h3 id=\"重映射\"><a class=\"markdownIt-Anchor\" href=\"#重映射\"></a> <strong>重映射</strong></h3>\n<h2 id=\"阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#阈值处理\"></a> <strong>阈值处理</strong></h2>\n<h3 id=\"threldhold函数\"><a class=\"markdownIt-Anchor\" href=\"#threldhold函数\"></a> <strong>threldhold函数</strong></h3>\n<h3 id=\"自适应阈值处理\"><a class=\"markdownIt-Anchor\" href=\"#自适应阈值处理\"></a> <strong>自适应阈值处理</strong></h3>\n<h3 id=\"otsu处理\"><a class=\"markdownIt-Anchor\" href=\"#otsu处理\"></a> <strong>otsu处理</strong></h3>\n<h2 id=\"图像平滑处理\"><a class=\"markdownIt-Anchor\" href=\"#图像平滑处理\"></a> <strong>图像平滑处理</strong></h2>\n<h3 id=\"均值滤-波\"><a class=\"markdownIt-Anchor\" href=\"#均值滤-波\"></a> <strong>均值滤  波</strong></h3>\n<h3 id=\"方框滤波\"><a class=\"markdownIt-Anchor\" href=\"#方框滤波\"></a> <strong>方框滤波</strong></h3>\n<h3 id=\"高斯滤波\"><a class=\"markdownIt-Anchor\" href=\"#高斯滤波\"></a> <strong>高斯滤波</strong></h3>\n<h3 id=\"中值滤波\"><a class=\"markdownIt-Anchor\" href=\"#中值滤波\"></a> <strong>中值滤波</strong></h3>\n<h3 id=\"双边滤波\"><a class=\"markdownIt-Anchor\" href=\"#双边滤波\"></a> <strong>双边滤波</strong></h3>\n<h3 id=\"2d-卷积\"><a class=\"markdownIt-Anchor\" href=\"#2d-卷积\"></a> <strong>2D 卷积</strong></h3>\n<h2 id=\"形态学操作\"><a class=\"markdownIt-Anchor\" href=\"#形态学操作\"></a> <strong>形态学操作</strong></h2>\n<h3 id=\"腐蚀\"><a class=\"markdownIt-Anchor\" href=\"#腐蚀\"></a> <strong>腐蚀</strong></h3>\n<h3 id=\"膨胀\"><a class=\"markdownIt-Anchor\" href=\"#膨胀\"></a> <strong>膨胀</strong></h3>\n<h3 id=\"通用形态学函数\"><a class=\"markdownIt-Anchor\" href=\"#通用形态学函数\"></a> <strong>通用形态学函数</strong></h3>\n<h3 id=\"开运算\"><a class=\"markdownIt-Anchor\" href=\"#开运算\"></a> <strong>开运算</strong></h3>\n<h3 id=\"闭运算\"><a class=\"markdownIt-Anchor\" href=\"#闭运算\"></a> <strong>闭运算</strong></h3>\n<h3 id=\"形态学梯度运算\"><a class=\"markdownIt-Anchor\" href=\"#形态学梯度运算\"></a> <strong>形态学梯度运算</strong></h3>\n<h3 id=\"礼貌运算\"><a class=\"markdownIt-Anchor\" href=\"#礼貌运算\"></a> <strong>礼貌运算</strong></h3>\n<h3 id=\"黑帽运算\"><a class=\"markdownIt-Anchor\" href=\"#黑帽运算\"></a> <strong>黑帽运算</strong></h3>\n<h3 id=\"核函数\"><a class=\"markdownIt-Anchor\" href=\"#核函数\"></a> <strong>核函数</strong></h3>\n<h2 id=\"图像梯度\"><a class=\"markdownIt-Anchor\" href=\"#图像梯度\"></a> <strong>图像梯度</strong></h2>\n<h3 id=\"sobel-理论基础\"><a class=\"markdownIt-Anchor\" href=\"#sobel-理论基础\"></a> <strong>sobel 理论基础</strong></h3>\n<h3 id=\"sobel算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#sobel算子及函数使用\"></a> <strong>sobel算子及函数使用</strong></h3>\n<h3 id=\"scharr-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#scharr-算子及函数使用\"></a> <strong>scharr 算子及函数使用</strong></h3>\n<h3 id=\"laplacian-算子及函数使用\"><a class=\"markdownIt-Anchor\" href=\"#laplacian-算子及函数使用\"></a> <strong>Laplacian 算子及函数使用</strong></h3>\n<h3 id=\"算子总结\"><a class=\"markdownIt-Anchor\" href=\"#算子总结\"></a> <strong>算子总结</strong></h3>\n<h2 id=\"canny边缘检测\"><a class=\"markdownIt-Anchor\" href=\"#canny边缘检测\"></a> <strong>canny边缘检测</strong></h2>\n<h3 id=\"canny边缘检测理论\"><a class=\"markdownIt-Anchor\" href=\"#canny边缘检测理论\"></a> <strong>canny边缘检测理论</strong></h3>\n<h3 id=\"canny函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#canny函数及使用\"></a> <strong>canny函数及使用</strong></h3>\n<h2 id=\"图像金字塔\"><a class=\"markdownIt-Anchor\" href=\"#图像金字塔\"></a> <strong>图像金字塔</strong></h2>\n<h3 id=\"理论基础\"><a class=\"markdownIt-Anchor\" href=\"#理论基础\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"pyrdown函数及使用\"><a class=\"markdownIt-Anchor\" href=\"#pyrdown函数及使用\"></a> <strong>pyrDown函数及使用</strong></h3>\n<h3 id=\"采样可逆行研究\"><a class=\"markdownIt-Anchor\" href=\"#采样可逆行研究\"></a> <strong>采样可逆行研究</strong></h3>\n<h3 id=\"拉普拉斯金字塔\"><a class=\"markdownIt-Anchor\" href=\"#拉普拉斯金字塔\"></a> <strong>拉普拉斯金字塔</strong></h3>\n<h2 id=\"图像轮廓\"><a class=\"markdownIt-Anchor\" href=\"#图像轮廓\"></a> <strong>图像轮廓</strong></h2>\n<h3 id=\"查找并绘制轮廓\"><a class=\"markdownIt-Anchor\" href=\"#查找并绘制轮廓\"></a> <strong>查找并绘制轮廓</strong></h3>\n<h3 id=\"矩特征\"><a class=\"markdownIt-Anchor\" href=\"#矩特征\"></a> <strong>矩特征</strong></h3>\n<h3 id=\"hu钜\"><a class=\"markdownIt-Anchor\" href=\"#hu钜\"></a> <strong>hu钜</strong></h3>\n<h3 id=\"轮廓拟合\"><a class=\"markdownIt-Anchor\" href=\"#轮廓拟合\"></a> <strong>轮廓拟合</strong></h3>\n<h3 id=\"凸包\"><a class=\"markdownIt-Anchor\" href=\"#凸包\"></a> <strong>凸包</strong></h3>\n<h3 id=\"利用形状场景算法比较轮廓\"><a class=\"markdownIt-Anchor\" href=\"#利用形状场景算法比较轮廓\"></a> <strong>利用形状场景算法比较轮廓</strong></h3>\n<h3 id=\"轮廓的特征值\"><a class=\"markdownIt-Anchor\" href=\"#轮廓的特征值\"></a> <strong>轮廓的特征值</strong></h3>\n<h2 id=\"傅里叶变换\"><a class=\"markdownIt-Anchor\" href=\"#傅里叶变换\"></a> <strong>傅里叶变换</strong></h2>\n<h3 id=\"理论基础-2\"><a class=\"markdownIt-Anchor\" href=\"#理论基础-2\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\"></a> <strong>实现</strong></h3>\n<h2 id=\"模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配\"></a> <strong>模板匹配</strong></h2>\n<h3 id=\"模板匹配基础\"><a class=\"markdownIt-Anchor\" href=\"#模板匹配基础\"></a> <strong>模板匹配基础</strong></h3>\n<h3 id=\"多模板匹配\"><a class=\"markdownIt-Anchor\" href=\"#多模板匹配\"></a> <strong>多模板匹配</strong></h3>\n<h2 id=\"霍夫变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫变换\"></a> <strong>霍夫变换</strong></h2>\n<h3 id=\"霍夫直线变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫直线变换\"></a> 霍夫直线变换</h3>\n<h3 id=\"霍夫圆形变换\"><a class=\"markdownIt-Anchor\" href=\"#霍夫圆形变换\"></a> <strong>霍夫圆形变换</strong></h3>\n<h2 id=\"图像分割与提取\"><a class=\"markdownIt-Anchor\" href=\"#图像分割与提取\"></a> <strong>图像分割与提取</strong></h2>\n<h3 id=\"用分水岭算法实现图像分割\"><a class=\"markdownIt-Anchor\" href=\"#用分水岭算法实现图像分割\"></a> <strong>用分水岭算法实现图像分割</strong></h3>\n<h3 id=\"交互式前景提取\"><a class=\"markdownIt-Anchor\" href=\"#交互式前景提取\"></a> <strong>交互式前景提取</strong></h3>\n<h2 id=\"视频处理\"><a class=\"markdownIt-Anchor\" href=\"#视频处理\"></a> <strong>视频处理</strong></h2>\n<h3 id=\"videocapture类\"><a class=\"markdownIt-Anchor\" href=\"#videocapture类\"></a> <strong>VideoCapture类</strong></h3>\n<h3 id=\"viedeowriter类\"><a class=\"markdownIt-Anchor\" href=\"#viedeowriter类\"></a> <strong>ViedeoWriter类</strong></h3>\n<h3 id=\"视频操作基础\"><a class=\"markdownIt-Anchor\" href=\"#视频操作基础\"></a> <strong>视频操作基础</strong></h3>\n<h2 id=\"绘图机交互\"><a class=\"markdownIt-Anchor\" href=\"#绘图机交互\"></a> <strong>绘图机交互</strong></h2>\n<h3 id=\"绘图基础\"><a class=\"markdownIt-Anchor\" href=\"#绘图基础\"></a> <strong>绘图基础</strong></h3>\n<h3 id=\"鼠标交互\"><a class=\"markdownIt-Anchor\" href=\"#鼠标交互\"></a> <strong>鼠标交互</strong></h3>\n<h3 id=\"滚动条\"><a class=\"markdownIt-Anchor\" href=\"#滚动条\"></a> <strong>滚动条</strong></h3>\n<h2 id=\"k近邻算法\"><a class=\"markdownIt-Anchor\" href=\"#k近邻算法\"></a> <strong>k近邻算法</strong></h2>\n<h3 id=\"理论基础-3\"><a class=\"markdownIt-Anchor\" href=\"#理论基础-3\"></a> <strong>理论基础</strong></h3>\n<h3 id=\"计算\"><a class=\"markdownIt-Anchor\" href=\"#计算\"></a> <strong>计算</strong></h3>\n<h3 id=\"手写数字识别原理\"><a class=\"markdownIt-Anchor\" href=\"#手写数字识别原理\"></a> <strong>手写数字识别原理</strong></h3>\n<h3 id=\"自定义函数手写数字识别\"><a class=\"markdownIt-Anchor\" href=\"#自定义函数手写数字识别\"></a> <strong>自定义函数手写数字识别</strong></h3>\n<h3 id=\"k近邻模块的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#k近邻模块的基本使用\"></a> <strong>k近邻模块的基本使用</strong></h3>\n<h3 id=\"k-近邻手写板数字的识别\"><a class=\"markdownIt-Anchor\" href=\"#k-近邻手写板数字的识别\"></a> <strong>K 近邻手写板数字的识别</strong></h3>\n<p>K<br />\nK**<br />\nK<br />\nK*<br />\nK</p>\n<h3 id=\"svm案例介绍\"><a class=\"markdownIt-Anchor\" href=\"#svm案例介绍\"></a> <strong>svm案例介绍</strong></h3>\n<h2 id=\"k均值聚类\"><a class=\"markdownIt-Anchor\" href=\"#k均值聚类\"></a> <strong>k均值聚类</strong></h2>"},{"_content":"# markdown疑难杂症\n\n\n## 1. 单文件怎么生成目录，并实现点击即可定位\n\n### 方法1:手动添加\n    \n原始格式如下所示，效果正如当前页面所生成的问题目录格式，原理其实是类似于插入链接的格式。插入链接格式\n\n[点击跳转我的linux笔记](https://gitee.com/heronwang/linux_notes)\n\n这里的链接的原始格式：\n<!--more-->\n```md\n[点击跳转我的linux笔记](https://gitee.com/heronwang/linux_notes)\n```\n\n\n```md\n[点击跳转](#id值)\n```\n\n整个目录模板格式如下：\n\n```md\n# <center> 标题 </center>\n----\n## 目录\n1. [目录1](#jump1)\n2. [目录2](#jump2)\n\n---\n### <a id=\"jump1\">1. 目录1</a>\n---\n### <a id=\"jump2\">2. 目录2</a>\n```\n\n### 方法2:使用vscode插件:Markdown-toc自动生成（简单易用）\n\n- 在vscode扩展中搜索 Markdown-toc,点击安装。\n- 进入vscode的系统设置settings,搜索eol,将换行设置为/n,这里我是linux系统设置为/n,windows系统设置为 /r/n 。\n- 然后回到markdown文档中，右键选择 Markdown toc:insert/update，即可根据标题自动生成目录\n\n### 方法3:使用markdown all in one 支持的toc创建toc\n    \n  打开相应的文件，ctrl +shift+ p 调出命令行，搜索toc，执行Markdown:create content of table\n\n\n## 2. 原始格式输出\n\n使用 ``` （ ` 位于esc的下面一个按键）将代码块包裹起来即可原始格式输出markdown，如下所示：\n\n  ````md\n  ```markdown\n    # 一级标题\n    ## 二级标题\n    ### 三级标题\n  ```\n  ````\n\n## 怎么使用flow流程图\n\n示例：\n````\n```flow    \n//这里定义结构以及节点等\nst=>start: 开始\ne=>end: 结束\nop=>operation: 我的操作\ncond=>condition: 确认？\nop2=>operation: 操作2\n\n//这里写流程\nst->op->cond->op2\ncond(yes)->e\ncond(no)->op2\n\n```\n````\n\n显示如下所示(vscode需要使用MPE插件预览)：\n\n\n```flow    \n//这里定义结构以及节点等\nst=>start: 开始\ne=>end: 结束\nop=>operation: 我的操作\ncond=>condition: 确认？\nop2=>operation: 操作2\n\n//这里写流程\nst->op->cond->op2\ncond(yes)->e\ncond(no)->op2\n```\n\n## 怎么使用math公式\n\n1. 矩阵使用：\n  `$这里单行公式$`\n  \n  ```\n  $$\n  这里添加多行公式\n  $$\n  ```\n\n$$\n  平移矩阵：M=\n  \\left[\\begin{matrix}\n   1 & 0 & 100 \\\\\n   0 & 1 & 100 \\\\\n  \\end{matrix} \\right]\\tag{A}\n$$\n\n## 怎么使用表格\n\n实例如下，3列7行的表格：\n\n```\n| Column1 | Column2 | Column3 |\n|---------|---------|---------|\n| Row1    |         |         |\n| Row2    | dfd     |         |\n| Row3    |         |         |\n| Row4    |         |         |\n| Row5    |         |         |\n| Row6    |         |         |\n| Row7    |         |         |\n```\n\n显示如下：\n\n| Column1 | Column2 | Column3 |\n|---------|---------|---------|\n| Row1    |         |         |\n| Row2    | dfd     |         |\n| Row3    |         |         |\n| Row4    |         |         |\n| Row5    |         |         |\n| Row6    |         |         |\n| Row7    |         |         |\n\n\n相关的快捷键\n`alt + m` 打开生成markdown结构的的菜单，选择table输入要生成的行列\n\n`ctrl + d  t` 均与分布表格单元格（相当于美化表格）\n\n","source":"_posts/markdown/markdown笔记.md","raw":"# markdown疑难杂症\n\n\n## 1. 单文件怎么生成目录，并实现点击即可定位\n\n### 方法1:手动添加\n    \n原始格式如下所示，效果正如当前页面所生成的问题目录格式，原理其实是类似于插入链接的格式。插入链接格式\n\n[点击跳转我的linux笔记](https://gitee.com/heronwang/linux_notes)\n\n这里的链接的原始格式：\n<!--more-->\n```md\n[点击跳转我的linux笔记](https://gitee.com/heronwang/linux_notes)\n```\n\n\n```md\n[点击跳转](#id值)\n```\n\n整个目录模板格式如下：\n\n```md\n# <center> 标题 </center>\n----\n## 目录\n1. [目录1](#jump1)\n2. [目录2](#jump2)\n\n---\n### <a id=\"jump1\">1. 目录1</a>\n---\n### <a id=\"jump2\">2. 目录2</a>\n```\n\n### 方法2:使用vscode插件:Markdown-toc自动生成（简单易用）\n\n- 在vscode扩展中搜索 Markdown-toc,点击安装。\n- 进入vscode的系统设置settings,搜索eol,将换行设置为/n,这里我是linux系统设置为/n,windows系统设置为 /r/n 。\n- 然后回到markdown文档中，右键选择 Markdown toc:insert/update，即可根据标题自动生成目录\n\n### 方法3:使用markdown all in one 支持的toc创建toc\n    \n  打开相应的文件，ctrl +shift+ p 调出命令行，搜索toc，执行Markdown:create content of table\n\n\n## 2. 原始格式输出\n\n使用 ``` （ ` 位于esc的下面一个按键）将代码块包裹起来即可原始格式输出markdown，如下所示：\n\n  ````md\n  ```markdown\n    # 一级标题\n    ## 二级标题\n    ### 三级标题\n  ```\n  ````\n\n## 怎么使用flow流程图\n\n示例：\n````\n```flow    \n//这里定义结构以及节点等\nst=>start: 开始\ne=>end: 结束\nop=>operation: 我的操作\ncond=>condition: 确认？\nop2=>operation: 操作2\n\n//这里写流程\nst->op->cond->op2\ncond(yes)->e\ncond(no)->op2\n\n```\n````\n\n显示如下所示(vscode需要使用MPE插件预览)：\n\n\n```flow    \n//这里定义结构以及节点等\nst=>start: 开始\ne=>end: 结束\nop=>operation: 我的操作\ncond=>condition: 确认？\nop2=>operation: 操作2\n\n//这里写流程\nst->op->cond->op2\ncond(yes)->e\ncond(no)->op2\n```\n\n## 怎么使用math公式\n\n1. 矩阵使用：\n  `$这里单行公式$`\n  \n  ```\n  $$\n  这里添加多行公式\n  $$\n  ```\n\n$$\n  平移矩阵：M=\n  \\left[\\begin{matrix}\n   1 & 0 & 100 \\\\\n   0 & 1 & 100 \\\\\n  \\end{matrix} \\right]\\tag{A}\n$$\n\n## 怎么使用表格\n\n实例如下，3列7行的表格：\n\n```\n| Column1 | Column2 | Column3 |\n|---------|---------|---------|\n| Row1    |         |         |\n| Row2    | dfd     |         |\n| Row3    |         |         |\n| Row4    |         |         |\n| Row5    |         |         |\n| Row6    |         |         |\n| Row7    |         |         |\n```\n\n显示如下：\n\n| Column1 | Column2 | Column3 |\n|---------|---------|---------|\n| Row1    |         |         |\n| Row2    | dfd     |         |\n| Row3    |         |         |\n| Row4    |         |         |\n| Row5    |         |         |\n| Row6    |         |         |\n| Row7    |         |         |\n\n\n相关的快捷键\n`alt + m` 打开生成markdown结构的的菜单，选择table输入要生成的行列\n\n`ctrl + d  t` 均与分布表格单元格（相当于美化表格）\n\n","slug":"markdown/markdown笔记","published":1,"date":"2020-06-13T09:00:03.250Z","updated":"2020-06-13T20:11:10.591Z","title":"markdown/markdown笔记","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbj98y08000clkvo9hx5f42g","content":"<h1 id=\"markdown疑难杂症\"><a class=\"markdownIt-Anchor\" href=\"#markdown疑难杂症\"></a> markdown疑难杂症</h1>\n<h2 id=\"1-单文件怎么生成目录并实现点击即可定位\"><a class=\"markdownIt-Anchor\" href=\"#1-单文件怎么生成目录并实现点击即可定位\"></a> 1. 单文件怎么生成目录，并实现点击即可定位</h2>\n<h3 id=\"方法1手动添加\"><a class=\"markdownIt-Anchor\" href=\"#方法1手动添加\"></a> 方法1:手动添加</h3>\n<p>原始格式如下所示，效果正如当前页面所生成的问题目录格式，原理其实是类似于插入链接的格式。插入链接格式</p>\n<p><a href=\"https://gitee.com/heronwang/linux_notes\" target=\"_blank\" rel=\"noopener\">点击跳转我的linux笔记</a></p>\n<p>这里的链接的原始格式：</p>\n<a id=\"more\"></a>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">点击跳转我的linux笔记</span>](<span class=\"link\">https://gitee.com/heronwang/linux_notes</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">点击跳转</span>](<span class=\"link\">#id值</span>)</span><br></pre></td></tr></table></figure>\n<p>整个目录模板格式如下：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># &lt;center&gt; 标题 &lt;/center&gt;</span></span><br><span class=\"line\">----</span><br><span class=\"line\"><span class=\"section\">## 目录</span></span><br><span class=\"line\"><span class=\"bullet\">1. </span>[<span class=\"string\">目录1</span>](<span class=\"link\">#jump1</span>)</span><br><span class=\"line\"><span class=\"bullet\">2. </span>[<span class=\"string\">目录2</span>](<span class=\"link\">#jump2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\">### &lt;a id=\"jump1\"&gt;1. 目录1&lt;/a&gt;</span></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\">### &lt;a id=\"jump2\"&gt;2. 目录2&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"方法2使用vscode插件markdown-toc自动生成简单易用\"><a class=\"markdownIt-Anchor\" href=\"#方法2使用vscode插件markdown-toc自动生成简单易用\"></a> 方法2:使用vscode插件:Markdown-toc自动生成（简单易用）</h3>\n<ul>\n<li>在vscode扩展中搜索 Markdown-toc,点击安装。</li>\n<li>进入vscode的系统设置settings,搜索eol,将换行设置为/n,这里我是linux系统设置为/n,windows系统设置为 /r/n 。</li>\n<li>然后回到markdown文档中，右键选择 Markdown toc:insert/update，即可根据标题自动生成目录</li>\n</ul>\n<h3 id=\"方法3使用markdown-all-in-one-支持的toc创建toc\"><a class=\"markdownIt-Anchor\" href=\"#方法3使用markdown-all-in-one-支持的toc创建toc\"></a> 方法3:使用markdown all in one 支持的toc创建toc</h3>\n<p>打开相应的文件，ctrl +shift+ p 调出命令行，搜索toc，执行Markdown:create content of table</p>\n<h2 id=\"2-原始格式输出\"><a class=\"markdownIt-Anchor\" href=\"#2-原始格式输出\"></a> 2. 原始格式输出</h2>\n<p>使用 ``` （ ` 位于esc的下面一个按键）将代码块包裹起来即可原始格式输出markdown，如下所示：</p>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```markdown</span></span><br><span class=\"line\"><span class=\"code\">  # 一级标题</span></span><br><span class=\"line\"><span class=\"code\">  ## 二级标题</span></span><br><span class=\"line\"><span class=\"code\">  ### 三级标题</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么使用flow流程图\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用flow流程图\"></a> 怎么使用flow流程图</h2>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#96;&#96;&#96;flow    </span><br><span class=\"line\">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 我的操作</span><br><span class=\"line\">cond&#x3D;&gt;condition: 确认？</span><br><span class=\"line\">op2&#x3D;&gt;operation: 操作2</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;这里写流程</span><br><span class=\"line\">st-&gt;op-&gt;cond-&gt;op2</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op2</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure>\n<p>显示如下所示(vscode需要使用MPE插件预览)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 我的操作</span><br><span class=\"line\">cond&#x3D;&gt;condition: 确认？</span><br><span class=\"line\">op2&#x3D;&gt;operation: 操作2</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;这里写流程</span><br><span class=\"line\">st-&gt;op-&gt;cond-&gt;op2</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op2</span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么使用math公式\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用math公式\"></a> 怎么使用math公式</h2>\n<ol>\n<li>矩阵使用：<br />\n<code>$这里单行公式$</code></li>\n</ol>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">这里添加多行公式</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi mathvariant=\"normal\">平</mi><mi mathvariant=\"normal\">移</mi><mi mathvariant=\"normal\">矩</mi><mi mathvariant=\"normal\">阵</mi><mi mathvariant=\"normal\">：</mi><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">  平移矩阵：M=\n  \\left[\\begin{matrix}\n   1 &amp; 0 &amp; 100 \\\\\n   0 &amp; 1 &amp; 100 \\\\\n  \\end{matrix} \\right]\\tag{A}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">平</span><span class=\"mord cjk_fallback\">移</span><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">阵</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">A</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<h2 id=\"怎么使用表格\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用表格\"></a> 怎么使用表格</h2>\n<p>实例如下，3列7行的表格：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| Column1 | Column2 | Column3 |</span><br><span class=\"line\">|---------|---------|---------|</span><br><span class=\"line\">| Row1    |         |         |</span><br><span class=\"line\">| Row2    | dfd     |         |</span><br><span class=\"line\">| Row3    |         |         |</span><br><span class=\"line\">| Row4    |         |         |</span><br><span class=\"line\">| Row5    |         |         |</span><br><span class=\"line\">| Row6    |         |         |</span><br><span class=\"line\">| Row7    |         |         |</span><br></pre></td></tr></table></figure>\n<p>显示如下：</p>\n<table>\n<thead>\n<tr>\n<th>Column1</th>\n<th>Column2</th>\n<th>Column3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Row1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row2</td>\n<td>dfd</td>\n<td></td>\n</tr>\n<tr>\n<td>Row3</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row4</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row5</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row6</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row7</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>相关的快捷键<br />\n<code>alt + m</code> 打开生成markdown结构的的菜单，选择table输入要生成的行列</p>\n<p><code>ctrl + d t</code> 均与分布表格单元格（相当于美化表格）</p>\n","site":{"data":{}},"abbrlink":"3EWP21R","excerpt":"<h1 id=\"markdown疑难杂症\"><a class=\"markdownIt-Anchor\" href=\"#markdown疑难杂症\"></a> markdown疑难杂症</h1>\n<h2 id=\"1-单文件怎么生成目录并实现点击即可定位\"><a class=\"markdownIt-Anchor\" href=\"#1-单文件怎么生成目录并实现点击即可定位\"></a> 1. 单文件怎么生成目录，并实现点击即可定位</h2>\n<h3 id=\"方法1手动添加\"><a class=\"markdownIt-Anchor\" href=\"#方法1手动添加\"></a> 方法1:手动添加</h3>\n<p>原始格式如下所示，效果正如当前页面所生成的问题目录格式，原理其实是类似于插入链接的格式。插入链接格式</p>\n<p><a href=\"https://gitee.com/heronwang/linux_notes\" target=\"_blank\" rel=\"noopener\">点击跳转我的linux笔记</a></p>\n<p>这里的链接的原始格式：</p>","more":"<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">点击跳转我的linux笔记</span>](<span class=\"link\">https://gitee.com/heronwang/linux_notes</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">点击跳转</span>](<span class=\"link\">#id值</span>)</span><br></pre></td></tr></table></figure>\n<p>整个目录模板格式如下：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># &lt;center&gt; 标题 &lt;/center&gt;</span></span><br><span class=\"line\">----</span><br><span class=\"line\"><span class=\"section\">## 目录</span></span><br><span class=\"line\"><span class=\"bullet\">1. </span>[<span class=\"string\">目录1</span>](<span class=\"link\">#jump1</span>)</span><br><span class=\"line\"><span class=\"bullet\">2. </span>[<span class=\"string\">目录2</span>](<span class=\"link\">#jump2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\">### &lt;a id=\"jump1\"&gt;1. 目录1&lt;/a&gt;</span></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\">### &lt;a id=\"jump2\"&gt;2. 目录2&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"方法2使用vscode插件markdown-toc自动生成简单易用\"><a class=\"markdownIt-Anchor\" href=\"#方法2使用vscode插件markdown-toc自动生成简单易用\"></a> 方法2:使用vscode插件:Markdown-toc自动生成（简单易用）</h3>\n<ul>\n<li>在vscode扩展中搜索 Markdown-toc,点击安装。</li>\n<li>进入vscode的系统设置settings,搜索eol,将换行设置为/n,这里我是linux系统设置为/n,windows系统设置为 /r/n 。</li>\n<li>然后回到markdown文档中，右键选择 Markdown toc:insert/update，即可根据标题自动生成目录</li>\n</ul>\n<h3 id=\"方法3使用markdown-all-in-one-支持的toc创建toc\"><a class=\"markdownIt-Anchor\" href=\"#方法3使用markdown-all-in-one-支持的toc创建toc\"></a> 方法3:使用markdown all in one 支持的toc创建toc</h3>\n<p>打开相应的文件，ctrl +shift+ p 调出命令行，搜索toc，执行Markdown:create content of table</p>\n<h2 id=\"2-原始格式输出\"><a class=\"markdownIt-Anchor\" href=\"#2-原始格式输出\"></a> 2. 原始格式输出</h2>\n<p>使用 ``` （ ` 位于esc的下面一个按键）将代码块包裹起来即可原始格式输出markdown，如下所示：</p>\n  <figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```markdown</span></span><br><span class=\"line\"><span class=\"code\">  # 一级标题</span></span><br><span class=\"line\"><span class=\"code\">  ## 二级标题</span></span><br><span class=\"line\"><span class=\"code\">  ### 三级标题</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么使用flow流程图\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用flow流程图\"></a> 怎么使用flow流程图</h2>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#96;&#96;&#96;flow    </span><br><span class=\"line\">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 我的操作</span><br><span class=\"line\">cond&#x3D;&gt;condition: 确认？</span><br><span class=\"line\">op2&#x3D;&gt;operation: 操作2</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;这里写流程</span><br><span class=\"line\">st-&gt;op-&gt;cond-&gt;op2</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op2</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure>\n<p>显示如下所示(vscode需要使用MPE插件预览)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;这里定义结构以及节点等</span><br><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 我的操作</span><br><span class=\"line\">cond&#x3D;&gt;condition: 确认？</span><br><span class=\"line\">op2&#x3D;&gt;operation: 操作2</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;这里写流程</span><br><span class=\"line\">st-&gt;op-&gt;cond-&gt;op2</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op2</span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么使用math公式\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用math公式\"></a> 怎么使用math公式</h2>\n<ol>\n<li>矩阵使用：<br />\n<code>$这里单行公式$</code></li>\n</ol>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">这里添加多行公式</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi mathvariant=\"normal\">平</mi><mi mathvariant=\"normal\">移</mi><mi mathvariant=\"normal\">矩</mi><mi mathvariant=\"normal\">阵</mi><mi mathvariant=\"normal\">：</mi><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(A)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">  平移矩阵：M=\n  \\left[\\begin{matrix}\n   1 &amp; 0 &amp; 100 \\\\\n   0 &amp; 1 &amp; 100 \\\\\n  \\end{matrix} \\right]\\tag{A}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">平</span><span class=\"mord cjk_fallback\">移</span><span class=\"mord cjk_fallback\">矩</span><span class=\"mord cjk_fallback\">阵</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">A</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<h2 id=\"怎么使用表格\"><a class=\"markdownIt-Anchor\" href=\"#怎么使用表格\"></a> 怎么使用表格</h2>\n<p>实例如下，3列7行的表格：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| Column1 | Column2 | Column3 |</span><br><span class=\"line\">|---------|---------|---------|</span><br><span class=\"line\">| Row1    |         |         |</span><br><span class=\"line\">| Row2    | dfd     |         |</span><br><span class=\"line\">| Row3    |         |         |</span><br><span class=\"line\">| Row4    |         |         |</span><br><span class=\"line\">| Row5    |         |         |</span><br><span class=\"line\">| Row6    |         |         |</span><br><span class=\"line\">| Row7    |         |         |</span><br></pre></td></tr></table></figure>\n<p>显示如下：</p>\n<table>\n<thead>\n<tr>\n<th>Column1</th>\n<th>Column2</th>\n<th>Column3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Row1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row2</td>\n<td>dfd</td>\n<td></td>\n</tr>\n<tr>\n<td>Row3</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row4</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row5</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row6</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Row7</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>相关的快捷键<br />\n<code>alt + m</code> 打开生成markdown结构的的菜单，选择table输入要生成的行列</p>\n<p><code>ctrl + d t</code> 均与分布表格单元格（相当于美化表格）</p>"},{"_content":"# vscode常见问题 \n\n## 1.怎么修改 vscode 主题颜色？\n\n:smile:\n\n新下载的 vscode 默认的都是黑色的主题，颜色太暗看不清怎么办？ 直接修改 vscoe 颜色颜色即可，步骤如下：\n\nfile -> preference -> color theme -> 选择 light 即可\n也可以快捷键 ctrl + K + ctrl + T 直接打开颜色主题进行设置\n<!--more-->\n## 2.设置文件过程中自动保存\n\n对文件的修改每次有需要手动保存 ，有没有觉得好麻烦呀？只需按照下面步骤设置轻松实现 vscode 自动编辑保存功能\n\n    点击 vscode 界面右下角 -> settings -> 搜索框中搜索 auto save ->选择 afterDelay,同时设置延迟保存时间为 1000，大功告成\n\n## 3.设置滚轮可调节编辑区字体大小\n\n    在settings.json 文件中添加配置`\"editor.mouseWheelZoom\": true` 即可\n\n## 4.灵活好用的快捷建\n\n    灵活好用的系统或自定义的常用快捷键，如果系统没有该快捷建可自行配置：\n\n    vscode界面及编辑区快捷键\n\n    `ctrl + b` 显示/隐藏左侧状态栏\n\n    `ctrl + =/-/鼠标滚轮`  调整编辑区的字体大小 ，鼠标滚轮需要进行[问题3](#3设置滚轮可调节编辑区字体大小)所示的设置\n\n    `crrl + shift + -/=` 调整整个界面大小\n\n    `crrl + tab` 切换到最近打开文本中\n\n\n    分屏快捷键\n\n    `ctrl + \\` 拆分窗口组，（默认新建窗口位置在右侧）\n\n    `ctrl + \\  ctrl + 方向键` 选择新拆分出的窗口位置（自定义）\n\n    `ctrl + j  a` 将所有其他窗口的分屏关闭，并合并当当前窗口中，可实现当前代码窗口的最大化显示（(自定义)）\n\n    `ctrl + k  w` 关闭当前分屏及所有打开的文件\n\n    `ctrl + k o` 关闭其他分组的窗口，保留当前分组的窗口\n\n    markdown快捷键\n\n    `alt + m` 激活docs-markdown菜单,实现快捷制表等操作 \n       \n    `ctrl + shift + v` 切换 markdown 的编辑和预览模式\n\n## 5. 实用的扩展插件\n\n    `Markdown All in One` 在vscode中必备的markdown插件，支持预览，基本语法等\n\n    `markdownlint` markdown 语法智能提示，改善自己的md书写规范\n\n    `Markdown toc` 自动生成markdown目录树，简单实用\n\n    `markdown preview Enhancced` 预览增强，可支持显示复杂的公式，流程图，表格等\n\n    `vscode-icons` 美化文件浏览器中的文件/文件夹图标\n\n    `terminal` 下面状态栏添加终端快捷按钮\n\n    `python` python环境必备的插件，识别 .py文件关联到解释器，运行等功能\n\n## 6. 怎么拆分和合并分屏\n\n    见 [4.灵活好用的快捷建](#4灵活好用的快捷建) 中的分屏快捷键\n","source":"_posts/vscode/vscode笔记.md","raw":"# vscode常见问题 \n\n## 1.怎么修改 vscode 主题颜色？\n\n:smile:\n\n新下载的 vscode 默认的都是黑色的主题，颜色太暗看不清怎么办？ 直接修改 vscoe 颜色颜色即可，步骤如下：\n\nfile -> preference -> color theme -> 选择 light 即可\n也可以快捷键 ctrl + K + ctrl + T 直接打开颜色主题进行设置\n<!--more-->\n## 2.设置文件过程中自动保存\n\n对文件的修改每次有需要手动保存 ，有没有觉得好麻烦呀？只需按照下面步骤设置轻松实现 vscode 自动编辑保存功能\n\n    点击 vscode 界面右下角 -> settings -> 搜索框中搜索 auto save ->选择 afterDelay,同时设置延迟保存时间为 1000，大功告成\n\n## 3.设置滚轮可调节编辑区字体大小\n\n    在settings.json 文件中添加配置`\"editor.mouseWheelZoom\": true` 即可\n\n## 4.灵活好用的快捷建\n\n    灵活好用的系统或自定义的常用快捷键，如果系统没有该快捷建可自行配置：\n\n    vscode界面及编辑区快捷键\n\n    `ctrl + b` 显示/隐藏左侧状态栏\n\n    `ctrl + =/-/鼠标滚轮`  调整编辑区的字体大小 ，鼠标滚轮需要进行[问题3](#3设置滚轮可调节编辑区字体大小)所示的设置\n\n    `crrl + shift + -/=` 调整整个界面大小\n\n    `crrl + tab` 切换到最近打开文本中\n\n\n    分屏快捷键\n\n    `ctrl + \\` 拆分窗口组，（默认新建窗口位置在右侧）\n\n    `ctrl + \\  ctrl + 方向键` 选择新拆分出的窗口位置（自定义）\n\n    `ctrl + j  a` 将所有其他窗口的分屏关闭，并合并当当前窗口中，可实现当前代码窗口的最大化显示（(自定义)）\n\n    `ctrl + k  w` 关闭当前分屏及所有打开的文件\n\n    `ctrl + k o` 关闭其他分组的窗口，保留当前分组的窗口\n\n    markdown快捷键\n\n    `alt + m` 激活docs-markdown菜单,实现快捷制表等操作 \n       \n    `ctrl + shift + v` 切换 markdown 的编辑和预览模式\n\n## 5. 实用的扩展插件\n\n    `Markdown All in One` 在vscode中必备的markdown插件，支持预览，基本语法等\n\n    `markdownlint` markdown 语法智能提示，改善自己的md书写规范\n\n    `Markdown toc` 自动生成markdown目录树，简单实用\n\n    `markdown preview Enhancced` 预览增强，可支持显示复杂的公式，流程图，表格等\n\n    `vscode-icons` 美化文件浏览器中的文件/文件夹图标\n\n    `terminal` 下面状态栏添加终端快捷按钮\n\n    `python` python环境必备的插件，识别 .py文件关联到解释器，运行等功能\n\n## 6. 怎么拆分和合并分屏\n\n    见 [4.灵活好用的快捷建](#4灵活好用的快捷建) 中的分屏快捷键\n","slug":"vscode/vscode笔记","published":1,"date":"2020-06-13T09:00:03.254Z","updated":"2020-06-13T20:11:14.616Z","title":"vscode/vscode笔记","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbj98y09000dlkvo12uthlnv","content":"<h1 id=\"vscode常见问题\"><a class=\"markdownIt-Anchor\" href=\"#vscode常见问题\"></a> vscode常见问题</h1>\n<h2 id=\"1怎么修改-vscode-主题颜色\"><a class=\"markdownIt-Anchor\" href=\"#1怎么修改-vscode-主题颜色\"></a> 1.怎么修改 vscode 主题颜色？</h2>\n<p>😄</p>\n<p>新下载的 vscode 默认的都是黑色的主题，颜色太暗看不清怎么办？ 直接修改 vscoe 颜色颜色即可，步骤如下：</p>\n<p>file -&gt; preference -&gt; color theme -&gt; 选择 light 即可<br />\n也可以快捷键 ctrl + K + ctrl + T 直接打开颜色主题进行设置</p>\n<a id=\"more\"></a>\n<h2 id=\"2设置文件过程中自动保存\"><a class=\"markdownIt-Anchor\" href=\"#2设置文件过程中自动保存\"></a> 2.设置文件过程中自动保存</h2>\n<p>对文件的修改每次有需要手动保存 ，有没有觉得好麻烦呀？只需按照下面步骤设置轻松实现 vscode 自动编辑保存功能</p>\n<pre><code>点击 vscode 界面右下角 -&gt; settings -&gt; 搜索框中搜索 auto save -&gt;选择 afterDelay,同时设置延迟保存时间为 1000，大功告成\n</code></pre>\n<h2 id=\"3设置滚轮可调节编辑区字体大小\"><a class=\"markdownIt-Anchor\" href=\"#3设置滚轮可调节编辑区字体大小\"></a> 3.设置滚轮可调节编辑区字体大小</h2>\n<pre><code>在settings.json 文件中添加配置`&quot;editor.mouseWheelZoom&quot;: true` 即可\n</code></pre>\n<h2 id=\"4灵活好用的快捷建\"><a class=\"markdownIt-Anchor\" href=\"#4灵活好用的快捷建\"></a> 4.灵活好用的快捷建</h2>\n<pre><code>灵活好用的系统或自定义的常用快捷键，如果系统没有该快捷建可自行配置：\n\nvscode界面及编辑区快捷键\n\n`ctrl + b` 显示/隐藏左侧状态栏\n\n`ctrl + =/-/鼠标滚轮`  调整编辑区的字体大小 ，鼠标滚轮需要进行[问题3](#3设置滚轮可调节编辑区字体大小)所示的设置\n\n`crrl + shift + -/=` 调整整个界面大小\n\n`crrl + tab` 切换到最近打开文本中\n\n\n分屏快捷键\n\n`ctrl + \\` 拆分窗口组，（默认新建窗口位置在右侧）\n\n`ctrl + \\  ctrl + 方向键` 选择新拆分出的窗口位置（自定义）\n\n`ctrl + j  a` 将所有其他窗口的分屏关闭，并合并当当前窗口中，可实现当前代码窗口的最大化显示（(自定义)）\n\n`ctrl + k  w` 关闭当前分屏及所有打开的文件\n\n`ctrl + k o` 关闭其他分组的窗口，保留当前分组的窗口\n\nmarkdown快捷键\n\n`alt + m` 激活docs-markdown菜单,实现快捷制表等操作 \n   \n`ctrl + shift + v` 切换 markdown 的编辑和预览模式\n</code></pre>\n<h2 id=\"5-实用的扩展插件\"><a class=\"markdownIt-Anchor\" href=\"#5-实用的扩展插件\"></a> 5. 实用的扩展插件</h2>\n<pre><code>`Markdown All in One` 在vscode中必备的markdown插件，支持预览，基本语法等\n\n`markdownlint` markdown 语法智能提示，改善自己的md书写规范\n\n`Markdown toc` 自动生成markdown目录树，简单实用\n\n`markdown preview Enhancced` 预览增强，可支持显示复杂的公式，流程图，表格等\n\n`vscode-icons` 美化文件浏览器中的文件/文件夹图标\n\n`terminal` 下面状态栏添加终端快捷按钮\n\n`python` python环境必备的插件，识别 .py文件关联到解释器，运行等功能\n</code></pre>\n<h2 id=\"6-怎么拆分和合并分屏\"><a class=\"markdownIt-Anchor\" href=\"#6-怎么拆分和合并分屏\"></a> 6. 怎么拆分和合并分屏</h2>\n<pre><code>见 [4.灵活好用的快捷建](#4灵活好用的快捷建) 中的分屏快捷键\n</code></pre>\n","site":{"data":{}},"abbrlink":"2BJ0CRX","excerpt":"<h1 id=\"vscode常见问题\"><a class=\"markdownIt-Anchor\" href=\"#vscode常见问题\"></a> vscode常见问题</h1>\n<h2 id=\"1怎么修改-vscode-主题颜色\"><a class=\"markdownIt-Anchor\" href=\"#1怎么修改-vscode-主题颜色\"></a> 1.怎么修改 vscode 主题颜色？</h2>\n<p>😄</p>\n<p>新下载的 vscode 默认的都是黑色的主题，颜色太暗看不清怎么办？ 直接修改 vscoe 颜色颜色即可，步骤如下：</p>\n<p>file -&gt; preference -&gt; color theme -&gt; 选择 light 即可<br />\n也可以快捷键 ctrl + K + ctrl + T 直接打开颜色主题进行设置</p>","more":"<h2 id=\"2设置文件过程中自动保存\"><a class=\"markdownIt-Anchor\" href=\"#2设置文件过程中自动保存\"></a> 2.设置文件过程中自动保存</h2>\n<p>对文件的修改每次有需要手动保存 ，有没有觉得好麻烦呀？只需按照下面步骤设置轻松实现 vscode 自动编辑保存功能</p>\n<pre><code>点击 vscode 界面右下角 -&gt; settings -&gt; 搜索框中搜索 auto save -&gt;选择 afterDelay,同时设置延迟保存时间为 1000，大功告成\n</code></pre>\n<h2 id=\"3设置滚轮可调节编辑区字体大小\"><a class=\"markdownIt-Anchor\" href=\"#3设置滚轮可调节编辑区字体大小\"></a> 3.设置滚轮可调节编辑区字体大小</h2>\n<pre><code>在settings.json 文件中添加配置`&quot;editor.mouseWheelZoom&quot;: true` 即可\n</code></pre>\n<h2 id=\"4灵活好用的快捷建\"><a class=\"markdownIt-Anchor\" href=\"#4灵活好用的快捷建\"></a> 4.灵活好用的快捷建</h2>\n<pre><code>灵活好用的系统或自定义的常用快捷键，如果系统没有该快捷建可自行配置：\n\nvscode界面及编辑区快捷键\n\n`ctrl + b` 显示/隐藏左侧状态栏\n\n`ctrl + =/-/鼠标滚轮`  调整编辑区的字体大小 ，鼠标滚轮需要进行[问题3](#3设置滚轮可调节编辑区字体大小)所示的设置\n\n`crrl + shift + -/=` 调整整个界面大小\n\n`crrl + tab` 切换到最近打开文本中\n\n\n分屏快捷键\n\n`ctrl + \\` 拆分窗口组，（默认新建窗口位置在右侧）\n\n`ctrl + \\  ctrl + 方向键` 选择新拆分出的窗口位置（自定义）\n\n`ctrl + j  a` 将所有其他窗口的分屏关闭，并合并当当前窗口中，可实现当前代码窗口的最大化显示（(自定义)）\n\n`ctrl + k  w` 关闭当前分屏及所有打开的文件\n\n`ctrl + k o` 关闭其他分组的窗口，保留当前分组的窗口\n\nmarkdown快捷键\n\n`alt + m` 激活docs-markdown菜单,实现快捷制表等操作 \n   \n`ctrl + shift + v` 切换 markdown 的编辑和预览模式\n</code></pre>\n<h2 id=\"5-实用的扩展插件\"><a class=\"markdownIt-Anchor\" href=\"#5-实用的扩展插件\"></a> 5. 实用的扩展插件</h2>\n<pre><code>`Markdown All in One` 在vscode中必备的markdown插件，支持预览，基本语法等\n\n`markdownlint` markdown 语法智能提示，改善自己的md书写规范\n\n`Markdown toc` 自动生成markdown目录树，简单实用\n\n`markdown preview Enhancced` 预览增强，可支持显示复杂的公式，流程图，表格等\n\n`vscode-icons` 美化文件浏览器中的文件/文件夹图标\n\n`terminal` 下面状态栏添加终端快捷按钮\n\n`python` python环境必备的插件，识别 .py文件关联到解释器，运行等功能\n</code></pre>\n<h2 id=\"6-怎么拆分和合并分屏\"><a class=\"markdownIt-Anchor\" href=\"#6-怎么拆分和合并分屏\"></a> 6. 怎么拆分和合并分屏</h2>\n<pre><code>见 [4.灵活好用的快捷建](#4灵活好用的快捷建) 中的分屏快捷键\n</code></pre>"},{"_content":"# linux常见问题总结\n\n    这个是在使用linux/ubuntu 系统过程中，对遇到的问题进行记录总结，以备后用。好记性不如烂键盘！\n\n## 1. 怎么使用管理员权限打开文件夹?\n\n    > sudo natilus\n<!--more-->\n## 2. 浏览器看不了视频?\n\n    安装flash,执行一下命令前先需要设置允许安装未知版权的软件：  system settings -> software&updates -> ubuntu software -> 取消software restricted copyright or legal issues(第四个选项)\n\n    >  sudo apt-get install flashplugin-installer\n\n    安装html5音视频所支持的依赖\n  \n    > sudo apt-get update\n    >\n    > sudo apt-get install ubuntu-restricted-extras\n\n## 3. 多条命令执行区别\n\n    （1） 每个命令之间用;隔开\n\n    说明：各命令的执行给果，不会影响其它命令的执行。换句话说，各个命令都会执行，但不保证每个命令都执行成功。\n\n    （2） 每个命令之间用&&隔开\n\n    说明：若前面的命令执行成功，才会去执行后面的命令。这样可以保证所有的命令执行完毕后，执行过程都是成功的。\n\n    （3）每个命令之间用||隔开\n\n    说明：||是或的意思，只有前面的命令执行失败后才去执行下一条命令，直到成功执行一条命令为止。\n\n    （4）每个命令之间用&隔开\n    说明：&表示and，按顺序执行每条命令，但是前后不影响，也就是无论第一条是否执行失败，后一条总是要执行\n\n    （5）每个命令之间用|隔开\n    说明：管道符|，前一条执行的结果作为后一条执行语句的输入，依次执行。\n\n## 4.Ubuntu安装各种格式软件\n\n    安装.deb格式的软件\n    dpkg -i <package.deb>\n\n## 5. 快速回到桌面快捷键\n\n`ctrl + win + d` 快速回到桌面快捷键","source":"_posts/linux/linux命令.md","raw":"# linux常见问题总结\n\n    这个是在使用linux/ubuntu 系统过程中，对遇到的问题进行记录总结，以备后用。好记性不如烂键盘！\n\n## 1. 怎么使用管理员权限打开文件夹?\n\n    > sudo natilus\n<!--more-->\n## 2. 浏览器看不了视频?\n\n    安装flash,执行一下命令前先需要设置允许安装未知版权的软件：  system settings -> software&updates -> ubuntu software -> 取消software restricted copyright or legal issues(第四个选项)\n\n    >  sudo apt-get install flashplugin-installer\n\n    安装html5音视频所支持的依赖\n  \n    > sudo apt-get update\n    >\n    > sudo apt-get install ubuntu-restricted-extras\n\n## 3. 多条命令执行区别\n\n    （1） 每个命令之间用;隔开\n\n    说明：各命令的执行给果，不会影响其它命令的执行。换句话说，各个命令都会执行，但不保证每个命令都执行成功。\n\n    （2） 每个命令之间用&&隔开\n\n    说明：若前面的命令执行成功，才会去执行后面的命令。这样可以保证所有的命令执行完毕后，执行过程都是成功的。\n\n    （3）每个命令之间用||隔开\n\n    说明：||是或的意思，只有前面的命令执行失败后才去执行下一条命令，直到成功执行一条命令为止。\n\n    （4）每个命令之间用&隔开\n    说明：&表示and，按顺序执行每条命令，但是前后不影响，也就是无论第一条是否执行失败，后一条总是要执行\n\n    （5）每个命令之间用|隔开\n    说明：管道符|，前一条执行的结果作为后一条执行语句的输入，依次执行。\n\n## 4.Ubuntu安装各种格式软件\n\n    安装.deb格式的软件\n    dpkg -i <package.deb>\n\n## 5. 快速回到桌面快捷键\n\n`ctrl + win + d` 快速回到桌面快捷键","slug":"linux/linux命令","published":1,"date":"2020-06-13T09:00:03.250Z","updated":"2020-06-14T03:52:17.181Z","title":"linux/linux命令","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbj98y09000elkvo6j1s8g8v","content":"<h1 id=\"linux常见问题总结\"><a class=\"markdownIt-Anchor\" href=\"#linux常见问题总结\"></a> linux常见问题总结</h1>\n<pre><code>这个是在使用linux/ubuntu 系统过程中，对遇到的问题进行记录总结，以备后用。好记性不如烂键盘！\n</code></pre>\n<h2 id=\"1-怎么使用管理员权限打开文件夹\"><a class=\"markdownIt-Anchor\" href=\"#1-怎么使用管理员权限打开文件夹\"></a> 1. 怎么使用管理员权限打开文件夹?</h2>\n<pre><code>&gt; sudo natilus\n</code></pre>\n<a id=\"more\"></a>\n<h2 id=\"2-浏览器看不了视频\"><a class=\"markdownIt-Anchor\" href=\"#2-浏览器看不了视频\"></a> 2. 浏览器看不了视频?</h2>\n<pre><code>安装flash,执行一下命令前先需要设置允许安装未知版权的软件：  system settings -&gt; software&amp;updates -&gt; ubuntu software -&gt; 取消software restricted copyright or legal issues(第四个选项)\n\n&gt;  sudo apt-get install flashplugin-installer\n\n安装html5音视频所支持的依赖\n\n&gt; sudo apt-get update\n&gt;\n&gt; sudo apt-get install ubuntu-restricted-extras\n</code></pre>\n<h2 id=\"3-多条命令执行区别\"><a class=\"markdownIt-Anchor\" href=\"#3-多条命令执行区别\"></a> 3. 多条命令执行区别</h2>\n<pre><code>（1） 每个命令之间用;隔开\n\n说明：各命令的执行给果，不会影响其它命令的执行。换句话说，各个命令都会执行，但不保证每个命令都执行成功。\n\n（2） 每个命令之间用&amp;&amp;隔开\n\n说明：若前面的命令执行成功，才会去执行后面的命令。这样可以保证所有的命令执行完毕后，执行过程都是成功的。\n\n（3）每个命令之间用||隔开\n\n说明：||是或的意思，只有前面的命令执行失败后才去执行下一条命令，直到成功执行一条命令为止。\n\n（4）每个命令之间用&amp;隔开\n说明：&amp;表示and，按顺序执行每条命令，但是前后不影响，也就是无论第一条是否执行失败，后一条总是要执行\n\n（5）每个命令之间用|隔开\n说明：管道符|，前一条执行的结果作为后一条执行语句的输入，依次执行。\n</code></pre>\n<h2 id=\"4ubuntu安装各种格式软件\"><a class=\"markdownIt-Anchor\" href=\"#4ubuntu安装各种格式软件\"></a> 4.Ubuntu安装各种格式软件</h2>\n<pre><code>安装.deb格式的软件\ndpkg -i &lt;package.deb&gt;\n</code></pre>\n<h2 id=\"5-快速回到桌面快捷键\"><a class=\"markdownIt-Anchor\" href=\"#5-快速回到桌面快捷键\"></a> 5. 快速回到桌面快捷键</h2>\n<p><code>ctrl + win + d</code> 快速回到桌面快捷键</p>\n","site":{"data":{}},"abbrlink":"1JWEB46","excerpt":"<h1 id=\"linux常见问题总结\"><a class=\"markdownIt-Anchor\" href=\"#linux常见问题总结\"></a> linux常见问题总结</h1>\n<pre><code>这个是在使用linux/ubuntu 系统过程中，对遇到的问题进行记录总结，以备后用。好记性不如烂键盘！\n</code></pre>\n<h2 id=\"1-怎么使用管理员权限打开文件夹\"><a class=\"markdownIt-Anchor\" href=\"#1-怎么使用管理员权限打开文件夹\"></a> 1. 怎么使用管理员权限打开文件夹?</h2>\n<pre><code>&gt; sudo natilus\n</code></pre>","more":"<h2 id=\"2-浏览器看不了视频\"><a class=\"markdownIt-Anchor\" href=\"#2-浏览器看不了视频\"></a> 2. 浏览器看不了视频?</h2>\n<pre><code>安装flash,执行一下命令前先需要设置允许安装未知版权的软件：  system settings -&gt; software&amp;updates -&gt; ubuntu software -&gt; 取消software restricted copyright or legal issues(第四个选项)\n\n&gt;  sudo apt-get install flashplugin-installer\n\n安装html5音视频所支持的依赖\n\n&gt; sudo apt-get update\n&gt;\n&gt; sudo apt-get install ubuntu-restricted-extras\n</code></pre>\n<h2 id=\"3-多条命令执行区别\"><a class=\"markdownIt-Anchor\" href=\"#3-多条命令执行区别\"></a> 3. 多条命令执行区别</h2>\n<pre><code>（1） 每个命令之间用;隔开\n\n说明：各命令的执行给果，不会影响其它命令的执行。换句话说，各个命令都会执行，但不保证每个命令都执行成功。\n\n（2） 每个命令之间用&amp;&amp;隔开\n\n说明：若前面的命令执行成功，才会去执行后面的命令。这样可以保证所有的命令执行完毕后，执行过程都是成功的。\n\n（3）每个命令之间用||隔开\n\n说明：||是或的意思，只有前面的命令执行失败后才去执行下一条命令，直到成功执行一条命令为止。\n\n（4）每个命令之间用&amp;隔开\n说明：&amp;表示and，按顺序执行每条命令，但是前后不影响，也就是无论第一条是否执行失败，后一条总是要执行\n\n（5）每个命令之间用|隔开\n说明：管道符|，前一条执行的结果作为后一条执行语句的输入，依次执行。\n</code></pre>\n<h2 id=\"4ubuntu安装各种格式软件\"><a class=\"markdownIt-Anchor\" href=\"#4ubuntu安装各种格式软件\"></a> 4.Ubuntu安装各种格式软件</h2>\n<pre><code>安装.deb格式的软件\ndpkg -i &lt;package.deb&gt;\n</code></pre>\n<h2 id=\"5-快速回到桌面快捷键\"><a class=\"markdownIt-Anchor\" href=\"#5-快速回到桌面快捷键\"></a> 5. 快速回到桌面快捷键</h2>\n<p><code>ctrl + win + d</code> 快速回到桌面快捷键</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckbj98y06000alkvo3c0v3iyh","category_id":"ckbj98y1x000flkvo5ys9fccq","_id":"ckbj98yw2000mlkvoctku28ty"},{"post_id":"ckbj98y07000blkvo9jin12xz","category_id":"ckbj98yw1000jlkvo4bt7ed9k","_id":"ckbj98yw2000olkvo1vu088ob"},{"post_id":"ckbj98y08000clkvo9hx5f42g","category_id":"ckbj98yw2000nlkvo84pb8nrm","_id":"ckbj98yw3000qlkvoaq5j7kbm"},{"post_id":"ckbj98y09000dlkvo12uthlnv","category_id":"ckbj98yw2000plkvo5vbr97mc","_id":"ckbj98yw3000slkvoha5s1gd0"},{"post_id":"ckbj98y09000elkvo6j1s8g8v","category_id":"ckbj98yw3000rlkvofdk8hess","_id":"ckbj98yw3000tlkvo5f6i8rhg"}],"PostTag":[{"post_id":"ckbj98xyu0002lkvo9xi15ae8","tag_id":"ckbj98xyy0005lkvo7cpc5boj","_id":"ckbj98xz40008lkvo36h99mer"},{"post_id":"ckbj98xyu0002lkvo9xi15ae8","tag_id":"ckbj98xz30007lkvo103scc76","_id":"ckbj98xz50009lkvo02xka4x9"},{"post_id":"ckbj98y06000alkvo3c0v3iyh","tag_id":"ckbj98xyy0005lkvo7cpc5boj","_id":"ckbj98y1x000glkvoa9ew3w0g"},{"post_id":"ckbj98y07000blkvo9jin12xz","tag_id":"ckbj98xz30007lkvo103scc76","_id":"ckbj98yqw000ilkvo75gd45yj"},{"post_id":"ckbj98y09000elkvo6j1s8g8v","tag_id":"ckbj98y1x000hlkvohbko9ukd","_id":"ckbj98yw2000klkvocqnygxz0"},{"post_id":"ckbj98y09000elkvo6j1s8g8v","tag_id":"ckbj98xyy0005lkvo7cpc5boj","_id":"ckbj98yw2000llkvo5zwg25u7"}],"Tag":[{"name":"ubuntu","_id":"ckbj98xyy0005lkvo7cpc5boj"},{"name":"opencv","_id":"ckbj98xz30007lkvo103scc76"},{"name":"html5","_id":"ckbj98y1x000hlkvohbko9ukd"}]}}